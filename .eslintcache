[{"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\index.tsx":"1","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\routes.tsx":"2","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\index.ts":"3","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\registerModal.ts":"4","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\googleFirstLogin.ts":"5","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\index.ts":"6","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\index.ts":"7","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\index.ts":"8","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\mixin.ts":"9","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\themeColor.ts":"10","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\globalStyle.ts":"11","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\NavContainer.tsx":"12","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\MentorDetailContainer.tsx":"13","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AboutPage.tsx":"14","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\KobbubakDetailContainer.tsx":"15","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostList.tsx":"16","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AlcoholDetail.tsx":"17","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostWriting.tsx":"18","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\FeatherDetail.tsx":"19","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreList.tsx":"20","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostDetail.tsx":"21","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\MainPage.tsx":"22","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreDetail.tsx":"23","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\TodayRandom.tsx":"24","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\index.ts":"25","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\config.ts":"26","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard2.tsx":"27","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\Posts.tsx":"28","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\PostReply.tsx":"29","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\KobbubakTheme.tsx":"30","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard.tsx":"31","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\MetorTheme.tsx":"32","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\registerModal.ts":"33","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\googleFirstLogin.ts":"34","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\index.ts":"35","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\DeleteCommentModal.tsx":"36","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Login.tsx":"37","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\LoginForm.tsx":"38","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\GoogleLoginComponent.tsx":"39","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\PeoplePick.tsx":"40","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\SignupForm.tsx":"41","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Signup.tsx":"42","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\EditCommentModal.tsx":"43","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Nav.tsx":"44"},{"size":491,"mtime":1614155892973,"results":"45","hashOfConfig":"46"},{"size":1889,"mtime":1614155893015,"results":"47","hashOfConfig":"46"},{"size":214,"mtime":1614155893022,"results":"48","hashOfConfig":"46"},{"size":468,"mtime":1614155893023,"results":"49","hashOfConfig":"46"},{"size":347,"mtime":1614155893021,"results":"50","hashOfConfig":"46"},{"size":89,"mtime":1610800928136,"results":"51","hashOfConfig":"46"},{"size":208,"mtime":1612352299974,"results":"52","hashOfConfig":"46"},{"size":556,"mtime":1614155893011,"results":"53","hashOfConfig":"46"},{"size":667,"mtime":1610800928138,"results":"54","hashOfConfig":"46"},{"size":265,"mtime":1614155893024,"results":"55","hashOfConfig":"46"},{"size":1945,"mtime":1614166607121,"results":"56","hashOfConfig":"46"},{"size":855,"mtime":1614155892962,"results":"57","hashOfConfig":"46"},{"size":666,"mtime":1612352299969,"results":"58","hashOfConfig":"46"},{"size":3251,"mtime":1614258428428,"results":"59","hashOfConfig":"46"},{"size":687,"mtime":1612352299968,"results":"60","hashOfConfig":"46"},{"size":4013,"mtime":1614155892991,"results":"61","hashOfConfig":"46"},{"size":6095,"mtime":1614416917056,"results":"62","hashOfConfig":"46"},{"size":2472,"mtime":1614417119460,"results":"63","hashOfConfig":"46"},{"size":3266,"mtime":1614416942612,"results":"64","hashOfConfig":"46"},{"size":3176,"mtime":1614417252737,"results":"65","hashOfConfig":"46"},{"size":11937,"mtime":1614417070334,"results":"66","hashOfConfig":"46"},{"size":6587,"mtime":1614416979090,"results":"67","hashOfConfig":"46"},{"size":18181,"mtime":1614417131525,"results":"68","hashOfConfig":"46"},{"size":9360,"mtime":1614155893001,"results":"69","hashOfConfig":"46"},{"size":71,"mtime":1614155893019,"results":"70","hashOfConfig":"46"},{"size":99,"mtime":1614155892961,"results":"71","hashOfConfig":"46"},{"size":1280,"mtime":1614416845182,"results":"72","hashOfConfig":"46"},{"size":782,"mtime":1614416765304,"results":"73","hashOfConfig":"46"},{"size":1293,"mtime":1614416735185,"results":"74","hashOfConfig":"46"},{"size":641,"mtime":1614155893003,"results":"75","hashOfConfig":"46"},{"size":1468,"mtime":1614416873719,"results":"76","hashOfConfig":"46"},{"size":579,"mtime":1614155893004,"results":"77","hashOfConfig":"46"},{"size":300,"mtime":1614155893019,"results":"78","hashOfConfig":"46"},{"size":162,"mtime":1614155893018,"results":"79","hashOfConfig":"46"},{"size":509,"mtime":1614353891904,"results":"80","hashOfConfig":"46"},{"size":2436,"mtime":1614155892945,"results":"81","hashOfConfig":"46"},{"size":1816,"mtime":1614155892951,"results":"82","hashOfConfig":"46"},{"size":2802,"mtime":1614157096834,"results":"83","hashOfConfig":"46"},{"size":2830,"mtime":1614353659272,"results":"84","hashOfConfig":"46"},{"size":5796,"mtime":1614416644732,"results":"85","hashOfConfig":"46"},{"size":4248,"mtime":1614155892958,"results":"86","hashOfConfig":"46"},{"size":3857,"mtime":1614155892957,"results":"87","hashOfConfig":"46"},{"size":2679,"mtime":1614353874268,"results":"88","hashOfConfig":"46"},{"size":5320,"mtime":1614157346404,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1c02hgg",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"92"},"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\index.tsx",[],["188","189"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\routes.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\registerModal.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\googleFirstLogin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\mixin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\themeColor.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\globalStyle.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\NavContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\MentorDetailContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AboutPage.tsx",["190","191","192"],"import React, { useEffect, useState } from \"react\";\r\nimport AOS from \"aos\";\r\nimport \"./AboutPage.scss\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nexport default function AboutPage() {\r\n  const [iconListCheck, setIconListCheck] = useState<boolean>(false);\r\n  AOS.init({\r\n    duration: 1200,\r\n    delay: 400\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const iconClick = () => {\r\n    setIconListCheck(!iconListCheck);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"aboutPage\">\r\n        <div className=\"aboutTop\">\r\n          <div\r\n            className=\"aboutTopText\"\r\n            data-aos=\"fade-down\"\r\n            data-aos-duration=\"1500\"\r\n          >\r\n            <p>\r\n              <span className=\"hello\">안녕하세요</span>\r\n            </p>\r\n            <p>\r\n              저희는 <span>13기</span>\r\n            </p>\r\n            <p>\r\n              <span>코뿌박</span> 입니다\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"aboutCenter\"\r\n          data-aos=\"fade-up\"\r\n          data-aos-duration=\"1500\"\r\n        >\r\n          <div className=\"aboutCenterText\">\r\n            <img src=\"./images/about.png\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <div className=\"logoDiv\">\r\n          <img src=\"./images/weeeating_logo.png\" />\r\n          <a\r\n            className=\"clickTopText\"\r\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLSd4_kFB-XCsyNXT8F4OCHgv9GHm2r5cTtHhB9Z1UKPa6Ss3Wg/viewform?usp=sf_link\"\r\n            target=\"_blank\"\r\n          >\r\n            <p className=\"subwayText\">\r\n              이 글을 <span className=\"click\"> 클릭</span>해서\r\n            </p>\r\n            <p>위코더에게 추천해주고싶은</p>\r\n            <p>\r\n              여러분의 <span className=\"goodFood\">맛집</span>을 알려주세요 !\r\n            </p>\r\n          </a>\r\n        </div>\r\n        <div className=\"logoText\">\r\n          <p className=\"project\">© 2021 Project Weeeating</p>\r\n          <div className=\"iconList\">\r\n            {!iconListCheck ? (\r\n              <p>\r\n                사용한 저작권 무료 아이콘 목록\r\n                <span className=\"down\" onClick={iconClick}>\r\n                  ▼\r\n                </span>\r\n              </p>\r\n            ) : (\r\n              <>\r\n                <p>\r\n                  사용한 저작권 무료 아이콘 목록\r\n                  <span className=\"down\" onClick={iconClick}>\r\n                    ▲\r\n                  </span>\r\n                </p>\r\n                <div className=\"cpyright\">\r\n                  <p>https://www.flaticon.com/kr/free-icon/crown_891024 </p>\r\n                  <p>https://www.flaticon.com/kr/free-icon/soju_2090192</p>\r\n                  <p>\r\n                    https://www.flaticon.com/kr/free-icon/beer_701495?term=%EB%A7%A5%EC%A3%BC&page=1&position=14&related_id=701495&origin=search\r\n                  </p>\r\n                  <p>\r\n                    https://www.flaticon.com/free-icon/sake_863399?term=sake&page=1&position=5&related_id=863399&origin=search\r\n                  </p>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\KobbubakDetailContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostList.tsx",["193"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSignupActive, setFirstLogin } from \"../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../config\";\r\nimport Posts from \"./childComponents/Posts\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport axios from \"axios\";\r\nimport wemeok from \"../images/wemeoktalk3.png\";\r\nimport \"./PostList.scss\";\r\n\r\ninterface PostData {\r\n  posts: any;\r\n}\r\nexport default function App() {\r\n  const [posts, setPosts] = useState<PostData | any>([]);\r\n  const [activePage, setActivePage] = useState<any>(1);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    const fetchPosts = async () => {\r\n      await axios\r\n        .get(`${API}/board`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          setPosts(res.data);\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n          } else if (error.request) {\r\n            console.log(error.request);\r\n          } else {\r\n            console.log(\"Error\", error.message);\r\n          }\r\n          console.log(error.config);\r\n        });\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handlePageChange = (pageNumber: any) => {\r\n    axios\r\n      .get(`${API}/board?offset=${(pageNumber - 1) * 5}`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then((res) => {\r\n        setPosts(res.data);\r\n      });\r\n    setActivePage(pageNumber);\r\n  };\r\n\r\n  const loginCheck = () => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      axios\r\n        .get(`${API}/board/write`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          if (res.data.MESSAGE === \"NEED_USER_NAME\") {\r\n            alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\r\n            dispatch(setFirstLogin(true));\r\n            dispatch(setSignupActive(true));\r\n          } else {\r\n            history.push(\"./post-writing\");\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postList\">\r\n        <div className=\"weMeokTalkLogo\">\r\n          <img src={wemeok}></img>\r\n        </div>\r\n        <div className=\"weMeokTalkList\">\r\n          <div className=\"listDiv\">\r\n            <div className=\"listTitleBold\">\r\n              <p className=\"titleBold\">제목</p>\r\n              <p className=\"writerBold\">작성자</p>\r\n              <p className=\"createdAtBold\">등록일</p>\r\n              <p className=\"commentsBold\">댓글</p>\r\n            </div>\r\n            <div className=\"listSolidBold\"></div>\r\n            {posts.board_list?.map((post: any) => {\r\n              return (\r\n                <Posts\r\n                  id={post.id}\r\n                  title={post.title}\r\n                  writer={post.writer}\r\n                  created_at={post.created_at}\r\n                  comments={post.comments}\r\n                />\r\n              );\r\n            })}\r\n            <div className=\"writerButton\">\r\n              <button onClick={loginCheck}>글쓰기</button>\r\n            </div>\r\n            <Pagination\r\n              activePage={activePage}\r\n              itemsCountPerPage={5}\r\n              totalItemsCount={posts.total_board}\r\n              pageRangeDisplayed={5}\r\n              hideFirstLastPages\r\n              itemClassPrev={\"prevPageText\"}\r\n              itemClassNext={\"nextPageText\"}\r\n              prevPageText={\"◀\"}\r\n              nextPageText={\"▶\"}\r\n              onChange={handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AlcoholDetail.tsx",["194","195","196","197"],"import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../config\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSignupActive, setFirstLogin } from \"../store/actions\";\r\nimport axios from \"axios\";\r\nimport StoreCard2 from \"./childComponents/StoreCard2\";\r\nimport Slider from \"react-slick\";\r\nimport \"./AlcoholDetail.scss\";\r\nimport \"./MainPage.scss\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\ninterface UserData {\r\n  alcoholData: any;\r\n}\r\nexport default function AlcoholDetail() {\r\n  const [alcoholData, setAlcoholData] = useState<UserData | any>([]);\r\n  const alcohol = \"alcohol\";\r\n  const dispatch = useDispatch();\r\n\r\n  const setting = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 1000,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    arrows: true,\r\n    nextArrow: (\r\n      <div>\r\n        <img\r\n          alt=\"rightArrow\"\r\n          className=\"next-slick-arrow\"\r\n          src=\"./images/right-arrow.png\"\r\n        ></img>\r\n      </div>\r\n    ),\r\n    prevArrow: (\r\n      <div>\r\n        <img\r\n          alt=\"leftArrow\"\r\n          className=\"prev-slick-arrow\"\r\n          src=\"./images/left-arrow.png\"\r\n        ></img>\r\n      </div>\r\n    ),\r\n    className: \"slides\"\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    if (localStorage.getItem(\"token\")) {\r\n      axios\r\n        .get(`${API}/store/list?tag=${alcohol}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          setAlcoholData(res.data.store_list);\r\n        });\r\n    } else {\r\n      axios.get(`${API}/store/list?tag=${alcohol}`).then((res) => {\r\n        setAlcoholData(res.data.store_list);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const changeLikedState = (id: any, type: string) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      axios\r\n        .post(`${API}/store/like/${id}`, \"data\", {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          if (res.data.MESSAGE === \"NEED_USER_NAME\") {\r\n            alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\r\n            dispatch(setFirstLogin(true));\r\n            dispatch(setSignupActive(true));\r\n          } else {\r\n            setAlcoholData({\r\n              ...alcoholData,\r\n              [type]: alcoholData[type].map((data: any) => {\r\n                if (data.id === id) {\r\n                  if (data.like_state) {\r\n                    return {\r\n                      ...data,\r\n                      like_state: !data.like_state,\r\n                      like_count: data.like_count - 1\r\n                    };\r\n                  } else {\r\n                    return {\r\n                      ...data,\r\n                      like_state: !data.like_state,\r\n                      like_count: data.like_count + 1\r\n                    };\r\n                  }\r\n                } else {\r\n                  return data;\r\n                }\r\n              })\r\n            });\r\n            console.log(\"좋아요 통신이 완료되었습니다.\", res);\r\n          }\r\n        })\r\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"alcohol\">\r\n        <div className=\"logoBox\">\r\n          <img src=\"./images/alcoholLogo.png\" />\r\n        </div>\r\n        <div className=\"sojuDiv\">\r\n          <div className=\"sojuIcon\">\r\n            <img src=\"./images/soju.png\"></img>\r\n            <p>소주와</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"sojuListDiv\">\r\n          <div className=\"sojuCardDiv\">\r\n            <Slider {...setting}>\r\n              {alcoholData.soju?.map((alcohol: any) => {\r\n                return (\r\n                  <StoreCard2\r\n                    id={alcohol.id}\r\n                    name={alcohol.name}\r\n                    type={\"soju\"}\r\n                    image={alcohol.image}\r\n                    likeCount={alcohol.like_count}\r\n                    likeState={alcohol.like_state}\r\n                    changeLikedState={changeLikedState}\r\n                  />\r\n                );\r\n              })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n        <div className=\"beerDiv\">\r\n          <div className=\"beerIcon\">\r\n            <img src=\"./images/beer.png\"></img>\r\n            <p>맥주와</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"beerListDiv\">\r\n          <div className=\"beerCardDiv\">\r\n            <Slider {...setting}>\r\n              {alcoholData.beer?.map((alcohol: any) => {\r\n                return (\r\n                  <StoreCard2\r\n                    id={alcohol.id}\r\n                    name={alcohol.name}\r\n                    type={\"beer\"}\r\n                    image={alcohol.image}\r\n                    likeCount={alcohol.like_count}\r\n                    likeState={alcohol.like_state}\r\n                    changeLikedState={changeLikedState}\r\n                  />\r\n                );\r\n              })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n        <div className=\"riceWineDiv\">\r\n          <div className=\"riceWineIcon\">\r\n            <img src=\"./images/sake.png\"></img>\r\n            <p>막걸리와</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"riceWineDiv\">\r\n          <div className=\"riceWineCardDiv\">\r\n            <Slider {...setting}>\r\n              {alcoholData.makgeolli?.map((alcohol: any) => {\r\n                return (\r\n                  <StoreCard2\r\n                    id={alcohol.id}\r\n                    type={\"makgeolli\"}\r\n                    name={alcohol.name}\r\n                    image={alcohol.image}\r\n                    likeCount={alcohol.like_count}\r\n                    likeState={alcohol.like_state}\r\n                    changeLikedState={changeLikedState}\r\n                  />\r\n                );\r\n              })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostWriting.tsx",["198"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\FeatherDetail.tsx",["199"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreList.tsx",["200"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostDetail.tsx",["201","202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../config\";\r\nimport { EditCommentModal, DeleteCommentModal } from \"../components\";\r\nimport { setSignupActive, setFirstLogin } from \"../store/actions\";\r\nimport ReactQuill from \"react-quill\"; // Typescript\r\nimport axios from \"axios\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport wemeok from \"../images/wemeoktalk3.png\";\r\nimport PostReply from \"../pages/childComponents/PostReply\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"./PostDetail.scss\";\r\n\r\ninterface UserData {\r\n  info: any;\r\n  items: any[];\r\n}\r\n\r\nexport default function PostDetail({ match }: any) {\r\n  const [posts, setPosts] = useState<any>([]);\r\n  const [comments, setComments] = useState<any>([]);\r\n  const [comment, setComment] = useState<string>(\"\");\r\n  const [title, setTitle] = useState<any>({ newTitle: null });\r\n  const [postTitle, setPostTitle] = useState<any>(null);\r\n  const [postContent, setPostContent] = useState<any>(null);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [commentText, setCommentText] = useState<UserData | any>({\r\n    newComment: null,\r\n    updatedComment: { id: null, content: \"기존댓글~~~\" }\r\n  });\r\n  const [activeInput, setActiveInput] = useState(false);\r\n  const [countComments, setCountComments] = useState(0);\r\n  const [activePage, setActivePage] = useState<any>(1);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ header: [1, 2, 3, 4, false] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n      [\"clean\"]\r\n    ]\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    const fetchPosts = async () => {\r\n      await axios\r\n        .get(`${API}/board/${match.params.id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          setPosts(res.data.board_info);\r\n          setComments(res.data.board_comments);\r\n          setCountComments(res.data.count_comments);\r\n          setTitle(res.data.board_info[0].title);\r\n          setPostContent(res.data.board_info[0].content);\r\n        });\r\n    };\r\n    fetchPosts();\r\n  }, [match.params.id]);\r\n\r\n  const onChangeComment = (e: any) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const submitChangedComment = (crud: string, commentId: number) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      if (crud === \"INSERT\") {\r\n        axios\r\n          .post(\r\n            `${API}/board/${match.params.id}/comment`,\r\n            JSON.stringify({\r\n              comment\r\n            }),\r\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\r\n          )\r\n          .then((res) => {\r\n            if (res.data.MESSAGE === \"NEED_USER_NAME\") {\r\n              alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\r\n              dispatch(setFirstLogin(true));\r\n              dispatch(setSignupActive(true));\r\n            } else {\r\n              window.location.reload();\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n\r\n      if (crud === \"UPDATE\") {\r\n        setEditModal(false);\r\n\r\n        axios\r\n          .patch(\r\n            `${API}/board/${match.params.id}/${commentId}`,\r\n            JSON.stringify({\r\n              comment: commentText.updatedComment.content\r\n            }),\r\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\r\n          )\r\n          .then((res) => {\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n\r\n      if (crud === \"DELETE\") {\r\n        setDeleteModal(false);\r\n        axios\r\n          .delete(`${API}/board/${match.params.id}/${commentId}`, {\r\n            headers: {\r\n              Authorization: localStorage.getItem(\"token\")\r\n            }\r\n          })\r\n          .then((res) => {\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n\r\n  const updateComment = (e: any) => {\r\n    const { value } = e.target;\r\n\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        ...commentText.updatedComment,\r\n        content: value\r\n      }\r\n    });\r\n  };\r\n\r\n  const clickEdit = (comment: any) => {\r\n    setEditModal(true);\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        id: comment.comment_id,\r\n        content: comment.comment_content\r\n      }\r\n    });\r\n  };\r\n\r\n  const clickDeleteComment = (commentId: any) => {\r\n    setDeleteModal(true);\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        ...commentText.updatedComment,\r\n        id: commentId\r\n      }\r\n    });\r\n  };\r\n\r\n  const patchPost = (): void => {\r\n    const data = {\r\n      title: postTitle,\r\n      content: postContent\r\n    };\r\n\r\n    axios\r\n      .patch(`${API}/board/${match.params.id}`, JSON.stringify(data), {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then((res) => {\r\n        window.location.reload();\r\n      });\r\n  };\r\n\r\n  const deletePost = (): void => {\r\n    if (window.confirm(\"게시물을 삭제하시겠습까?\")) {\r\n      axios\r\n        .delete(`${API}/board/${match.params.id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          history.push(\"/post-list\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (pageNumber: any) => {\r\n    axios\r\n      .get(`${API}/board/${match.params.id}?offset=${(pageNumber - 1) * 5}`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then((res) => {\r\n        setComments(res.data.board_comments);\r\n      });\r\n    setActivePage(pageNumber);\r\n  };\r\n\r\n  const changePostTitle = (e: any) => {\r\n    const { value } = e.target;\r\n    setPostTitle(value);\r\n  };\r\n\r\n  const changePostContent = (html: any) => {\r\n    setPostContent(html);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postDetail\">\r\n        <div className=\"weMeokTalkLogo\">\r\n          <img src={wemeok}></img>\r\n        </div>\r\n        <div className=\"weMeokTalkList\">\r\n          <div className=\"listDiv\">\r\n            {activeInput ? (\r\n              <>\r\n                <div className=\"editListDiv\">\r\n                  <div className=\"writingTitle\">\r\n                    <p>제목</p>\r\n                    <input\r\n                      type=\"text/html\"\r\n                      value={postTitle}\r\n                      onChange={changePostTitle}\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"solidLine\"></div>\r\n                  <div className=\"writerCreated\">\r\n                    <p className=\"wirter\">{posts[0]?.writer}</p>\r\n                    <p className=\"created\">{posts[0]?.created_at}</p>\r\n                  </div>\r\n                  <div className=\"writingCenter\">\r\n                    <p className=\"textBold\">내용</p>\r\n                    <ReactQuill\r\n                      bounds={\".quill\"}\r\n                      theme={\"snow\"}\r\n                      value={postContent}\r\n                      onChange={changePostContent}\r\n                      modules={modules}\r\n                    />\r\n                  </div>\r\n                  <div className=\"writerButton\">\r\n                    <button\r\n                      onClick={() => {\r\n                        patchPost();\r\n                        setActiveInput(false);\r\n                      }}\r\n                    >\r\n                      수정\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"solidLine\"></div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"detailTitle\">\r\n                  <p className=\"titleBold\">제목</p>\r\n                  <p className=\"title\">{posts[0]?.title}</p>\r\n                </div>\r\n                <div className=\"solidLine\"></div>\r\n                <div className=\"writerCreated\">\r\n                  <p className=\"wirter\">{posts[0]?.writer}</p>\r\n                  <p className=\"created\">{posts[0]?.created_at}</p>\r\n                </div>\r\n                <div\r\n                  className=\"contentDiv\"\r\n                  dangerouslySetInnerHTML={{ __html: posts[0]?.content }}\r\n                />\r\n                {posts[0]?.writer_id ===\r\n                  Number(localStorage.getItem(\"user_id_number\")) && (\r\n                  <>\r\n                    <div className=\"editDeleteDiv\">\r\n                      <p\r\n                        className=\"edit\"\r\n                        onClick={() => {\r\n                          setActiveInput(true);\r\n                          setPostTitle(posts[0]?.title);\r\n                        }}\r\n                      >\r\n                        수정\r\n                      </p>\r\n\r\n                      <p className=\"delete\" onClick={deletePost}>\r\n                        삭제\r\n                      </p>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                <div className=\"solidLine\"></div>\r\n                <div className=\"commentsInputDiv\">\r\n                  <p>댓글 ({countComments})</p>\r\n                  <input\r\n                    onKeyDown={(e) => {\r\n                      if (e.keyCode === 13) {\r\n                        submitChangedComment(\"INSERT\", 0);\r\n                        e.preventDefault();\r\n                      }\r\n                    }}\r\n                    maxLength={250}\r\n                    value={comment}\r\n                    onChange={onChangeComment}\r\n                  ></input>\r\n                  <span onClick={() => submitChangedComment(\"INSERT\", 0)}>\r\n                    등록\r\n                  </span>\r\n                </div>\r\n                {comments?.map((comments: any) => {\r\n                  return (\r\n                    <PostReply\r\n                      comments={comments}\r\n                      id={comments.comment_id}\r\n                      writer={comments.comment_writer}\r\n                      content={comments.comment_content}\r\n                      created_at={comments.comment_created_at}\r\n                      writer_id={comments.comment_writer_id}\r\n                      clickEdit={clickEdit}\r\n                      clickDeleteComment={clickDeleteComment}\r\n                    />\r\n                  );\r\n                })}\r\n                <Pagination\r\n                  activePage={activePage}\r\n                  itemsCountPerPage={5}\r\n                  totalItemsCount={countComments}\r\n                  pageRangeDisplayed={5}\r\n                  hideFirstLastPages\r\n                  itemClassPrev={\"prevPageText\"}\r\n                  itemClassNext={\"nextPageText\"}\r\n                  prevPageText={\"◀\"}\r\n                  nextPageText={\"▶\"}\r\n                  onChange={handlePageChange}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {editModal && (\r\n        <EditCommentModal\r\n          editModal={editModal}\r\n          setEditModal={setEditModal}\r\n          updatedComment={commentText.updatedComment}\r\n          submitChangedComment={submitChangedComment}\r\n          updateComment={updateComment}\r\n        />\r\n      )}\r\n\r\n      {deleteModal && (\r\n        <DeleteCommentModal\r\n          deleteModal={deleteModal}\r\n          setDeleteModal={setDeleteModal}\r\n          submitChangedComment={submitChangedComment}\r\n          commentId={commentText.updatedComment.id}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\MainPage.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreDetail.tsx",["204","205","206","207"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\TodayRandom.tsx",["208","209"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSignupActive, setFirstLogin } from \"../store/actions\";\r\nimport { mixin } from \"../styles\";\r\nimport { API } from \"../config\";\r\nimport styled from \"styled-components\";\r\nimport StoreCard2 from \"./childComponents/StoreCard2\";\r\nimport axios from \"axios\";\r\n\r\ninterface UserData {\r\n  store: any;\r\n  clickedState: boolean;\r\n  againModal: boolean;\r\n}\r\n\r\ninterface StateForStyle {\r\n  visible?: boolean;\r\n}\r\n\r\nexport default function TodayRandom() {\r\n  const [store, setStore] = useState<UserData | any>({});\r\n  const [clickedState, setClickedState] = useState<UserData | boolean>(false);\r\n  const [againModal, setAgainModal] = useState(false);\r\n  const [restTime, setRestTime] = useState({ hour: 4, minute: 0 });\r\n  const dispatch = useDispatch();\r\n\r\n  const display = (value: any) => {\r\n    let now = new Date();\r\n    let time = now.getTime();\r\n    let expireTime = time + 14400000;\r\n    now.setTime(expireTime);\r\n\r\n    document.cookie = `randomStore=${value};expires=\"${now.toUTCString()}\";path=/`;\r\n    document.cookie = `randomStoreExpireTime=${expireTime};expires=“${now.toUTCString()}“;path=/`;\r\n  };\r\n\r\n  const getCookie = (name: string) => {\r\n    let value = document.cookie.match(\"(^|;) ?\" + name + \"=([^;]*)(;|$)\");\r\n    return value ? value[2] : null;\r\n  };\r\n\r\n  const getRandomStore = useCallback(() => {\r\n    const store = getCookie(\"randomStore\");\r\n\r\n    if (!store) {\r\n      axios\r\n        .get(`${API}/store/list?sort=random`)\r\n        .then((res: any) => {\r\n          setStore(res.data.store_list.random[0]);\r\n          setClickedState(true);\r\n          display(JSON.stringify(res.data.store_list.random[0]));\r\n        })\r\n        .catch((err: any) => console.log(\"Catched errors!\", err));\r\n    } else {\r\n      setStore(JSON.parse(store));\r\n      setClickedState(true);\r\n    }\r\n  }, [\"a\"]);\r\n\r\n  const changeLikedState = (id: any) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      axios\r\n        .post(`${API}/store/like/${id}`, \"data\", {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          if (res.data.MESSAGE === \"NEED_USER_NAME\") {\r\n            alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\r\n            dispatch(setFirstLogin(true));\r\n            dispatch(setSignupActive(true));\r\n          } else {\r\n            setStore(\r\n              store.like_state\r\n                ? {\r\n                    ...store,\r\n                    like_state: !store.like_state,\r\n                    like_count: store.like_count - 1\r\n                  }\r\n                : {\r\n                    ...store,\r\n                    like_state: !store.like_state,\r\n                    like_count: store.like_count + 1\r\n                  }\r\n            );\r\n            console.log(\"좋아요 통신이 완료되었습니다.\", res);\r\n          }\r\n        })\r\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n\r\n  const getAgainRandomStore = () => {\r\n    if (getCookie(\"randomStore\")) {\r\n      setAgainModal(true);\r\n    } else {\r\n      getRandomStore();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    const store = getCookie(\"randomStore\");\r\n\r\n    if (store) {\r\n      setStore(JSON.parse(store));\r\n      setClickedState(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let restTimer = () => {\r\n      let expireTime = Number(getCookie(\"randomStoreExpireTime\"));\r\n      let nowDate = new Date();\r\n      let nowNumber = nowDate.getTime();\r\n      let restTime = expireTime - nowNumber;\r\n\r\n      let hour = Math.floor((restTime / (1000 * 60 * 60)) % 24),\r\n        minute = Math.floor((restTime / (1000 * 60)) % 60);\r\n\r\n      setRestTime({ hour, minute });\r\n    };\r\n    if (againModal) {\r\n      restTimer();\r\n      setInterval(restTimer, 60000);\r\n    }\r\n  }, [againModal]);\r\n\r\n  useEffect(() => {\r\n    if (againModal) {\r\n      document.documentElement.style.overflow = \"hidden\";\r\n    } else {\r\n      document.documentElement.style.overflow = \"scroll\";\r\n    }\r\n  }, [againModal]);\r\n\r\n  return (\r\n    <Container>\r\n      <DescSection>\r\n        <Title>이런 날도 있짜나</Title>\r\n        <Desc>\r\n          <p>365일 1년내내 먹고 싶은 음식이 줄줄이 소세지마냥 가득 했던 나,</p>\r\n          <p>N년동안 살아왔지만 단 하루도 메뉴 고민을 한 적 없었던 나,</p>\r\n          <p>·</p>\r\n          <p>·</p>\r\n          <p>·</p>\r\n          <p>근데 오늘은 왜 이렇게 고민이 되는거야?</p>\r\n          <p>내가 뭘 먹고 싶은지조차 모르겠을 때</p>\r\n        </Desc>\r\n      </DescSection>\r\n      <RandomSection>\r\n        <RandomComponent>\r\n          {!clickedState ? (\r\n            <Row>\r\n              <VerticalText>무얼먹을지</VerticalText>\r\n              <span onClick={getRandomStore}>\r\n                <img\r\n                  width=\"350rem\"\r\n                  src=\"https://www.clickimagination.com/wp-content/uploads/2018/06/click-logo-01.png\"\r\n                />\r\n              </span>\r\n              <VerticalText>고민이라면</VerticalText>\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              <Row>\r\n                <VerticalText>여기로</VerticalText>\r\n                <StoreCard2\r\n                  id={store.id}\r\n                  image={store.image}\r\n                  name={store.name}\r\n                  likeCount={store.like_count}\r\n                  likeState={store.like_state}\r\n                  changeLikedState={changeLikedState}\r\n                  type={\"random\"}\r\n                />\r\n                <VerticalText>가즈아</VerticalText>\r\n              </Row>\r\n              <div className=\"buttonSection\">\r\n                <ReplayBtn onClick={getAgainRandomStore}>다시하기</ReplayBtn>\r\n              </div>\r\n            </>\r\n          )}\r\n        </RandomComponent>\r\n      </RandomSection>\r\n      {againModal && (\r\n        <ModalWrapper visible={againModal} tabIndex={-1}>\r\n          <ModalInner tabIndex={0}>\r\n            <div className=\"header\">\r\n              <Header>\r\n                첫번째 나온 것이 찐!\r\n                <br />이 집으로 가시죠 😋\r\n                <div className=\"sub\">\r\n                  {restTime.hour}시간 {restTime.minute}분 후에 다시하기 가능\r\n                </div>\r\n              </Header>\r\n            </div>\r\n            <div className=\"buttons\">\r\n              <Button onClick={() => setAgainModal(false)}>먹으러가기!</Button>\r\n            </div>\r\n          </ModalInner>\r\n        </ModalWrapper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  font-family: \"777Balsamtint\";\r\n  margin: 11rem auto 2rem;\r\n  width: 65rem;\r\n`;\r\n\r\nconst DescSection = styled.div`\r\n  line-height: 2rem;\r\n  letter-spacing: 0.5rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.borderGray};\r\n`;\r\n\r\nconst Title = styled.header`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Desc = styled.p`\r\n  margin: 2rem;\r\n  font-size: 1.3rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst RandomSection = styled.div``;\r\n\r\nconst RandomComponent = styled.div`\r\n  margin: 2rem auto;\r\n  padding: 3rem;\r\n\r\n  .buttonSection {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 3rem;\r\n  }\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  ${mixin.flexSet(\"space-evenly\", \"center\", \"row\")}\r\n\r\n  img {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst VerticalText = styled.p`\r\n  font-size: 3rem;\r\n  writing-mode: tb-rl;\r\n  letter-spacing: 1.2rem;\r\n`;\r\n\r\nconst ReplayBtn = styled.span`\r\n  border: 1px solid ${({ theme }) => theme.borderGray};\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.mainYellow};\r\n  font-size: 1.5rem;\r\n  width: 7rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ModalWrapper = styled.div<StateForStyle>`\r\n  position: fixed;\r\n  z-index: 101;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\r\n  overflow: auto;\r\n  outline: 0;\r\n`;\r\n\r\nconst ModalInner = styled.div`\r\n  display: flex;\r\n  ${mixin.flexSet(\"center\", \"center\", \"column\")};\r\n  outline: none;\r\n  position: relative;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 25rem;\r\n  height: 12rem;\r\n  margin: 0 auto;\r\n  border: 0.15rem solid ${({ theme }) => theme.black};\r\n  border-radius: 3rem;\r\n  background-color: ${({ theme }) => theme.white};\r\n  box-shadow: 0 0 0.4rem 0 rgba(0, 0, 0, 0.6);\r\n\r\n  .buttons {\r\n    width: 18rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .header {\r\n    width: 18rem;\r\n    height: 6rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: block;\r\n  font-size: 1.4em;\r\n  font-weight: 500;\r\n  letter-spacing: 0.4rem;\r\n  line-height: 1.2em;\r\n\r\n  .sub {\r\n    color: ${({ theme }) => theme.buttonGray};\r\n    font-size: 0.7em;\r\n    padding-top: 0.5em;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  outline: none;\r\n  font-size: 0.8em;\r\n  font-weight: 700;\r\n  margin-top: 0.7rem;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  width: 8.6rem;\r\n  height: 1.8rem;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\config.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard2.tsx",["210"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  id: number;\r\n  type: string;\r\n  image: string;\r\n  name: string;\r\n  likeCount: number;\r\n  likeState: boolean;\r\n  changeLikedState: (id: any, type: string) => void;\r\n}\r\n\r\nexport default function StoreCard({\r\n  id,\r\n  image,\r\n  name,\r\n  type,\r\n  likeCount,\r\n  likeState,\r\n  changeLikedState\r\n}: Props) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"storeCard\">\r\n        <div className=\"rankingComponents\">\r\n          <div\r\n            className=\"storeHeader\"\r\n            onClick={() => history.push(`/store-detail/${id}`)}\r\n          >\r\n            <p>Weeeating</p>\r\n            <img alt=\"storeImg\" src={image}></img>\r\n          </div>\r\n          <div className=\"storeFooter\">\r\n            <p className=\"foodName\">{name}</p>\r\n            <span onClick={() => changeLikedState(id, type)}>\r\n              {likeState ? (\r\n                <img alt=\"Like\" src=\"./images/fullheart.png\"></img>\r\n              ) : (\r\n                <img alt=\"Like\" src=\"./images/heart.png\"></img>\r\n              )}\r\n            </span>\r\n\r\n            <p className=\"heartTotal\">{likeCount}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\Posts.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\PostReply.tsx",["211","212"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\KobbubakTheme.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard.tsx",["213"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\MetorTheme.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\registerModal.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\googleFirstLogin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\DeleteCommentModal.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Login.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\LoginForm.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\GoogleLoginComponent.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\PeoplePick.tsx",["214"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\SignupForm.tsx",["215"],"import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface IProps {\r\n  handleChange: (e: any) => void;\r\n  submitSingup: (event: any, type: string) => Promise<void>;\r\n}\r\n\r\ninterface StateForStyle {\r\n  short?: boolean;\r\n  needSpace?: boolean;\r\n}\r\n\r\nexport default function SignupForm({ handleChange, submitSingup }: IProps) {\r\n  const firstGoogle = useSelector(\r\n    ({ setFirstReducer }) => setFirstReducer.first\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Title>회원가입</Title>\r\n      <InfoSection\r\n        onSubmit={(event) =>\r\n          submitSingup(event, firstGoogle ? \"login/google\" : \"login\")\r\n        }\r\n      >\r\n        <BlockWrapper>\r\n          <Subject short={true}>기수</Subject>\r\n          <Input\r\n            type=\"number\"\r\n            name=\"number\"\r\n            placeholder=\"숫자만!\"\r\n            onChange={handleChange}\r\n            required\r\n            short={true}\r\n          ></Input>\r\n          <Subject short={true} needSpace={true}>\r\n            이름\r\n          </Subject>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            placeholder=\"전체이름!\"\r\n            onChange={handleChange}\r\n            required\r\n            short={true}\r\n            maxLength={4}\r\n          ></Input>\r\n        </BlockWrapper>\r\n        <BlockWrapper>\r\n          <Subject>이메일</Subject>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n            disabled={firstGoogle ? true : false}\r\n            onChange={handleChange}\r\n          ></Input>\r\n        </BlockWrapper>\r\n        <BlockWrapper>\r\n          <Subject>비밀번호</Subject>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            required\r\n            placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n            disabled={firstGoogle ? true : false}\r\n            onChange={handleChange}\r\n          ></Input>\r\n        </BlockWrapper>\r\n        <BlockWrapper>\r\n          <Subject>비밀번호 확인</Subject>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"repassword\"\r\n            required\r\n            placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n            disabled={firstGoogle ? true : false}\r\n            onChange={handleChange}\r\n          ></Input>\r\n        </BlockWrapper>\r\n        <Button\r\n          type=\"submit\"\r\n          value=\"회원가입\"\r\n          className=\"button\"\r\n          onSubmit={(event) =>\r\n            submitSingup(event, firstGoogle ? \"login/google\" : \"login\")\r\n          }\r\n        ></Button>\r\n      </InfoSection>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 2em 2.5em;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${({ theme }) => theme.mainYellow};\r\n  height: 1em;\r\n  margin-left: 1rem;\r\n  text-align: center;\r\n  font-size: 6em;\r\n  font-weight: 900;\r\n  margin-bottom: 0.5em;\r\n  letter-spacing: 0.2em;\r\n`;\r\n\r\nconst InfoSection = styled.form`\r\n  font-family: \"Noto Sans KR\";\r\n  margin: 0 2.5em;\r\n  height: 20em;\r\n`;\r\n\r\nconst BlockWrapper = styled.div`\r\n  margin: 2em 0;\r\n  height: 2.5em;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  .button {\r\n    background-color: ${({ theme }) => theme.lightYellow};\r\n  }\r\n`;\r\n\r\nconst Subject = styled.div<StateForStyle>`\r\n  font-family: sans-serif;\r\n  text-align: center;\r\n  font-size: 1.15em;\r\n  font-weight: 500;\r\n  width: 4.6em;\r\n  margin-right: 1.5em;\r\n  margin-left: ${({ needSpace }) => (needSpace ? \"1.5em\" : \"0\")};\r\n`;\r\n\r\nconst Input = styled.input<StateForStyle>`\r\n  width: ${({ short }) => (short ? \"7.4em\" : \"28em\")};\r\n  height: 4em;\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n`;\r\n\r\nconst Button = styled.input`\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n  margin-top: 3em;\r\n  margin-left: 6.5rem;\r\n  width: 13em;\r\n  font-size: 1.15rem;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3em;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.lightYellow};\r\n  cursor: pointer;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Signup.tsx",["216","217"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { API } from \"../config\";\r\nimport { SignupForm } from \"./index\";\r\n\r\nexport default function Signup() {\r\n  const [user, setUser] = useState({\r\n    number: null,\r\n    userName: null,\r\n    email: null,\r\n    password: null,\r\n    repassword: null\r\n  });\r\n\r\n  const googleSignup = useSelector(\r\n    ({ setFirstReducer }) => setFirstReducer.first\r\n  );\r\n\r\n  const handleChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const isValidateEmail = (value: any) => {\r\n    let email = value;\r\n    let regExp = /^[0-9a-zA-Z]{3}([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]{2,3}([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/;\r\n    if (!regExp.test(email)) {\r\n      alert(\"이메일형식이 올바르지 않습니다.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const isValidatePassword = (value: any) => {\r\n    let password = value;\r\n    let regExp = /^.{6}/;\r\n    if (!regExp.test(password)) {\r\n      alert(\"비밀번호는 6글자 이상이어야 합니다.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const submitSingup = async (event: any, type: string) => {\r\n    event.preventDefault();\r\n\r\n    switch (type) {\r\n      case \"login\":\r\n        const checkValidation = await Promise.all([\r\n          isValidateEmail(user.email),\r\n          isValidatePassword(user.password)\r\n        ]).then((res) => res);\r\n\r\n        const isValid = !checkValidation.some((bool) => !bool);\r\n\r\n        if (isValid) {\r\n          if (user.password === user.repassword || !user.password) {\r\n            const body = {\r\n              number: user.number,\r\n              name: user.userName,\r\n              email: user.email,\r\n              password: user.password\r\n            };\r\n            axios\r\n              .post(`${API}/user/signup`, JSON.stringify({ ...body }))\r\n              .then((res) => {\r\n                if (res.data.MESSAGE === \"USER_SIGNUP_SUCCESS\") {\r\n                  localStorage.setItem(\"token\", res.data.Authorization);\r\n                  localStorage.setItem(\"user_id_number\", res.data.user_id);\r\n                  localStorage.isAuthenticated = true;\r\n                  alert(\"회원가입과 로그인이 완료되었습니다. :-)\");\r\n                  window.location.reload();\r\n                } else {\r\n                  alert(\"회원가입이 완료되지 않았습니다.\");\r\n                }\r\n              })\r\n              .catch((err) =>\r\n                console.log(\"회원가입 통신이 원활하지 않습니다.\", err)\r\n              );\r\n          } else {\r\n            alert(\r\n              \"재입력한 비밀번호가 일치하지 않습니다. 비밀번호를 다시 입력해주세요.\"\r\n            );\r\n          }\r\n        }\r\n        break;\r\n      case \"login/google\":\r\n        const body = {\r\n          number: user.number,\r\n          name: user.userName\r\n        };\r\n        axios\r\n          .post(`${API}/user/signup/google`, JSON.stringify({ ...body }), {\r\n            headers: {\r\n              Authorization: localStorage.getItem(\"token\")\r\n            }\r\n          })\r\n          .then((res) => {\r\n            if (res.data.MESSAGE === \"UPDATE_SUCCESS\") {\r\n              alert(\"회원가입이 완료되었습니다. :-)\");\r\n              localStorage.isAuthenticated = true;\r\n              window.location.reload();\r\n            } else {\r\n              alert(\"구글 회원가입이 완료되지 않았습니다.\");\r\n            }\r\n          })\r\n          .catch((err) =>\r\n            console.log(\"구글 회원가입 통신이 원활하지 않습니다.\", err)\r\n          );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const props = { handleChange, submitSingup };\r\n\r\n  return <SignupForm {...props} />;\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\EditCommentModal.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Nav.tsx",["218"],"import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { setSignupActive, setLoginActive } from \"../store/actions\";\r\nimport { mixin } from \"../styles\";\r\nimport { Signup, Login } from \"./index\";\r\nimport wemeok from \"../images/weeeating_Nav_logo.png\";\r\n\r\ninterface IProps {\r\n  weight: {\r\n    storeList: boolean;\r\n    todayRandom: boolean;\r\n    postList: boolean;\r\n    aboutPage: boolean;\r\n  };\r\n  goToPage: (path: string, page: string) => void;\r\n}\r\n\r\ninterface StateForStyle {\r\n  theLast?: boolean;\r\n  present?: boolean;\r\n  visible?: boolean;\r\n}\r\n\r\nexport default function Nav({ weight, goToPage }: IProps) {\r\n  const dispatch = useDispatch();\r\n  const loggedIn =\r\n    localStorage.getItem(\"isAuthenticated\") === \"true\" ? true : false;\r\n\r\n  const signupModal = useSelector(\r\n    ({ setModalReducer }) => setModalReducer.signupModal\r\n  );\r\n  const loginModal = useSelector(\r\n    ({ setModalReducer }) => setModalReducer.loginModal\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (signupModal || loginModal) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"unset\";\r\n    }\r\n  }, [signupModal, loginModal]);\r\n\r\n  const toLogout = () => {\r\n    localStorage.clear();\r\n    localStorage.isAuthenticated = false;\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Logo onClick={() => goToPage(\"/\", \"main\")}>\r\n        <img src={wemeok} />\r\n      </Logo>\r\n      <Button\r\n        present={weight.storeList}\r\n        onClick={() => goToPage(\"/store-list\", \"storeList\")}\r\n      >\r\n        맛집\r\n      </Button>\r\n      <Button\r\n        present={weight.todayRandom}\r\n        onClick={() => goToPage(\"/today-random\", \"todayRandom\")}\r\n      >\r\n        오늘 뭐먹지?\r\n      </Button>\r\n      <Button\r\n        present={weight.postList}\r\n        onClick={() => goToPage(\"/post-list\", \"postList\")}\r\n      >\r\n        We Moek Talk\r\n      </Button>\r\n      <Button\r\n        theLast={true}\r\n        present={weight.aboutPage}\r\n        onClick={() => goToPage(\"/about\", \"aboutPage\")}\r\n      >\r\n        About Weeeating\r\n      </Button>\r\n      <ModalBtnWrapper>\r\n        {loggedIn ? (\r\n          <Button theLast={true} onClick={toLogout}>\r\n            로그아웃\r\n          </Button>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              present={signupModal}\r\n              onClick={() => dispatch(setSignupActive(true))}\r\n            >\r\n              회원가입\r\n            </Button>\r\n            <Button\r\n              theLast={true}\r\n              present={loginModal}\r\n              onClick={() => dispatch(setLoginActive(true))}\r\n            >\r\n              로그인\r\n            </Button>\r\n          </>\r\n        )}\r\n      </ModalBtnWrapper>\r\n\r\n      <ModalOverlay visible={signupModal || loginModal} />\r\n      <ModalWrapper visible={signupModal || loginModal} tabIndex={-1}>\r\n        <ModalInner tabIndex={0}>\r\n          <CloseBtn\r\n            onClick={() => {\r\n              dispatch(setSignupActive(false));\r\n              dispatch(setLoginActive(false));\r\n            }}\r\n          >\r\n            <FiX className=\"icon\" />\r\n          </CloseBtn>\r\n          {signupModal || !loginModal ? <Signup /> : <Login />}\r\n        </ModalInner>\r\n      </ModalWrapper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.header`\r\n  font-family: \"Bazzi\";\r\n  ${mixin.flexSet(\"flex-start\", \"center\", \"row\")}\r\n  position: fixed;\r\n  z-index: 100;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  width: 100vw;\r\n  height: 5rem;\r\n  padding: 0 1.3em;\r\n  border-bottom: 0.07rem solid ${({ theme }) => theme.borderGray};\r\n  background-color: ${({ theme }) => theme.white};\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  margin-right: 3rem;\r\n  font-size: 3em;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    width: 228px;\r\n    height: 63px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.span<StateForStyle>`\r\n  margin: 0.5em 0;\r\n  padding: 0 1.1em;\r\n  border-right: 0.07rem solid\r\n    ${({ theme, theLast }) => (theLast ? theme.white : theme.borderGray)};\r\n  font-size: 1.2em;\r\n  font-weight: ${({ present }) => (present ? 900 : 400)};\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ModalBtnWrapper = styled.span`\r\n  position: absolute;\r\n  right: 1.3rem;\r\n`;\r\n\r\nconst ModalOverlay = styled.div<StateForStyle>`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst ModalWrapper = styled.div<StateForStyle>`\r\n  position: fixed;\r\n  z-index: 101;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\r\n  overflow: auto;\r\n  outline: 0;\r\n`;\r\n\r\nconst ModalInner = styled.div`\r\n  outline: none;\r\n  position: relative;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 37rem;\r\n  height: 37rem;\r\n  margin: 0 auto;\r\n  border: 0.15rem solid ${({ theme }) => theme.black};\r\n  border-radius: 3rem;\r\n  background-color: ${({ theme }) => theme.white};\r\n  box-shadow: 0 0 0.4rem 0 rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst CloseBtn = styled.span`\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  right: 0.8rem;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n\r\n  .icon {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n",{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":47,"column":13,"nodeType":"225","endLine":47,"endColumn":45},{"ruleId":"223","severity":1,"message":"224","line":53,"column":11,"nodeType":"225","endLine":53,"endColumn":52},{"ruleId":"226","severity":1,"message":"227","line":54,"column":11,"nodeType":"225","endLine":58,"endColumn":12},{"ruleId":"223","severity":1,"message":"224","line":88,"column":11,"nodeType":"225","endLine":88,"endColumn":29},{"ruleId":"223","severity":1,"message":"224","line":116,"column":11,"nodeType":"225","endLine":116,"endColumn":49},{"ruleId":"223","severity":1,"message":"224","line":120,"column":13,"nodeType":"225","endLine":120,"endColumn":42},{"ruleId":"223","severity":1,"message":"224","line":145,"column":13,"nodeType":"225","endLine":145,"endColumn":42},{"ruleId":"223","severity":1,"message":"224","line":170,"column":13,"nodeType":"225","endLine":170,"endColumn":42},{"ruleId":"223","severity":1,"message":"224","line":54,"column":11,"nodeType":"225","endLine":54,"endColumn":29},{"ruleId":"223","severity":1,"message":"224","line":84,"column":11,"nodeType":"225","endLine":84,"endColumn":49},{"ruleId":"223","severity":1,"message":"224","line":84,"column":11,"nodeType":"225","endLine":84,"endColumn":45},{"ruleId":"228","severity":1,"message":"229","line":12,"column":8,"nodeType":"230","messageId":"231","endLine":12,"endColumn":23},{"ruleId":"228","severity":1,"message":"232","line":26,"column":10,"nodeType":"230","messageId":"231","endLine":26,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":224,"column":11,"nodeType":"225","endLine":224,"endColumn":29},{"ruleId":"228","severity":1,"message":"233","line":9,"column":10,"nodeType":"230","messageId":"231","endLine":9,"endColumn":15},{"ruleId":"228","severity":1,"message":"234","line":14,"column":3,"nodeType":"230","messageId":"231","endLine":14,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":275,"column":15,"nodeType":"225","endLine":275,"endColumn":81},{"ruleId":"228","severity":1,"message":"235","line":605,"column":7,"nodeType":"230","messageId":"231","endLine":605,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":58,"column":7,"nodeType":"238","endLine":58,"endColumn":10},{"ruleId":"223","severity":1,"message":"224","line":160,"column":17,"nodeType":"225","endLine":163,"endColumn":19},{"ruleId":"228","severity":1,"message":"239","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"239","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"240","line":27,"column":9,"nodeType":"230","messageId":"231","endLine":27,"endColumn":16},{"ruleId":"228","severity":1,"message":"239","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":102,"column":23,"nodeType":"225","endLine":102,"endColumn":42},{"ruleId":"228","severity":1,"message":"241","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"241","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"242","line":16,"column":9,"nodeType":"230","messageId":"231","endLine":16,"endColumn":21},{"ruleId":"223","severity":1,"message":"224","line":55,"column":9,"nodeType":"225","endLine":55,"endColumn":29},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","@typescript-eslint/no-unused-vars","'ReactHtmlParser' is defined but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'mixin' is defined but never used.","'setLoginActive' is defined but never used.","'ModifyBtn' is assigned a value but never used.","react-hooks/exhaustive-deps","The \"a\" literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'useState' is defined but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'googleSignup' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]