[{"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\index.tsx":"1","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\routes.tsx":"2","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\index.ts":"3","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\registerModal.ts":"4","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\googleFirstLogin.ts":"5","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\index.ts":"6","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\index.ts":"7","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\index.ts":"8","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\globalStyle.ts":"9","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\themeColor.ts":"10","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\mixin.ts":"11","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\MentorDetailContainer.tsx":"12","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\NavContainer.tsx":"13","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\KobbubakDetailContainer.tsx":"14","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\FeatherDetail.tsx":"15","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AboutPage.tsx":"16","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AlcoholDetail.tsx":"17","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostDetail.tsx":"18","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\MainPage.tsx":"19","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreDetail.tsx":"20","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\TodayRandom.tsx":"21","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreList.tsx":"22","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostWriting.tsx":"23","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\ThemeList.tsx":"24","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostList.tsx":"25","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\index.ts":"26","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\config.ts":"27","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard.tsx":"28","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard2.tsx":"29","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\PostReply.tsx":"30","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\Posts.tsx":"31","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\MetorTheme.tsx":"32","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\KobbubakTheme.tsx":"33","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\registerModal.ts":"34","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\googleFirstLogin.ts":"35","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\index.ts":"36","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\DeleteCommentModal.tsx":"37","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\GoogleLoginComponent.tsx":"38","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Footer.tsx":"39","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\LoginForm.tsx":"40","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\EditCommentModal.tsx":"41","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Signup.tsx":"42","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Nav.tsx":"43","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Login.tsx":"44","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\SignupForm.tsx":"45","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\PeoplePick.tsx":"46"},{"size":482,"mtime":1612683220699,"results":"47","hashOfConfig":"48"},{"size":2047,"mtime":1612510370591,"results":"49","hashOfConfig":"48"},{"size":214,"mtime":1612510370597,"results":"50","hashOfConfig":"48"},{"size":468,"mtime":1612510370598,"results":"51","hashOfConfig":"48"},{"size":347,"mtime":1612510370597,"results":"52","hashOfConfig":"48"},{"size":89,"mtime":1610800928136,"results":"53","hashOfConfig":"48"},{"size":208,"mtime":1612352299974,"results":"54","hashOfConfig":"48"},{"size":609,"mtime":1612352299995,"results":"55","hashOfConfig":"48"},{"size":483,"mtime":1610801105029,"results":"56","hashOfConfig":"48"},{"size":265,"mtime":1612510370600,"results":"57","hashOfConfig":"48"},{"size":667,"mtime":1610800928138,"results":"58","hashOfConfig":"48"},{"size":666,"mtime":1612352299969,"results":"59","hashOfConfig":"48"},{"size":855,"mtime":1612510370570,"results":"60","hashOfConfig":"48"},{"size":687,"mtime":1612352299968,"results":"61","hashOfConfig":"48"},{"size":1500,"mtime":1612692650478,"results":"62","hashOfConfig":"48"},{"size":114,"mtime":1612506093196,"results":"63","hashOfConfig":"48"},{"size":4920,"mtime":1612692585392,"results":"64","hashOfConfig":"48"},{"size":10027,"mtime":1612681146595,"results":"65","hashOfConfig":"48"},{"size":5575,"mtime":1612691581903,"results":"66","hashOfConfig":"48"},{"size":14848,"mtime":1612695175655,"results":"67","hashOfConfig":"48"},{"size":3015,"mtime":1612510370588,"results":"68","hashOfConfig":"48"},{"size":1449,"mtime":1612692145862,"results":"69","hashOfConfig":"48"},{"size":3386,"mtime":1612514862465,"results":"70","hashOfConfig":"48"},{"size":112,"mtime":1610801722201,"results":"71","hashOfConfig":"48"},{"size":3629,"mtime":1612514862464,"results":"72","hashOfConfig":"48"},{"size":71,"mtime":1612510370595,"results":"73","hashOfConfig":"48"},{"size":97,"mtime":1612680037557,"results":"74","hashOfConfig":"48"},{"size":1449,"mtime":1612619590128,"results":"75","hashOfConfig":"48"},{"size":1214,"mtime":1612619038742,"results":"76","hashOfConfig":"48"},{"size":1726,"mtime":1612514862468,"results":"77","hashOfConfig":"48"},{"size":1113,"mtime":1612510370590,"results":"78","hashOfConfig":"48"},{"size":577,"mtime":1611559283150,"results":"79","hashOfConfig":"48"},{"size":639,"mtime":1611559283148,"results":"80","hashOfConfig":"48"},{"size":300,"mtime":1612510370595,"results":"81","hashOfConfig":"48"},{"size":162,"mtime":1612510370593,"results":"82","hashOfConfig":"48"},{"size":556,"mtime":1612510370569,"results":"83","hashOfConfig":"48"},{"size":2266,"mtime":1612510370556,"results":"84","hashOfConfig":"48"},{"size":2806,"mtime":1612514862452,"results":"85","hashOfConfig":"48"},{"size":98,"mtime":1610800928069,"results":"86","hashOfConfig":"48"},{"size":2673,"mtime":1612510370560,"results":"87","hashOfConfig":"48"},{"size":2391,"mtime":1612510370556,"results":"88","hashOfConfig":"48"},{"size":1500,"mtime":1612514862456,"results":"89","hashOfConfig":"48"},{"size":4931,"mtime":1612510815986,"results":"90","hashOfConfig":"48"},{"size":1445,"mtime":1612514862453,"results":"91","hashOfConfig":"48"},{"size":3915,"mtime":1612514862457,"results":"92","hashOfConfig":"48"},{"size":4356,"mtime":1612510370564,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pfk716",{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"99"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"99"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"99"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"99"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"99"},"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\index.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\routes.tsx",["196"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle, COLORS } from \"./styles\";\r\nimport { Footer } from \"./components\";\r\nimport {\r\n  Nav,\r\n  MentorDetailContainer,\r\n  KobbubakDetailContainer\r\n} from \"./containers\";\r\nimport {\r\n  AboutPage,\r\n  AlcoholDetail,\r\n  FeatherDetail,\r\n  MainPage,\r\n  PostDetail,\r\n  PostList,\r\n  PostWriting,\r\n  StoreDetail,\r\n  StoreList,\r\n  ThemeList,\r\n  TodayRandom\r\n} from \"./pages\";\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={COLORS}>\r\n          <GlobalStyle />\r\n          <Router>\r\n            <Nav />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={MainPage} />\r\n              <Route exact path=\"/about\" component={AboutPage} />\r\n              <Route exact path=\"/alcohol-detail\" component={AlcoholDetail} />\r\n              <Route exact path=\"/feather-detail\" component={FeatherDetail} />\r\n              <Route\r\n                exact\r\n                path=\"/kobbubak-detail\"\r\n                component={KobbubakDetailContainer}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/metor-detail\"\r\n                component={MentorDetailContainer}\r\n              />\r\n              <Route exact path=\"/store-detail/:id\" component={StoreDetail} />\r\n              <Route exact path=\"/store-list\" component={StoreList} />\r\n              <Route exact path=\"/theme-list\" component={ThemeList} />\r\n              <Route exact path=\"/today-random\" component={TodayRandom} />\r\n              <Route exact path=\"/post-detail/:id\" component={PostDetail} />\r\n              <Route exact path=\"/post-list\" component={PostList} />\r\n              <Route exact path=\"/post-writing\" component={PostWriting} />\r\n            </Switch>\r\n            {/* <Footer /> */}\r\n          </Router>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Routes;\r\n",["197","198"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\registerModal.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\googleFirstLogin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\globalStyle.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\themeColor.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\mixin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\MentorDetailContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\NavContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\KobbubakDetailContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\FeatherDetail.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AboutPage.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AlcoholDetail.tsx",["199","200","201"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostDetail.tsx",["202"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport wemeok from \"../images/wemeoktalk_2.png\";\r\nimport { COLORS } from \"../styles/themeColor\";\r\nimport PostReply from \"../pages/childComponents/PostReply\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { EditCommentModal, DeleteCommentModal } from \"../components\";\r\n\r\ninterface UserData {\r\n  info: any;\r\n  items: any[];\r\n}\r\n\r\nexport default function PostDetail({ match }: any) {\r\n  const [posts, setPosts] = useState<any>([]);\r\n  const [comments, setComments] = useState<any>([]);\r\n  const [content, setContent] = useState<string>(\"\");\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState<any>(1);\r\n  const [commentText, setCommentText] = useState<UserData | any>({\r\n    newComment: null,\r\n    updatedComment: { id: null, content: \"기존댓글~~~\" }\r\n  });\r\n  const [currentComment, setCurrentComment] = useState<UserData | any>([]);\r\n  const [activeInput, setActiveInput] = useState(false);\r\n  const [updatedPost, setUpdatedPost] = useState(posts[0]?.content);\r\n  /* const [updatedPost, setUpdatedPost] = useState({\r\n    id: posts[0]?.comment_id,\r\n    content: posts[0]?.content\r\n  }); */\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      await axios\r\n        .get(`${API}/board/${match.params.id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setPosts(res.data.board_info);\r\n          setComments(res.data.board_comments);\r\n        });\r\n    };\r\n    fetchPosts();\r\n  }, [match.params.id]);\r\n\r\n  const onChangeComment = (e: any) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  let data = {\r\n    comment: content\r\n  };\r\n\r\n  const addComment = (): any => {\r\n    if (content.length >= 1) {\r\n      setComments([\r\n        ...comments,\r\n        {\r\n          comment_content: content,\r\n          comment_writer: \"로그인된 사람\",\r\n          comment_created_at: \"방금 전\"\r\n        }\r\n      ]);\r\n      setContent(\"\");\r\n      axios\r\n        .post(`${API}/${match.params.id}/comment`, JSON.stringify(data), {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          window.location.reload();\r\n        });\r\n    }\r\n  };\r\n\r\n  const patchComment = (crud: string, comment_id: number) => {\r\n    console.log(\"댓글수정\", comment_id);\r\n    setCurrentComment(\r\n      currentComment.map((comment: any) =>\r\n        comment.id === comment_id\r\n          ? { ...comment, comment: commentText.updatedComment.content }\r\n          : comment\r\n      )\r\n    );\r\n    setEditModal(false);\r\n\r\n    axios\r\n      .patch(\r\n        `${API}/${match.params.id}/${comment_id}`,\r\n        JSON.stringify({\r\n          // register 맞춘 후, Authorization: localStorage.getItem(\"token\")으로 변경하기\r\n          header: { Authorization: 1 },\r\n          comment: commentText.updatedComment.content\r\n        })\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const deleteComment = (comment_id: any): void => {\r\n    if (window.confirm(\"삭제?\")) {\r\n      axios\r\n        .delete(`${API}/${match.params.id}/${comment_id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          window.location.reload();\r\n        });\r\n    }\r\n  };\r\n\r\n  const updateComment = (e: any) => {\r\n    const { value } = e.target;\r\n    console.log(\"updateComment value\", value);\r\n\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        ...commentText.updatedComment,\r\n        content: value\r\n      }\r\n    });\r\n  };\r\n\r\n  const clickEdit = (comment: any) => {\r\n    setEditModal(true);\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        id: comment.comment_id,\r\n        content: comment.comment_comment\r\n      }\r\n    });\r\n  };\r\n\r\n  const patchPost = (): void => {\r\n    const data = {\r\n      title: posts[0].title,\r\n      content: updatedPost\r\n    };\r\n\r\n    axios.patch(`${API}/${match.params.id}`, JSON.stringify(data), {\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"token\")\r\n      }\r\n    });\r\n  };\r\n\r\n  const deletePost = (): void => {\r\n    if (window.confirm(\"삭제?\")) {\r\n      axios\r\n        .delete(`${API}/${match.params.id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          history.push(\"/post-list\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (pageNumber: any) => {\r\n    axios\r\n      .get(`${API}?offset=${(pageNumber - 1) * 5}`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then((res) => {\r\n        setPosts(res.data);\r\n      });\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Img src={wemeok} alt=\"\" />\r\n      <InnerContainer>\r\n        <ImgText>개발자 공유문화 잊지말자, 그러니까 맛집도 공유하자</ImgText>\r\n        <TitleContainer>\r\n          <TitleText>제목</TitleText>\r\n          <TitleInput>{posts[0]?.title}</TitleInput>\r\n        </TitleContainer>\r\n        <ContentContainer>\r\n          <Writer>{posts[0]?.writer}</Writer>\r\n          {console.log(\"activeInput\", activeInput)}\r\n          {activeInput ? (\r\n            <>\r\n              <ContentInput\r\n                onChange={(e) => setUpdatedPost(e.target.value)}\r\n              ></ContentInput>\r\n              <Edit\r\n                onClick={() => {\r\n                  patchPost();\r\n                  setActiveInput(false);\r\n                }}\r\n              >\r\n                완료\r\n              </Edit>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Content>{posts[0]?.content}</Content>\r\n              <Edit onClick={deletePost}>삭제</Edit>\r\n              <Edit\r\n                onClick={() => {\r\n                  setActiveInput(true);\r\n                }}\r\n              >\r\n                수정\r\n              </Edit>\r\n            </>\r\n          )}\r\n        </ContentContainer>\r\n        <ReplyContainer>\r\n          <ReplyText>댓글</ReplyText>\r\n          <ReplyInput value={content} onChange={onChangeComment}></ReplyInput>\r\n          <Button onClick={addComment}>등록</Button>\r\n        </ReplyContainer>\r\n        <PostReply\r\n          comments={comments}\r\n          match={match}\r\n          setEditModal={setEditModal}\r\n          clickEdit={clickEdit}\r\n          deleteComment={deleteComment}\r\n        ></PostReply>\r\n        <StyledPaginateContainer>\r\n          <ReactPaginate\r\n            pageCount={Math.ceil(posts.total_comment / 10)}\r\n            pageRangeDisplayed={5}\r\n            marginPagesDisplayed={0}\r\n            breakLabel={\"\"}\r\n            previousLabel={\"이전\"}\r\n            nextLabel={\"다음\"}\r\n            onPageChange={handlePageChange}\r\n            containerClassName={\"pagination-ul\"}\r\n            activeClassName={\"currentPage\"}\r\n            previousClassName={\"pageLabel-btn\"}\r\n            nextClassName={\"pageLabel-btn\"}\r\n          />\r\n        </StyledPaginateContainer>\r\n      </InnerContainer>\r\n      {editModal && (\r\n        <EditCommentModal\r\n          editModal={editModal}\r\n          setEditModal={setEditModal}\r\n          // 기존의 commentValue를 {commentText.updatedComment.content}에 setState한 후, 이를 아래처럼 넘겨주기\r\n          updatedComment={commentText.updatedComment}\r\n          submitChangedComment={patchComment}\r\n          updateComment={updateComment}\r\n        />\r\n      )}\r\n      {deleteModal && (\r\n        <DeleteCommentModal\r\n          deleteModal={deleteModal}\r\n          setDeleteModal={setDeleteModal}\r\n          submitChangedComment={deleteComment}\r\n          commentId={commentText.updatedComment.id}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n  width: 45.2rem;\r\n  border: 4px solid ${COLORS.mainYellow};\r\n`;\r\n\r\nconst Img = styled.img`\r\n  position: relative;\r\n  top: 1rem;\r\n  margin: 5rem 3.3rem 0 0;\r\n`;\r\n\r\nconst ImgText = styled.p`\r\n  position: absolute;\r\n  top: 13rem;\r\n  z-index: 10;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 0.3rem;\r\n  width: 35rem;\r\n  height: 1.5rem;\r\n  border-bottom: 2px solid black;\r\n`;\r\n\r\nconst TitleText = styled.p`\r\n  width: 2rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst TitleInput = styled.p`\r\n  margin-left: 1rem;\r\n  width: 33rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst Writer = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  margin: 2rem 0;\r\n  border-bottom: 2px solid black;\r\n`;\r\n\r\nconst Content = styled.p`\r\n  width: 36rem;\r\n  height: 20rem;\r\n`;\r\n\r\nconst ContentInput = styled.input`\r\n  width: 36rem;\r\n  height: 20rem;\r\n`;\r\n\r\nconst ReplyContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 1.5rem;\r\n  width: 35rem;\r\n`;\r\n\r\nconst ReplyText = styled.p`\r\n  width: 2rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst ReplyInput = styled.input`\r\n  margin-left: 1rem;\r\n  width: 35rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  background: ${COLORS.mainYellow};\r\n`;\r\n\r\nconst Edit = styled.button`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  background: ${COLORS.mainYellow};\r\n  float: right;\r\n`;\r\n\r\nconst StyledPaginateContainer = styled.div`\r\n  ul {\r\n    display: flex;\r\n  }\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\MainPage.tsx",["203"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreDetail.tsx",["204","205","206","207","208","209","210"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\TodayRandom.tsx",["211"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { mixin } from \"../styles\";\r\nimport StoreCard2 from \"./childComponents/StoreCard2\";\r\n\r\nexport default function TodayRandom() {\r\n  return (\r\n    <Container>\r\n      <DescSection>\r\n        <Title>이런 날도 있짜나</Title>\r\n        <Desc>\r\n          <p>365일 1년내내 먹고 싶은 음식이 줄줄이 소세지마냥 가득 했던 나,</p>\r\n          <p>N년동안 살아왔지만 단 하루도 메뉴 고민을 한 적 없었던 나,</p>\r\n          <p>·</p>\r\n          <p>·</p>\r\n          <p>·</p>\r\n          <p>근데 오늘은 왜 이렇게 고민이 되는거야?</p>\r\n          <p>내가 뭘 먹고 싶은지조차 모르겠을 때</p>\r\n        </Desc>\r\n      </DescSection>\r\n      <RandomSection>\r\n        <RandomComponent>\r\n          <Row>\r\n            <VerticalText>무얼먹을지</VerticalText>\r\n            <img\r\n              width=\"350rem\"\r\n              src=\"https://www.clickimagination.com/wp-content/uploads/2018/06/click-logo-01.png\"\r\n            />\r\n            <VerticalText>고민이라면</VerticalText>\r\n          </Row>\r\n        </RandomComponent>\r\n        <RandomComponent>\r\n          <Row>\r\n            <VerticalText>여기로</VerticalText>\r\n            <StoreCard2\r\n              id={1}\r\n              image={`https://images.unsplash.com/photo-1550950158-d0d960dff51b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1400&q=80`}\r\n              name={`샌프란시스코 버거`}\r\n              likeCount={100}\r\n              likeState={true}\r\n            />{\" \"}\r\n            <VerticalText>가즈아</VerticalText>\r\n          </Row>\r\n          <div className=\"buttonSection\">\r\n            <ReplayBtn>다시하기</ReplayBtn>\r\n          </div>\r\n        </RandomComponent>\r\n      </RandomSection>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 11rem auto 5rem;\r\n  width: 65rem;\r\n`;\r\n\r\nconst DescSection = styled.div`\r\n  line-height: 2rem;\r\n  letter-spacing: 0.5rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.borderGray};\r\n`;\r\n\r\nconst Title = styled.header`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Desc = styled.p`\r\n  margin: 2rem;\r\n  font-size: 1.3rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst RandomSection = styled.div``;\r\n\r\nconst RandomComponent = styled.div`\r\n  margin: 2rem auto;\r\n  padding: 3rem;\r\n\r\n  .buttonSection {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  ${mixin.flexSet(\"space-evenly\", \"center\", \"row\")}\r\n`;\r\n\r\nconst VerticalText = styled.p`\r\n  font-size: 3rem;\r\n  writing-mode: tb-rl;\r\n  letter-spacing: 1.2rem;\r\n`;\r\n\r\nconst ReplayBtn = styled.span`\r\n  border: 1px solid ${({ theme }) => theme.borderGray};\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.mainYellow};\r\n  font-size: 1.5rem;\r\n  width: 7rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreList.tsx",["212"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostWriting.tsx",["213","214","215"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport wemeok from \"../images/wemeoktalk_2.png\";\r\nimport { COLORS } from \"../styles/themeColor\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport ReactQuill from \"react-quill\"; // Typescript\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nexport default function PostWriting() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  let data = {\r\n    title: title,\r\n    content: content\r\n  };\r\n\r\n  const uploadData = () => {\r\n    axios\r\n      .post(`${API}`, JSON.stringify(data), {\r\n        headers: {\r\n          \"Content-Type\": `application/json`\r\n        }\r\n      })\r\n      .then((res) => {\r\n        history.push(\"/post-list\");\r\n      });\r\n  };\r\n\r\n  const createPost = (e: any): any => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Img src={wemeok} alt=\"\" />\r\n        <InnerContainer>\r\n          <ImgText>개발자 공유문화 잊지말자, 그러니까 맛집도 공유하자</ImgText>\r\n          <TitleContainer>\r\n            <TitleText>제목</TitleText>\r\n            <TitleInput\r\n              type=\"text/html\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"제목\"\r\n            ></TitleInput>\r\n          </TitleContainer>\r\n          <ContentContainer>\r\n            <TitleText>내용</TitleText>\r\n            <Content\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              placeholder=\"내용을 입력하세요.\"\r\n            ></Content>\r\n            {/*             <QuillContainer>\r\n              <ReactQuill value={content} onChange={createPost} />\r\n            </QuillContainer> */}\r\n          </ContentContainer>\r\n          <TitleContainer>\r\n            <TitleText>첨부파일</TitleText>\r\n            <TitleInput></TitleInput>\r\n          </TitleContainer>\r\n          <Button onClick={uploadData}>\r\n            <Link to=\"/post-writing\">작성</Link>\r\n          </Button>\r\n        </InnerContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n  width: 45.2rem;\r\n  border: 4px solid ${COLORS.mainYellow};\r\n`;\r\n\r\nconst Img = styled.img`\r\n  position: relative;\r\n  top: 1rem;\r\n  margin: 5rem 3.3rem 0 0;\r\n`;\r\n\r\nconst ImgText = styled.p`\r\n  position: absolute;\r\n  top: 13rem;\r\n  z-index: 10;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 1.5rem;\r\n  width: 35rem;\r\n`;\r\n\r\nconst TitleText = styled.p`\r\n  width: 4rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  margin-left: 1rem;\r\n  width: 35rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst Content = styled.input`\r\n  width: 36rem;\r\n  height: 20rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  background: ${COLORS.mainYellow};\r\n`;\r\n\r\nconst QuillContainer = styled.div`\r\n  .quill {\r\n    height: 10rem;\r\n  }\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\ThemeList.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostList.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\config.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard2.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\PostReply.tsx",["216","217","218","219","220"],"import React, { useState } from \"react\";\r\nimport { COLORS } from \"../../styles/themeColor\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../../config\";\r\n\r\ninterface UserData {\r\n  info: any;\r\n  items: any[];\r\n}\r\n\r\nexport default function PostReply({\r\n  comments,\r\n  match,\r\n  setEditModal,\r\n  clickEdit,\r\n  deleteComment\r\n}: any) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ReplyContainer>\r\n      {comments?.map(\r\n        (comment: {\r\n          board_comments: any;\r\n          comment_writer: {} | null | undefined;\r\n          comment_content: any;\r\n          comment_created_at: any;\r\n          comment_id: any;\r\n        }) => (\r\n          <div>\r\n            <li>{comment.comment_writer}</li>\r\n            <Bar>|</Bar>\r\n            <li>{comment.comment_content}</li>\r\n            <li>({comment.comment_created_at})</li>\r\n            <Button onClick={() => clickEdit(comment)}>수정</Button>\r\n            {console.log(\"댓글삭제\", comment)}\r\n            <Button onClick={() => deleteComment(comment.comment_id)}>\r\n              삭제\r\n            </Button>\r\n          </div>\r\n        )\r\n      )}\r\n    </ReplyContainer>\r\n  );\r\n}\r\n\r\nconst ReplyContainer = styled.div`\r\n  width: 720px;\r\n\r\n  div {\r\n    display: flex;\r\n    border-bottom: 1px solid black;\r\n\r\n    li {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 0 1rem;\r\n      height: 2rem;\r\n      list-style: none;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  margin: 0;\r\n  line-height: 2rem;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  background: ${COLORS.mainYellow};\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\Posts.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\MetorTheme.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\KobbubakTheme.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\registerModal.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\googleFirstLogin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\DeleteCommentModal.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\GoogleLoginComponent.tsx",["221","222","223","224","225","226","227"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { API } from \"../config\";\r\nimport {\r\n  setSignupActive,\r\n  setLoginActive,\r\n  setFirstLogin\r\n} from \"../store/actions\";\r\n\r\nexport default function GoogleLoginComponent() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  // 구글 로그인 백엔드 통신 확인 후, 필요여부 재확인 예정\r\n  const getGoogleOAuth2 = async () => {\r\n    const oAuth2 = await localStorage.getItem(\r\n      \"oauth2_ss::http://localhost:3000::1::DEFAULT::_ss_\"\r\n    );\r\n\r\n    console.log(\"oAuth2\", oAuth2);\r\n  };\r\n\r\n  const responseGoogle = (response: any) => {\r\n    console.log(\"구글로그인\");\r\n    console.log(response);\r\n    const { accessToken } = response;\r\n\r\n    axios\r\n      .get(`${API}/user/login/social`, {\r\n        headers: {\r\n          Authorization: accessToken\r\n        }\r\n      })\r\n      .then((res: any) => {\r\n        localStorage.setItem(\"token\", res.access_token);\r\n        alert(\"구글 로그인 되었습니다\");\r\n\r\n        if (res.data.check === \"FIRST VISIT\") {\r\n          dispatch(setFirstLogin(true));\r\n          dispatch(setSignupActive(true));\r\n          dispatch(setLoginActive(false));\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"ERRORS! ===>\", err);\r\n        alert(\"Error가 발생하였습니다\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <GoogleLogin\r\n        render={(renderProps) => (\r\n          <span className=\"googleBtn\">구글로 로그인하기</span>\r\n        )}\r\n        className=\"googleLogin\"\r\n        clientId=\"675033028389-t4ff8ilfoffg5f3pcrkrcg88tqvqisv7.apps.googleusercontent.com\"\r\n        buttonText=\"구글로 로그인하기\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={(err) => console.log(\"Google Error\", err)}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 2em;\r\n  margin-right: 0.7em;\r\n  width: 28.6em;\r\n  font-size: 1.15em;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3.5em;\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  .googleBtn {\r\n    /* border: 2px solid ${({ theme }) => theme.mainYellow}; */\r\n    /* background-color: ${({ theme }) => theme.lightYellow}; */\r\n    font-size: 1.05rem;\r\n    font-weight: 700;\r\n    color: black;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Footer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\LoginForm.tsx",["228"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GoogleLoginComponent } from \"./index\";\r\n\r\ninterface IProps {\r\n  handleChange: (e: any) => void;\r\n  submitLogin: () => void;\r\n}\r\n\r\ninterface StateForStyle {\r\n  short?: boolean;\r\n  needSpace?: boolean;\r\n  buttons?: boolean;\r\n}\r\n\r\nexport default function LoginForm({ handleChange, submitLogin }: IProps) {\r\n  return (\r\n    <Container>\r\n      <Title>로그인</Title>\r\n      {/* <InfoSection method=\"POST\"> */}\r\n      <BlockWrapper>\r\n        <Subject>이메일</Subject>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          required\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>비밀번호</Subject>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper buttons>\r\n        <GoogleLoginComponent />\r\n        <LoginBtn\r\n          onClick={submitLogin}\r\n          type=\"submit\"\r\n          value=\"로그인\"\r\n          className=\"button\"\r\n        ></LoginBtn>\r\n      </BlockWrapper>\r\n      {/* </InfoSection> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 2em 1.5em;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${({ theme }) => theme.mainYellow};\r\n  height: 1em;\r\n  text-align: center;\r\n  font-size: 6em;\r\n  font-weight: 900;\r\n  margin-top: 0.8em;\r\n  margin-bottom: 0.7em;\r\n  letter-spacing: 0.2em;\r\n`;\r\n\r\nconst InfoSection = styled.form`\r\n  font-family: \"Noto Sans KR\";\r\n  margin: 0 2.5em;\r\n  height: 20em;\r\n`;\r\n\r\nconst BlockWrapper = styled.div<StateForStyle>`\r\n  margin: ${({ buttons }) => (buttons ? \"5.7em 0 0\" : \"3em 0\")};\r\n  height: 2.5em;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  .button {\r\n    background-color: ${({ theme }) => theme.lightYellow};\r\n  }\r\n`;\r\n\r\nconst Subject = styled.div<StateForStyle>`\r\n  text-align: center;\r\n  font-size: 1.15em;\r\n  font-weight: 500;\r\n  width: 4.5em;\r\n  margin-right: 1.5em;\r\n  margin-left: ${({ needSpace }) => (needSpace ? \"1.5em\" : \"0\")};\r\n`;\r\n\r\nconst Input = styled.input<StateForStyle>`\r\n  width: ${({ short }) => (short ? \"10.5em\" : \"30em\")};\r\n  height: 4em;\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n`;\r\n\r\nconst LoginBtn = styled.input`\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n  margin-top: 2em;\r\n  width: 28.6em;\r\n  font-size: 1.15rem;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3.5em;\r\n  text-align: center;\r\n  background-color: white;\r\n  cursor: pointer;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\EditCommentModal.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Signup.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Nav.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Login.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\SignupForm.tsx",["229","230"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { API } from \"../config\";\r\n\r\ninterface IProps {\r\n  handleChange: (e: any) => void;\r\n  submitSingup: () => void;\r\n}\r\n\r\ninterface StateForStyle {\r\n  short?: boolean;\r\n  needSpace?: boolean;\r\n}\r\n\r\nexport default function SignupForm({ handleChange, submitSingup }: IProps) {\r\n  const firstGoogle = useSelector(\r\n    ({ setFirstReducer }) => setFirstReducer.first\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Title>회원가입</Title>\r\n      {/* <InfoSection action={`${API}/user/signup`} method=\"POST\"> */}\r\n      {/* <InfoSection> */}\r\n      <BlockWrapper>\r\n        <Subject short={true}>기수</Subject>\r\n        <Input\r\n          type=\"number\"\r\n          name=\"number\"\r\n          placeholder=\"숫자만!\"\r\n          onChange={handleChange}\r\n          required\r\n          short={true}\r\n        ></Input>\r\n        <Subject short={true} needSpace={true}>\r\n          이름\r\n        </Subject>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          placeholder=\"전체이름!\"\r\n          onChange={handleChange}\r\n          required\r\n          short={true}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>이메일</Subject>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          required\r\n          placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n          disabled={firstGoogle ? true : false}\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>비밀번호</Subject>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n          placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n          disabled={firstGoogle ? true : false}\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>비밀번호 확인</Subject>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"repassword\"\r\n          required\r\n          placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n          disabled={firstGoogle ? true : false}\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <Button\r\n        type=\"submit\"\r\n        value=\"회원가입\"\r\n        className=\"button\"\r\n        onClick={submitSingup}\r\n      ></Button>\r\n      {/* </InfoSection> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 2em 1.5em;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${({ theme }) => theme.mainYellow};\r\n  height: 1em;\r\n  text-align: center;\r\n  font-size: 6em;\r\n  font-weight: 900;\r\n  margin-bottom: 0.5em;\r\n  letter-spacing: 0.2em;\r\n`;\r\n\r\nconst InfoSection = styled.form`\r\n  font-family: \"Noto Sans KR\";\r\n  margin: 0 2.5em;\r\n  height: 20em;\r\n`;\r\n\r\nconst BlockWrapper = styled.div`\r\n  margin: 2em 0;\r\n  height: 2.5em;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  .button {\r\n    background-color: ${({ theme }) => theme.lightYellow};\r\n  }\r\n`;\r\n\r\nconst Subject = styled.div<StateForStyle>`\r\n  text-align: center;\r\n  font-size: 1.15em;\r\n  font-weight: 500;\r\n  width: 4.5em;\r\n  margin-right: 1.5em;\r\n  margin-left: ${({ needSpace }) => (needSpace ? \"1.5em\" : \"0\")};\r\n`;\r\n\r\nconst Input = styled.input<StateForStyle>`\r\n  width: ${({ short }) => (short ? \"8.5em\" : \"30em\")};\r\n  height: 4em;\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n`;\r\n\r\nconst Button = styled.input`\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n  margin-top: 2em;\r\n  width: 25em;\r\n  font-size: 1.15rem;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3.5em;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.lightYellow};\r\n  cursor: pointer;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\PeoplePick.tsx",["231","232"],"import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  IoIosArrowBack,\r\n  IoIosArrowForward,\r\n  IoIosAddCircle\r\n} from \"react-icons/io\";\r\nimport { mixin } from \"../styles\";\r\n\r\ninterface IProps {\r\n  info: never[];\r\n  TITLE: string[];\r\n}\r\n\r\nexport default function PeoplePick({ info, TITLE }: IProps) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Header>\r\n          <Title>\r\n            <p>{TITLE[0]}</p>\r\n            <p>{TITLE[1]}</p>\r\n          </Title>\r\n          <Line></Line>\r\n          <Arrow>\r\n            <div className=\"left arrow\">\r\n              <IoIosArrowBack className=\"arrowIcon\" />\r\n            </div>\r\n            <div className=\"right arrow\">\r\n              <IoIosArrowForward className=\"arrowIcon\" />\r\n            </div>\r\n          </Arrow>\r\n        </Header>\r\n        <CardWrapper>\r\n          {info.length &&\r\n            info.map(\r\n              ({ id, image, name, position, store_id, store, desc }: any) => (\r\n                <CardEach id={id}>\r\n                  <Profile>\r\n                    <img src={image} />\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"position\">{position}</div>\r\n                  </Profile>\r\n                  <Desc>\r\n                    <div className=\"storeHeader\">\r\n                      <span className=\"decoTitle\">\" </span>\r\n                      <span className=\"storeTitle\">{store}</span>\r\n                      <span className=\"decoTitle\"> \"</span>\r\n                    </div>\r\n                    <div className=\"storeDesc\">{desc}</div>\r\n                  </Desc>\r\n                  <MoreBtn>\r\n                    <span\r\n                      className=\"seeStoreInfo\"\r\n                      onClick={() => history.push(`/store-detail/${store_id}`)}\r\n                    >\r\n                      맛집 구경하기\r\n                    </span>\r\n                    <IoIosAddCircle className=\"btnIcon\" />\r\n                  </MoreBtn>\r\n                </CardEach>\r\n              )\r\n            )}\r\n        </CardWrapper>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 65rem;\r\n  background-color: ${({ theme }) => theme.mentorBack};\r\n  line-height: 1.3;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  margin: 5rem auto;\r\n  padding-top: 3rem;\r\n  width: 65rem;\r\n`;\r\n\r\nconst Header = styled.section`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  width: 55rem;\r\n  font-size: 2.5rem;\r\n  letter-spacing: 0.4rem;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  margin-right: 1rem;\r\n  width: 100%;\r\n  height: 1.25rem;\r\n  border-top: 2px solid ${({ theme }) => theme.borderGray};\r\n`;\r\n\r\nconst Arrow = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n\r\n  .arrow {\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    background-color: #0000000d;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .left {\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  .right {\r\n  }\r\n\r\n  .arrowIcon {\r\n    width: 50%;\r\n    height: 50%;\r\n    color: ${({ theme }) => theme.buttonGray};\r\n  }\r\n`;\r\n\r\nconst CardWrapper = styled.div``;\r\n\r\nconst CardEach = styled.div`\r\n  position: relative;\r\n  float: left;\r\n  width: 33.33%;\r\n  height: 40rem;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst Profile = styled.section`\r\n  padding: 1.25rem;\r\n\r\n  img {\r\n    border-radius: 50%;\r\n    width: 15rem;\r\n    height: 15rem;\r\n  }\r\n\r\n  .name {\r\n    font-size: 1.3rem;\r\n    font-weight: 900;\r\n    line-height: 1.14;\r\n    margin-top: 1.94rem;\r\n  }\r\n\r\n  .position {\r\n    margin-top: 0.6rem;\r\n    font-size: 1rem;\r\n    line-height: 1.07;\r\n  }\r\n`;\r\n\r\nconst Desc = styled.section`\r\n  line-break: anywhere;\r\n  padding: 1.25rem 1.13rem;\r\n  line-height: 1.88;\r\n  margin-bottom: 2.25rem;\r\n\r\n  .storeHeader {\r\n    .decoTitle {\r\n    }\r\n    .storeTitle {\r\n      font-weight: 900;\r\n      font-size: 1.15rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MoreBtn = styled.span`\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  margin: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 7rem;\r\n  height: 1.5rem;\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0rem;\r\n\r\n  .btnIcon {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n",{"ruleId":"233","severity":1,"message":"234","line":5,"column":10,"nodeType":"235","messageId":"236","endLine":5,"endColumn":16},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":93,"column":13,"nodeType":"243","endLine":93,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":116,"column":13,"nodeType":"243","endLine":116,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":139,"column":13,"nodeType":"243","endLine":139,"endColumn":42},{"ruleId":"233","severity":1,"message":"244","line":23,"column":10,"nodeType":"235","messageId":"236","endLine":23,"endColumn":21},{"ruleId":"233","severity":1,"message":"245","line":29,"column":9,"nodeType":"235","messageId":"236","endLine":29,"endColumn":13},{"ruleId":"233","severity":1,"message":"246","line":7,"column":10,"nodeType":"235","messageId":"236","endLine":7,"endColumn":15},{"ruleId":"233","severity":1,"message":"247","line":39,"column":10,"nodeType":"235","messageId":"236","endLine":39,"endColumn":17},{"ruleId":"233","severity":1,"message":"248","line":40,"column":10,"nodeType":"235","messageId":"236","endLine":40,"endColumn":15},{"ruleId":"233","severity":1,"message":"249","line":40,"column":17,"nodeType":"235","messageId":"236","endLine":40,"endColumn":25},{"ruleId":"233","severity":1,"message":"250","line":41,"column":10,"nodeType":"235","messageId":"236","endLine":41,"endColumn":14},{"ruleId":"233","severity":1,"message":"251","line":41,"column":16,"nodeType":"235","messageId":"236","endLine":41,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":239,"column":15,"nodeType":"243","endLine":239,"endColumn":81},{"ruleId":"241","severity":1,"message":"242","line":25,"column":13,"nodeType":"243","endLine":28,"endColumn":15},{"ruleId":"233","severity":1,"message":"252","line":9,"column":9,"nodeType":"235","messageId":"236","endLine":9,"endColumn":16},{"ruleId":"233","severity":1,"message":"253","line":8,"column":8,"nodeType":"235","messageId":"236","endLine":8,"endColumn":18},{"ruleId":"233","severity":1,"message":"254","line":33,"column":9,"nodeType":"235","messageId":"236","endLine":33,"endColumn":19},{"ruleId":"233","severity":1,"message":"255","line":138,"column":7,"nodeType":"235","messageId":"236","endLine":138,"endColumn":21},{"ruleId":"233","severity":1,"message":"256","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"257","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":13},{"ruleId":"233","severity":1,"message":"258","line":6,"column":10,"nodeType":"235","messageId":"236","endLine":6,"endColumn":13},{"ruleId":"233","severity":1,"message":"259","line":8,"column":11,"nodeType":"235","messageId":"236","endLine":8,"endColumn":19},{"ruleId":"233","severity":1,"message":"260","line":20,"column":9,"nodeType":"235","messageId":"236","endLine":20,"endColumn":16},{"ruleId":"233","severity":1,"message":"261","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":23},{"ruleId":"233","severity":1,"message":"256","line":1,"column":25,"nodeType":"235","messageId":"236","endLine":1,"endColumn":33},{"ruleId":"233","severity":1,"message":"262","line":1,"column":35,"nodeType":"235","messageId":"236","endLine":1,"endColumn":44},{"ruleId":"233","severity":1,"message":"263","line":4,"column":17,"nodeType":"235","messageId":"236","endLine":4,"endColumn":27},{"ruleId":"233","severity":1,"message":"264","line":4,"column":29,"nodeType":"235","messageId":"236","endLine":4,"endColumn":47},{"ruleId":"233","severity":1,"message":"265","line":4,"column":49,"nodeType":"235","messageId":"236","endLine":4,"endColumn":62},{"ruleId":"233","severity":1,"message":"266","line":19,"column":9,"nodeType":"235","messageId":"236","endLine":19,"endColumn":24},{"ruleId":"233","severity":1,"message":"267","line":68,"column":7,"nodeType":"235","messageId":"236","endLine":68,"endColumn":18},{"ruleId":"233","severity":1,"message":"258","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":13},{"ruleId":"233","severity":1,"message":"267","line":106,"column":7,"nodeType":"235","messageId":"236","endLine":106,"endColumn":18},{"ruleId":"233","severity":1,"message":"246","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":15},{"ruleId":"241","severity":1,"message":"242","line":43,"column":21,"nodeType":"243","endLine":43,"endColumn":40},"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["268"],"no-negated-in-lhs",["269"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'currentPage' is assigned a value but never used.","'time' is assigned a value but never used.","'mixin' is defined but never used.","'address' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'like' is assigned a value but never used.","'setLike' is assigned a value but never used.","'feather' is assigned a value but never used.","'ReactQuill' is defined but never used.","'createPost' is assigned a value but never used.","'QuillContainer' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'API' is defined but never used.","'UserData' is defined but never used.","'history' is assigned a value but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'AxiosError' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'AxiosResponse' is defined but never used.","'getGoogleOAuth2' is assigned a value but never used.","'InfoSection' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]