[{"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\index.tsx":"1","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\routes.tsx":"2","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\index.ts":"3","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\registerModal.ts":"4","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\googleFirstLogin.ts":"5","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\index.ts":"6","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\index.ts":"7","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\index.ts":"8","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\globalStyle.ts":"9","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\mixin.ts":"10","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\themeColor.ts":"11","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AboutPage.tsx":"12","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AlcoholDetail.tsx":"13","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\FeatherDetail.tsx":"14","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostList.tsx":"15","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\MainPage.tsx":"16","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\NavContainer.tsx":"17","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostDetail.tsx":"18","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreDetail.tsx":"19","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostWriting.tsx":"20","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\KobbubakDetailContainer.tsx":"21","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\ThemeList.tsx":"22","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\MentorDetailContainer.tsx":"23","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreList.tsx":"24","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\TodayRandom.tsx":"25","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\index.ts":"26","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\config.ts":"27","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\Posts.tsx":"28","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard.tsx":"29","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard2.tsx":"30","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\MetorTheme.tsx":"31","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\KobbubakTheme.tsx":"32","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\PostReply.tsx":"33","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\registerModal.ts":"34","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\googleFirstLogin.ts":"35","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\index.ts":"36","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\DeleteCommentModal.tsx":"37","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\EditCommentModal.tsx":"38","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Footer.tsx":"39","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Nav.tsx":"40","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\LoginForm.tsx":"41","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Login.tsx":"42","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Signup.tsx":"43","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\SignupForm.tsx":"44","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\PeoplePick.tsx":"45","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\GoogleLoginComponent.tsx":"46"},{"size":482,"mtime":1613024601786,"results":"47","hashOfConfig":"48"},{"size":2047,"mtime":1612510370591,"results":"49","hashOfConfig":"48"},{"size":214,"mtime":1612510370597,"results":"50","hashOfConfig":"48"},{"size":468,"mtime":1612510370598,"results":"51","hashOfConfig":"48"},{"size":347,"mtime":1612510370597,"results":"52","hashOfConfig":"48"},{"size":89,"mtime":1610800928136,"results":"53","hashOfConfig":"48"},{"size":609,"mtime":1612352299995,"results":"54","hashOfConfig":"48"},{"size":208,"mtime":1612352299974,"results":"55","hashOfConfig":"48"},{"size":686,"mtime":1613024601810,"results":"56","hashOfConfig":"48"},{"size":667,"mtime":1610800928138,"results":"57","hashOfConfig":"48"},{"size":265,"mtime":1612510370600,"results":"58","hashOfConfig":"48"},{"size":114,"mtime":1612506093196,"results":"59","hashOfConfig":"48"},{"size":5612,"mtime":1613046390058,"results":"60","hashOfConfig":"48"},{"size":2756,"mtime":1613039580758,"results":"61","hashOfConfig":"48"},{"size":3629,"mtime":1612514862464,"results":"62","hashOfConfig":"48"},{"size":6054,"mtime":1613024601793,"results":"63","hashOfConfig":"48"},{"size":855,"mtime":1612510370570,"results":"64","hashOfConfig":"48"},{"size":10094,"mtime":1613024601795,"results":"65","hashOfConfig":"48"},{"size":15568,"mtime":1613024601798,"results":"66","hashOfConfig":"48"},{"size":3449,"mtime":1613024601796,"results":"67","hashOfConfig":"48"},{"size":687,"mtime":1612352299968,"results":"68","hashOfConfig":"48"},{"size":112,"mtime":1610801722201,"results":"69","hashOfConfig":"48"},{"size":666,"mtime":1612352299969,"results":"70","hashOfConfig":"48"},{"size":2804,"mtime":1613045512757,"results":"71","hashOfConfig":"48"},{"size":3492,"mtime":1613024601803,"results":"72","hashOfConfig":"48"},{"size":71,"mtime":1612510370595,"results":"73","hashOfConfig":"48"},{"size":100,"mtime":1613024648060,"results":"74","hashOfConfig":"48"},{"size":1113,"mtime":1612510370590,"results":"75","hashOfConfig":"48"},{"size":1909,"mtime":1613024601806,"results":"76","hashOfConfig":"48"},{"size":1685,"mtime":1613041207569,"results":"77","hashOfConfig":"48"},{"size":577,"mtime":1611559283150,"results":"78","hashOfConfig":"48"},{"size":639,"mtime":1611559283148,"results":"79","hashOfConfig":"48"},{"size":1726,"mtime":1612514862468,"results":"80","hashOfConfig":"48"},{"size":300,"mtime":1612510370595,"results":"81","hashOfConfig":"48"},{"size":162,"mtime":1612510370593,"results":"82","hashOfConfig":"48"},{"size":556,"mtime":1612510370569,"results":"83","hashOfConfig":"48"},{"size":2266,"mtime":1612510370556,"results":"84","hashOfConfig":"48"},{"size":2391,"mtime":1612510370556,"results":"85","hashOfConfig":"48"},{"size":98,"mtime":1610800928069,"results":"86","hashOfConfig":"48"},{"size":4931,"mtime":1612510815986,"results":"87","hashOfConfig":"48"},{"size":2673,"mtime":1612510370560,"results":"88","hashOfConfig":"48"},{"size":1445,"mtime":1612514862453,"results":"89","hashOfConfig":"48"},{"size":1669,"mtime":1613024601782,"results":"90","hashOfConfig":"48"},{"size":3915,"mtime":1612514862457,"results":"91","hashOfConfig":"48"},{"size":5788,"mtime":1613119355321,"results":"92","hashOfConfig":"48"},{"size":2994,"mtime":1612791299132,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1pfk716",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"96"},"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\index.tsx",[],["201","202"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\routes.tsx",["203"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle, COLORS } from \"./styles\";\r\nimport { Footer } from \"./components\";\r\nimport {\r\n  Nav,\r\n  MentorDetailContainer,\r\n  KobbubakDetailContainer\r\n} from \"./containers\";\r\nimport {\r\n  AboutPage,\r\n  AlcoholDetail,\r\n  FeatherDetail,\r\n  MainPage,\r\n  PostDetail,\r\n  PostList,\r\n  PostWriting,\r\n  StoreDetail,\r\n  StoreList,\r\n  ThemeList,\r\n  TodayRandom\r\n} from \"./pages\";\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={COLORS}>\r\n          <GlobalStyle />\r\n          <Router>\r\n            <Nav />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={MainPage} />\r\n              <Route exact path=\"/about\" component={AboutPage} />\r\n              <Route exact path=\"/alcohol-detail\" component={AlcoholDetail} />\r\n              <Route exact path=\"/feather-detail\" component={FeatherDetail} />\r\n              <Route\r\n                exact\r\n                path=\"/kobbubak-detail\"\r\n                component={KobbubakDetailContainer}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/metor-detail\"\r\n                component={MentorDetailContainer}\r\n              />\r\n              <Route exact path=\"/store-detail/:id\" component={StoreDetail} />\r\n              <Route exact path=\"/store-list\" component={StoreList} />\r\n              <Route exact path=\"/theme-list\" component={ThemeList} />\r\n              <Route exact path=\"/today-random\" component={TodayRandom} />\r\n              <Route exact path=\"/post-detail/:id\" component={PostDetail} />\r\n              <Route exact path=\"/post-list\" component={PostList} />\r\n              <Route exact path=\"/post-writing\" component={PostWriting} />\r\n            </Switch>\r\n            {/* <Footer /> */}\r\n          </Router>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Routes;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\registerModal.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\googleFirstLogin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\globalStyle.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\mixin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\themeColor.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AboutPage.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AlcoholDetail.tsx",["204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../config\";\r\nimport axios from \"axios\";\r\nimport StoreCard2 from \"./childComponents/StoreCard2\";\r\nimport Slider from \"react-slick\";\r\nimport \"./AlcoholDetail.scss\";\r\nimport \"./MainPage.scss\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\ninterface UserData {\r\n  alcoholData: any;\r\n}\r\nexport default function AlcoholDetail({ match, props }: any) {\r\n  const [alcoholData, setAlcoholData] = useState<UserData | any>([]);\r\n  const alcohol = \"alcohol\";\r\n  const setting = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 1000,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    arrows: true,\r\n    nextArrow: (\r\n      <div>\r\n        <img\r\n          alt=\"rightArrow\"\r\n          className=\"next-slick-arrow\"\r\n          src=\"./images/right-arrow.png\"\r\n        ></img>\r\n      </div>\r\n    ),\r\n    prevArrow: (\r\n      <div>\r\n        <img\r\n          alt=\"leftArrow\"\r\n          className=\"prev-slick-arrow\"\r\n          src=\"./images/left-arrow.png\"\r\n        ></img>\r\n      </div>\r\n    ),\r\n    className: \"slides\"\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      axios\r\n        .get(`${API}/store/list?tag=${alcohol}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          console.log(\"123\", res.data.store_list);\r\n          setAlcoholData(res.data.store_list);\r\n        });\r\n    } else {\r\n      axios.get(`${API}/store/list?tag=${alcohol}`).then((res) => {\r\n        setAlcoholData(res.data.store_list);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const changeLikedState = (id: any, type: string) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setAlcoholData({\r\n        ...alcoholData,\r\n        [type]: alcoholData[type].map((data: any) => {\r\n          if (data.id === id) {\r\n            if (data.like_state) {\r\n              return {\r\n                ...data,\r\n                like_state: !data.like_state,\r\n                like_count: data.like_count - 1\r\n              };\r\n            } else {\r\n              return {\r\n                ...data,\r\n                like_state: !data.like_state,\r\n                like_count: data.like_count + 1\r\n              };\r\n            }\r\n          } else {\r\n            return data;\r\n          }\r\n        })\r\n      });\r\n      axios\r\n        .post(`${API}/store/like/${id}`, \"data\", {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => console.log(\"좋아요 통신이 완료되었습니다.\", res))\r\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"alcohol\">\r\n        <div className=\"logoBox\">\r\n          <div className=\"logoBox1\">\r\n            <p>술과 함께</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"sojuDiv\">\r\n          <div className=\"sojuIcon\">\r\n            <img src=\"./images/soju.png\"></img>\r\n            <p>소주와</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"sojuListDiv\">\r\n          <div className=\"sojuCardDiv\">\r\n            <Slider {...setting}>\r\n              {alcoholData.soju?.map((alcohol: any) => {\r\n                return (\r\n                  <StoreCard2\r\n                    id={alcohol.id}\r\n                    name={alcohol.name}\r\n                    type={\"soju\"}\r\n                    image={alcohol.image}\r\n                    likeCount={alcohol.like_count}\r\n                    likeState={alcohol.like_state}\r\n                    changeLikedState={changeLikedState}\r\n                  />\r\n                );\r\n              })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n        <div className=\"beerDiv\">\r\n          <div className=\"beerIcon\">\r\n            <img src=\"./images/beer.png\"></img>\r\n            <p>맥주와</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"beerListDiv\">\r\n          <div className=\"beerCardDiv\">\r\n            <Slider {...setting}>\r\n              {alcoholData.beer?.map((alcohol: any) => {\r\n                return (\r\n                  <StoreCard2\r\n                    id={alcohol.id}\r\n                    name={alcohol.name}\r\n                    type={\"beer\"}\r\n                    image={alcohol.image}\r\n                    likeCount={alcohol.like_count}\r\n                    likeState={alcohol.like_state}\r\n                    changeLikedState={changeLikedState}\r\n                  />\r\n                );\r\n              })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n        <div className=\"riceWineDiv\">\r\n          <div className=\"riceWineIcon\">\r\n            <img src=\"./images/sake.png\"></img>\r\n            <p>막걸리와</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"riceWineDiv\">\r\n          <div className=\"riceWineCardDiv\">\r\n            <Slider {...setting}>\r\n              {alcoholData.makgeolli?.map((alcohol: any) => {\r\n                return (\r\n                  <StoreCard2\r\n                    id={alcohol.id}\r\n                    type={\"makgeolli\"}\r\n                    name={alcohol.name}\r\n                    image={alcohol.image}\r\n                    likeCount={alcohol.like_count}\r\n                    likeState={alcohol.like_state}\r\n                    changeLikedState={changeLikedState}\r\n                  />\r\n                );\r\n              })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\FeatherDetail.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostList.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\MainPage.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\NavContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostDetail.tsx",["207"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport wemeok from \"../images/wemeoktalk_2.png\";\r\nimport { COLORS } from \"../styles/themeColor\";\r\nimport PostReply from \"../pages/childComponents/PostReply\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { EditCommentModal, DeleteCommentModal } from \"../components\";\r\n\r\ninterface UserData {\r\n  info: any;\r\n  items: any[];\r\n}\r\n\r\nexport default function PostDetail({ match }: any) {\r\n  const [posts, setPosts] = useState<any>([]);\r\n  const [comments, setComments] = useState<any>([]);\r\n  const [content, setContent] = useState<string>(\"\");\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState<any>(1);\r\n  const [commentText, setCommentText] = useState<UserData | any>({\r\n    newComment: null,\r\n    updatedComment: { id: null, content: \"기존댓글~~~\" }\r\n  });\r\n  const [currentComment, setCurrentComment] = useState<UserData | any>([]);\r\n  const [activeInput, setActiveInput] = useState(false);\r\n  const [updatedPost, setUpdatedPost] = useState(posts[0]?.content);\r\n  /* const [updatedPost, setUpdatedPost] = useState({\r\n    id: posts[0]?.comment_id,\r\n    content: posts[0]?.content\r\n  }); */\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      await axios\r\n        .get(`${API}/board/${match.params.id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setPosts(res.data.board_info);\r\n          setComments(res.data.board_comments);\r\n        });\r\n    };\r\n    fetchPosts();\r\n  }, [match.params.id]);\r\n\r\n  const onChangeComment = (e: any) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  let data = {\r\n    comment: content\r\n  };\r\n\r\n  const addComment = (): any => {\r\n    if (content.length >= 1) {\r\n      setComments([\r\n        ...comments,\r\n        {\r\n          comment_content: content,\r\n          comment_writer: \"로그인된 사람\",\r\n          comment_created_at: \"방금 전\"\r\n        }\r\n      ]);\r\n      setContent(\"\");\r\n      axios\r\n        .post(`${API}/board/${match.params.id}/comment`, JSON.stringify(data), {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          window.location.reload();\r\n        });\r\n    }\r\n  };\r\n\r\n  const patchComment = (crud: string, comment_id: number) => {\r\n    console.log(\"댓글수정\", comment_id);\r\n    setCurrentComment(\r\n      currentComment.map((comment: any) =>\r\n        comment.id === comment_id\r\n          ? { ...comment, comment: commentText.updatedComment.content }\r\n          : comment\r\n      )\r\n    );\r\n    setEditModal(false);\r\n\r\n    axios\r\n      .patch(\r\n        `${API}/board/${match.params.id}/${comment_id}`,\r\n        JSON.stringify({\r\n          // register 맞춘 후, Authorization: localStorage.getItem(\"token\")으로 변경하기\r\n          comment: commentText.updatedComment.content\r\n        }),\r\n        { headers: { Authorization: localStorage.getItem(\"token\") } }\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const deleteComment = (comment_id: any): void => {\r\n    if (window.confirm(\"삭제?\")) {\r\n      axios\r\n        .delete(`${API}/board/${match.params.id}/${comment_id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          window.location.reload();\r\n        });\r\n    }\r\n  };\r\n\r\n  const updateComment = (e: any) => {\r\n    const { value } = e.target;\r\n    console.log(\"updateComment value\", value);\r\n\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        ...commentText.updatedComment,\r\n        content: value\r\n      }\r\n    });\r\n  };\r\n\r\n  const clickEdit = (comment: any) => {\r\n    setEditModal(true);\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        id: comment.comment_id,\r\n        content: comment.comment_comment\r\n      }\r\n    });\r\n  };\r\n\r\n  const patchPost = (): void => {\r\n    const data = {\r\n      title: posts[0].title,\r\n      content: updatedPost\r\n    };\r\n\r\n    axios.patch(`${API}/board/${match.params.id}`, JSON.stringify(data), {\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"token\")\r\n      }\r\n    });\r\n  };\r\n\r\n  const deletePost = (): void => {\r\n    if (window.confirm(\"삭제?\")) {\r\n      axios\r\n        .delete(`${API}/board/${match.params.id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          history.push(\"/post-list\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (pageNumber: any) => {\r\n    axios\r\n      .get(`${API}/board?offset=${(pageNumber - 1) * 5}`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then((res) => {\r\n        setPosts(res.data);\r\n      });\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Img src={wemeok} alt=\"\" />\r\n      <InnerContainer>\r\n        <ImgText>개발자 공유문화 잊지말자, 그러니까 맛집도 공유하자</ImgText>\r\n        <TitleContainer>\r\n          <TitleText>제목</TitleText>\r\n          <TitleInput>{posts[0]?.title}</TitleInput>\r\n        </TitleContainer>\r\n        <ContentContainer>\r\n          <Writer>{posts[0]?.writer}</Writer>\r\n          {console.log(\"activeInput\", activeInput)}\r\n          {activeInput ? (\r\n            <>\r\n              <ContentInput\r\n                onChange={(e) => setUpdatedPost(e.target.value)}\r\n              ></ContentInput>\r\n              <Edit\r\n                onClick={() => {\r\n                  patchPost();\r\n                  setActiveInput(false);\r\n                }}\r\n              >\r\n                완료\r\n              </Edit>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Content>{posts[0]?.content}</Content>\r\n              <Edit onClick={deletePost}>삭제</Edit>\r\n              <Edit\r\n                onClick={() => {\r\n                  setActiveInput(true);\r\n                }}\r\n              >\r\n                수정\r\n              </Edit>\r\n            </>\r\n          )}\r\n        </ContentContainer>\r\n        <ReplyContainer>\r\n          <ReplyText>댓글</ReplyText>\r\n          <ReplyInput value={content} onChange={onChangeComment}></ReplyInput>\r\n          <Button onClick={addComment}>등록</Button>\r\n        </ReplyContainer>\r\n        <PostReply\r\n          comments={comments}\r\n          match={match}\r\n          setEditModal={setEditModal}\r\n          clickEdit={clickEdit}\r\n          deleteComment={deleteComment}\r\n        ></PostReply>\r\n        <StyledPaginateContainer>\r\n          <ReactPaginate\r\n            pageCount={Math.ceil(posts.total_comment / 10)}\r\n            pageRangeDisplayed={5}\r\n            marginPagesDisplayed={0}\r\n            breakLabel={\"\"}\r\n            previousLabel={\"이전\"}\r\n            nextLabel={\"다음\"}\r\n            onPageChange={handlePageChange}\r\n            containerClassName={\"pagination-ul\"}\r\n            activeClassName={\"currentPage\"}\r\n            previousClassName={\"pageLabel-btn\"}\r\n            nextClassName={\"pageLabel-btn\"}\r\n          />\r\n        </StyledPaginateContainer>\r\n      </InnerContainer>\r\n      {editModal && (\r\n        <EditCommentModal\r\n          editModal={editModal}\r\n          setEditModal={setEditModal}\r\n          // 기존의 commentValue를 {commentText.updatedComment.content}에 setState한 후, 이를 아래처럼 넘겨주기\r\n          updatedComment={commentText.updatedComment}\r\n          submitChangedComment={patchComment}\r\n          updateComment={updateComment}\r\n        />\r\n      )}\r\n      {deleteModal && (\r\n        <DeleteCommentModal\r\n          deleteModal={deleteModal}\r\n          setDeleteModal={setDeleteModal}\r\n          submitChangedComment={deleteComment}\r\n          commentId={commentText.updatedComment.id}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n  width: 45.2rem;\r\n  border: 4px solid ${COLORS.mainYellow};\r\n`;\r\n\r\nconst Img = styled.img`\r\n  position: relative;\r\n  top: 1rem;\r\n  margin: 5rem 3.3rem 0 0;\r\n`;\r\n\r\nconst ImgText = styled.p`\r\n  position: absolute;\r\n  top: 13rem;\r\n  z-index: 10;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 0.3rem;\r\n  width: 35rem;\r\n  height: 1.5rem;\r\n  border-bottom: 2px solid black;\r\n`;\r\n\r\nconst TitleText = styled.p`\r\n  width: 2rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst TitleInput = styled.p`\r\n  margin-left: 1rem;\r\n  width: 33rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst Writer = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  margin: 2rem 0;\r\n  border-bottom: 2px solid black;\r\n`;\r\n\r\nconst Content = styled.p`\r\n  width: 36rem;\r\n  height: 20rem;\r\n`;\r\n\r\nconst ContentInput = styled.input`\r\n  width: 36rem;\r\n  height: 20rem;\r\n`;\r\n\r\nconst ReplyContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 1.5rem;\r\n  width: 35rem;\r\n`;\r\n\r\nconst ReplyText = styled.p`\r\n  width: 2rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst ReplyInput = styled.input`\r\n  margin-left: 1rem;\r\n  width: 35rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  background: ${COLORS.mainYellow};\r\n`;\r\n\r\nconst Edit = styled.button`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  background: ${COLORS.mainYellow};\r\n  float: right;\r\n`;\r\n\r\nconst StyledPaginateContainer = styled.div`\r\n  ul {\r\n    display: flex;\r\n  }\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreDetail.tsx",["208","209","210","211","212","213","214"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport AliceCarousel from \"react-alice-carousel\";\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport { API } from \"../config\";\r\nimport { mixin } from \"../styles\";\r\nimport { EditCommentModal, DeleteCommentModal } from \"../components\";\r\nimport { IoIosHeartEmpty, IoIosHeart } from \"react-icons/io\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    kakao: any;\r\n  }\r\n}\r\n\r\ninterface UserData {\r\n  info: any;\r\n  items: any[];\r\n}\r\n\r\nexport default function StoreDetail(props: any) {\r\n  const [info, setInfo] = useState<UserData | any>({\r\n    store_info: [\r\n      {\r\n        name: \"매장명\",\r\n        description: \"로딩중 ~~~ 조금만 기다려주세요 !\",\r\n        delivery: true,\r\n        address: \"서울시 강남구 테헤란로 427\"\r\n      }\r\n    ],\r\n    like_count: 0,\r\n    like: false,\r\n    store_images: [\r\n      \"https://images.unsplash.com/photo-1607434472257-d9f8e57a643d?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1952&q=80\"\r\n    ]\r\n  });\r\n  const [currentComment, setCurrentComment] = useState<UserData | any>([]);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [items, setItems] = useState<UserData | any[]>([]);\r\n  const [like, setLike] = useState(false);\r\n  const [commentText, setCommentText] = useState<UserData | any>({\r\n    newComment: null,\r\n    updatedComment: { id: null, content: \"기존댓글~~~\" }\r\n  });\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n\r\n  // const userVerified = info.user.id === localStorage.getItem.user.id;\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      axios\r\n        .all([\r\n          axios.get(`${API}/store/detail/${props.match.params.id}`, {\r\n            headers: {\r\n              Authorization: localStorage.getItem(\"token\")\r\n            }\r\n          }),\r\n          axios.get(`${API}/store/detail/${props.match.params.id}/comment`, {\r\n            headers: {\r\n              Authorization: localStorage.getItem(\"token\")\r\n            }\r\n          })\r\n        ])\r\n        .then(\r\n          axios.spread((res1, res2) => {\r\n            console.log(\"res1\", res1);\r\n            setInfo(res1.data);\r\n            setAddress(res1.data.store_info[0].address);\r\n            setCurrentComment(res2.data.comment_list);\r\n            console.log(\"res2.data.comment_list\", res2.data.comment_list);\r\n          })\r\n        );\r\n    } else {\r\n      axios\r\n        .all([\r\n          axios.get(`${API}/store/detail/${props.match.params.id}`),\r\n          axios.get(`${API}/store/detail/${props.match.params.id}/comment`)\r\n        ])\r\n        .then(\r\n          axios.spread((res1, res2) => {\r\n            console.log(\"res1\", res1);\r\n            setInfo(res1.data);\r\n            setAddress(res1.data.store_info[0].address);\r\n            setCurrentComment(res2.data.comment_list);\r\n            console.log(\"res2.data.comment_list\", res2.data.comment_list);\r\n          })\r\n        );\r\n    }\r\n  }, [props.match.params.id]);\r\n\r\n  useEffect(() => {\r\n    let container = document.getElementById(\"map\");\r\n    let options = {\r\n      center: new window.kakao.maps.LatLng(\r\n        37.506505288645876,\r\n        127.05406759771054\r\n      ),\r\n      level: 3\r\n    };\r\n\r\n    let map = new window.kakao.maps.Map(container, options);\r\n\r\n    let callback = (result: any, status: any) => {\r\n      if (status === window.kakao.maps.services.Status.OK) {\r\n        console.log(result);\r\n        let coords = new window.kakao.maps.LatLng(result[0].y, result[0].x);\r\n        let marker = new window.kakao.maps.Marker({\r\n          map: map,\r\n          position: coords\r\n        });\r\n        let infowindow = (info: any) =>\r\n          new window.kakao.maps.InfoWindow({\r\n            content: `<div style=\"width:10rem;height:2.5rem;display:flex;justify-content:center;align-items:center;padding:6px 0;\"><div style=\"font-weight: bold;\">\"${info.store_info[0].name}\"</div></div>`\r\n          });\r\n        infowindow(info).open(map, marker);\r\n        map.setCenter(coords);\r\n      }\r\n      if (status === window.kakao.maps.services.Status.ZERO_RESULT) {\r\n        console.log(\"카카오맵의 검색 결과가 없습니다.\");\r\n      }\r\n      if (status === window.kakao.maps.services.Status.ERROR) {\r\n        console.log(\"카카오맵 서버 응답에 문제가 있습니다.\");\r\n      }\r\n    };\r\n\r\n    let geocoder = new window.kakao.maps.services.Geocoder();\r\n    geocoder.addressSearch(info.store_info[0]?.address, callback);\r\n  }, [info]);\r\n\r\n  const changeLikedState = () => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setInfo({\r\n        ...info,\r\n        like_count: Number(\r\n          info.like === false ? info.like_count + 1 : info.like_count - 1\r\n        ),\r\n        like: !info.like\r\n      });\r\n      axios\r\n        .post(`${API}/store/like/${props.match.params.id}`, \"data\", {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => console.log(\"좋아요 통신이 완료되었습니다.\", res))\r\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\r\n      // setTimeout(\r\n      //   // 유저가 계속 하트 클릭할 경우 대비해서, 1초 뒤 통신하도록 변경 예정\r\n      //   axios.patch(`API${}`)\r\n      //     .then(res => console.log(\"좋아요 통신이 완료되었습니다.\", res));\r\n      //     .catch(err => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err))\r\n      // , 1000)\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n\r\n  const submitChangedComment = (crud: string, commentId: number) => {\r\n    if (crud === \"INSERT\") {\r\n      // location.reload와 해당 방법 사이 고민중..\r\n      // setCurrentComment([\r\n      //   {\r\n      //     comment: commentText.newComment,\r\n      //     created_at: \"방금 전\",\r\n      //     writer_name: \"작성자\"\r\n      //   },\r\n      //   ...currentComment\r\n      // ]);\r\n      axios\r\n        .post(\r\n          `${API}/store/detail/${props.match.params.id}/comment`,\r\n          JSON.stringify({\r\n            comment: commentText.newComment\r\n          }),\r\n          { headers: { Authorization: localStorage.getItem(\"token\") } }\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          window.location.reload();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (crud === \"UPDATE\") {\r\n      // setCurrentComment(\r\n      //   currentComment.map((comment: any) =>\r\n      //     comment.id === commentId\r\n      //       ? { ...comment, comment: commentText.updatedComment.content }\r\n      //       : comment\r\n      //   )\r\n      // );\r\n      setEditModal(false);\r\n\r\n      axios\r\n        .patch(\r\n          `${API}/store/detail/${props.match.params.id}/comment/${commentText.updatedComment.id}`,\r\n          JSON.stringify({\r\n            comment: commentText.updatedComment.content\r\n          }),\r\n          { headers: { Authorization: localStorage.getItem(\"token\") } }\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          window.location.reload();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (crud === \"DELETE\") {\r\n      // setCurrentComment(\r\n      //   currentComment.filter(\r\n      //     (comment: any) => comment.id !== Number(commentText.updatedComment.id)\r\n      //   )\r\n      // );\r\n      setDeleteModal(false);\r\n      axios\r\n        .delete(\r\n          `${API}/store/detail/${props.match.params.id}/comment/${commentText.updatedComment.id}`,\r\n          {\r\n            headers: {\r\n              Authorization: localStorage.getItem(\"token\")\r\n            }\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          window.location.reload();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const updateComment = (e: any) => {\r\n    const { value } = e.target;\r\n\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        ...commentText.updatedComment,\r\n        content: value\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDragStart = (e: any) => e.preventDefault();\r\n\r\n  return (\r\n    <Container>\r\n      <DescSection>\r\n        <Images>\r\n          <AliceCarousel\r\n            mouseTracking\r\n            infinite\r\n            autoPlay\r\n            animationDuration={1400}\r\n            disableButtonsControls={true}\r\n          >\r\n            {info.store_images?.map((image: string) => (\r\n              <img src={image} onDragStart={handleDragStart} className=\"food\" />\r\n            ))}\r\n          </AliceCarousel>\r\n        </Images>\r\n        <StoreDesc>\r\n          <StoreTitle>\r\n            <DecoTitle>“</DecoTitle>\r\n            <Title>{info.store_info[0]?.name}</Title>\r\n            <DecoTitle>”</DecoTitle>\r\n          </StoreTitle>\r\n          <Desc>\r\n            <div className=\"deli\">\r\n              {info.store_info[0]?.delivery\r\n                ? \"⭕ 배달 가능 맛집 ⭕\"\r\n                : \"❌ 배달 불가 맛집 ❌\"}\r\n            </div>\r\n            <div className=\"desc\">{info.store_info[0]?.description}</div>\r\n          </Desc>\r\n          <Liked>\r\n            <span onClick={changeLikedState}>\r\n              {info?.like ? (\r\n                <IoIosHeart className=\"like full\" />\r\n              ) : (\r\n                <IoIosHeartEmpty className=\"like\" />\r\n              )}\r\n            </span>\r\n            <span className=\"amount\">{info?.like_count}</span>\r\n            명의 위코더가 좋아해요 :-)\r\n          </Liked>\r\n        </StoreDesc>\r\n      </DescSection>\r\n      <MapSection>\r\n        <Map id=\"map\" style={{ width: \"65rem\", height: \"28rem\" }}></Map>\r\n      </MapSection>\r\n      <hr style={{ margin: \"2rem 0\" }}></hr>\r\n      <CommentSection>\r\n        <InputWrapper>\r\n          <CommentDesc>댓글 입력</CommentDesc>\r\n          <form method=\"post\">\r\n            <CommentInput>\r\n              <Input\r\n                onChange={(e) =>\r\n                  setCommentText({ ...commentText, newComment: e.target.value })\r\n                }\r\n                placeholder=\"여러분의 이야기를 남겨주세요 !\"\r\n              />\r\n              <SubmitBtn onClick={() => submitChangedComment(\"INSERT\", 0)}>\r\n                확인\r\n              </SubmitBtn>\r\n            </CommentInput>\r\n          </form>\r\n        </InputWrapper>\r\n        <CommentsWrapper>\r\n          {currentComment &&\r\n            currentComment.map((comment: any, idx: any) => (\r\n              <Comment key={idx}>\r\n                <User>{comment.writer_name}</User>\r\n                <div className=\"right\">\r\n                  <Content>{comment.comment}</Content>\r\n                  <UploadTime>( {comment.created_at} )</UploadTime>\r\n                  {/* 작성자에게만 수정, 삭제가 노출되도록 변경 예정*/}\r\n                  {/* {userVerified && ( */}\r\n                  <ModifyBtn\r\n                    onClick={() => {\r\n                      setEditModal(true);\r\n                      setCommentText({\r\n                        ...commentText,\r\n                        updatedComment: {\r\n                          id: comment.id,\r\n                          content: comment.comment\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    수정\r\n                  </ModifyBtn>\r\n                  <ModifyBtn\r\n                    onClick={() => {\r\n                      setDeleteModal(true);\r\n                      setCommentText({\r\n                        ...commentText,\r\n                        updatedComment: {\r\n                          ...commentText.updatedComment,\r\n                          id: comment.id\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    삭제\r\n                  </ModifyBtn>\r\n                  {/* )} */}\r\n                </div>\r\n              </Comment>\r\n            ))}\r\n        </CommentsWrapper>\r\n      </CommentSection>\r\n      {editModal && (\r\n        <EditCommentModal\r\n          editModal={editModal}\r\n          setEditModal={setEditModal}\r\n          updatedComment={commentText.updatedComment}\r\n          submitChangedComment={submitChangedComment}\r\n          updateComment={updateComment}\r\n        />\r\n      )}\r\n      {deleteModal && (\r\n        <DeleteCommentModal\r\n          deleteModal={deleteModal}\r\n          setDeleteModal={setDeleteModal}\r\n          submitChangedComment={submitChangedComment}\r\n          commentId={commentText.updatedComment.id}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 10rem auto;\r\n  width: 65rem;\r\n`;\r\n\r\nconst DescSection = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Images = styled.div`\r\n  width: 28rem;\r\n\r\n  .food {\r\n    width: 28rem;\r\n    height: 28rem;\r\n    border: 2px solid ${({ theme }) => theme.borderGray};\r\n  }\r\n`;\r\n\r\nconst StoreDesc = styled.div`\r\n  width: 32rem;\r\n`;\r\n\r\nconst StoreTitle = styled.div`\r\n  font-size: 2.3rem;\r\n  margin: 1rem 0;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Title = styled.header`\r\n  display: inline;\r\n`;\r\n\r\nconst DecoTitle = styled.span`\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst Desc = styled.article`\r\n  font-size: 1.1rem;\r\n  padding: 1.5rem 0.7rem;\r\n  width: 100%;\r\n  height: 23.8rem;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  border-top: 1px solid ${({ theme }) => theme.borderGray};\r\n  border-bottom: 1px solid ${({ theme }) => theme.borderGray};\r\n  letter-spacing: 0.1rem;\r\n  word-spacing: 0.1rem;\r\n  line-height: 1.7rem;\r\n\r\n  .deli {\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .desc {\r\n    font-family: sans-serif;\r\n  }\r\n`;\r\n\r\nconst Liked = styled.p`\r\n  margin-top: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .like {\r\n    font-size: 2.2rem;\r\n  }\r\n\r\n  .full {\r\n    color: ${({ theme }) => theme.likedRed};\r\n  }\r\n\r\n  .amount {\r\n    font-size: 2rem;\r\n    font-weight: 900;\r\n    margin: 0 0.6rem 0 1rem;\r\n  }\r\n`;\r\n\r\nconst MapSection = styled.div`\r\n  margin-top: 4rem;\r\n`;\r\n\r\nconst Map = styled.div`\r\n  border: 2px solid ${({ theme }) => theme.borderGray};\r\n`;\r\n\r\nconst CommentSection = styled.div`\r\n  width: 65rem;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: 1.3rem;\r\n`;\r\n\r\nconst CommentDesc = styled.span`\r\n  width: 5.5rem;\r\n  margin-right: 1rem;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst CommentInput = styled.form`\r\n  position: relative;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.5rem;\r\n  outline: none;\r\n  width: 59.5rem;\r\n`;\r\n\r\nconst SubmitBtn = styled.span`\r\n  position: absolute;\r\n  right: 0.5rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst CommentsWrapper = styled.ul``;\r\n\r\nconst Comment = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 0.7rem;\r\n\r\n  .right {\r\n    width: 59.5rem;\r\n    line-height: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst User = styled.span`\r\n  width: 5.5rem;\r\n  font-weight: 900;\r\n  border-right: 1px solid ${({ theme }) => theme.borderGray};\r\n  padding-right: 1rem;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst Content = styled.p`\r\n  display: inline;\r\n`;\r\n\r\nconst UploadTime = styled.span`\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst ModifyBtn = styled.button`\r\n  margin: 0 0.2rem;\r\n  outline: none;\r\n  font-size: 0.75em;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  background-color: white;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostWriting.tsx",["215","216","217"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport wemeok from \"../images/wemeoktalk_2.png\";\r\nimport { COLORS } from \"../styles/themeColor\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport ReactQuill from \"react-quill\"; // Typescript\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nexport default function PostWriting() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  let data = {\r\n    title: title,\r\n    content: content\r\n  };\r\n\r\n  const uploadData = () => {\r\n    axios\r\n      .post(`${API}/board`, JSON.stringify(data), {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\"),\r\n          \"Content-Type\": `application/json`\r\n        }\r\n      })\r\n      .then((res) => {\r\n        history.push(\"/post-list\");\r\n      });\r\n  };\r\n\r\n  const createPost = (e: any): any => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Img src={wemeok} alt=\"\" />\r\n        <InnerContainer>\r\n          <ImgText>개발자 공유문화 잊지말자, 그러니까 맛집도 공유하자</ImgText>\r\n          <TitleContainer>\r\n            <TitleText>제목</TitleText>\r\n            <TitleInput\r\n              type=\"text/html\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"제목\"\r\n            ></TitleInput>\r\n          </TitleContainer>\r\n          <ContentContainer>\r\n            <TitleText>내용</TitleText>\r\n            <Content\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              placeholder=\"내용을 입력하세요.\"\r\n            ></Content>\r\n            {/*             <QuillContainer>\r\n              <ReactQuill value={content} onChange={createPost} />\r\n            </QuillContainer> */}\r\n          </ContentContainer>\r\n          <TitleContainer>\r\n            <TitleText>첨부파일</TitleText>\r\n            <TitleInput></TitleInput>\r\n          </TitleContainer>\r\n          <Button onClick={uploadData}>\r\n            <Link to=\"/post-writing\">작성</Link>\r\n          </Button>\r\n        </InnerContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst InnerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n  width: 45.2rem;\r\n  border: 4px solid ${COLORS.mainYellow};\r\n`;\r\n\r\nconst Img = styled.img`\r\n  position: relative;\r\n  top: 1rem;\r\n  margin: 5rem 3.3rem 0 0;\r\n`;\r\n\r\nconst ImgText = styled.p`\r\n  position: absolute;\r\n  top: 13rem;\r\n  z-index: 10;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 1.5rem;\r\n  width: 35rem;\r\n`;\r\n\r\nconst TitleText = styled.p`\r\n  width: 4rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  margin-left: 1rem;\r\n  width: 35rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst Content = styled.input`\r\n  width: 36rem;\r\n  height: 20rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  background: ${COLORS.mainYellow};\r\n`;\r\n\r\nconst QuillContainer = styled.div`\r\n  .quill {\r\n    height: 10rem;\r\n  }\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\KobbubakDetailContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\ThemeList.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\MentorDetailContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreList.tsx",["218","219"],"import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../config\";\r\nimport StoreCard2 from \"./childComponents/StoreCard2\";\r\nimport axios from \"axios\";\r\nimport \"./StoreList.scss\";\r\n\r\ninterface UserData {\r\n  storeList: any;\r\n}\r\n\r\nexport default function StoreList() {\r\n  const [storeList, setStoreList] = useState<UserData | any>([]);\r\n  const feather = \"feather\";\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      axios\r\n        .get(`${API}/store/list`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res\", res);\r\n          setStoreList(res.data.store_list);\r\n        });\r\n    } else {\r\n      axios.get(`${API}/store/list`).then((res) => {\r\n        setStoreList(res.data.store_list);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const changeLikedState = (id: any, type: string) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setStoreList(\r\n        storeList?.map((data: any) => {\r\n          if (data.id === id) {\r\n            if (data.like_state) {\r\n              return {\r\n                ...data,\r\n                like_state: !data.like_state,\r\n                like_count: data.like_count - 1\r\n              };\r\n            } else {\r\n              return {\r\n                ...data,\r\n                like_state: !data.like_state,\r\n                like_count: data.like_count + 1\r\n              };\r\n            }\r\n          } else {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n      axios\r\n        .post(`${API}/store/like/${id}`, \"data\", {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => console.log(\"좋아요 통신이 완료되었습니다.\", res))\r\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"storeList\">\r\n        <div className=\"storeListLogo\">\r\n          <img src=\"./images/storelist.png\"></img>\r\n        </div>\r\n        {/* <div className=\"logoBox\">\r\n          <div className=\"logoBox1\">\r\n            <p>위코더 맛집</p>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"storeFood\">\r\n          {storeList?.map((feather: any) => {\r\n            return (\r\n              <StoreCard2\r\n                id={feather.id}\r\n                name={feather.name}\r\n                image={feather.image}\r\n                type={\"soju\"}\r\n                likeCount={feather.like_count}\r\n                likeState={feather.like_state}\r\n                changeLikedState={changeLikedState}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\TodayRandom.tsx",["220","221","222"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { mixin } from \"../styles\";\r\nimport StoreCard2 from \"./childComponents/StoreCard2\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\n\r\ninterface UserData {\r\n  store: any;\r\n}\r\n\r\nexport default function TodayRandom() {\r\n  const [store, setStore] = useState<UserData | any>({});\r\n  const getRandomStore = () => {\r\n    console.log(\"버튼 클릭됌\");\r\n    axios\r\n      .get(`${API}/store/list?sort=random`)\r\n      .then((res: any) => {\r\n        console.log(\"res\", res.data.store_list.random[0]);\r\n        setStore(res.data.store_list.random[0]);\r\n      })\r\n      .catch((err: any) => console.log(\"Catched errors!\", err));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <DescSection>\r\n        <Title>이런 날도 있짜나</Title>\r\n        <Desc>\r\n          <p>365일 1년내내 먹고 싶은 음식이 줄줄이 소세지마냥 가득 했던 나,</p>\r\n          <p>N년동안 살아왔지만 단 하루도 메뉴 고민을 한 적 없었던 나,</p>\r\n          <p>·</p>\r\n          <p>·</p>\r\n          <p>·</p>\r\n          <p>근데 오늘은 왜 이렇게 고민이 되는거야?</p>\r\n          <p>내가 뭘 먹고 싶은지조차 모르겠을 때</p>\r\n        </Desc>\r\n      </DescSection>\r\n      <RandomSection>\r\n        <RandomComponent>\r\n          <Row>\r\n            <VerticalText>무얼먹을지</VerticalText>\r\n            <span onClick={getRandomStore}>\r\n              <img\r\n                width=\"350rem\"\r\n                src=\"https://www.clickimagination.com/wp-content/uploads/2018/06/click-logo-01.png\"\r\n              />\r\n            </span>\r\n            <VerticalText>고민이라면</VerticalText>\r\n          </Row>\r\n        </RandomComponent>\r\n        <RandomComponent>\r\n          <Row>\r\n            <VerticalText>여기로</VerticalText>\r\n            {/* <StoreCard2\r\n              id={store.id}\r\n              image={store.image}\r\n              name={store.name}\r\n              likeCount={store.like_count}\r\n              likeState={store.like_state}\r\n            />{\" \"} */}\r\n            <VerticalText>가즈아</VerticalText>\r\n          </Row>\r\n          <div className=\"buttonSection\">\r\n            <ReplayBtn>다시하기</ReplayBtn>\r\n          </div>\r\n        </RandomComponent>\r\n      </RandomSection>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 11rem auto 5rem;\r\n  width: 65rem;\r\n`;\r\n\r\nconst DescSection = styled.div`\r\n  line-height: 2rem;\r\n  letter-spacing: 0.5rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.borderGray};\r\n`;\r\n\r\nconst Title = styled.header`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Desc = styled.p`\r\n  margin: 2rem;\r\n  font-size: 1.3rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst RandomSection = styled.div``;\r\n\r\nconst RandomComponent = styled.div`\r\n  margin: 2rem auto;\r\n  padding: 3rem;\r\n\r\n  .buttonSection {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  ${mixin.flexSet(\"space-evenly\", \"center\", \"row\")}\r\n`;\r\n\r\nconst VerticalText = styled.p`\r\n  font-size: 3rem;\r\n  writing-mode: tb-rl;\r\n  letter-spacing: 1.2rem;\r\n`;\r\n\r\nconst ReplayBtn = styled.span`\r\n  border: 1px solid ${({ theme }) => theme.borderGray};\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.mainYellow};\r\n  font-size: 1.5rem;\r\n  width: 7rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\config.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\Posts.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard.tsx",["223","224"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  id: number;\r\n  top: string;\r\n  image: string;\r\n  name: string;\r\n  likeCount: number;\r\n  likeState: boolean;\r\n  changeLikedState: (id: any) => void;\r\n}\r\n\r\nexport default function StoreCard({\r\n  id,\r\n  top,\r\n  image,\r\n  name,\r\n  likeCount,\r\n  likeState,\r\n  changeLikedState\r\n}: Props) {\r\n  const [fullLike, setFullLike] = useState<boolean>(true);\r\n  const history = useHistory();\r\n\r\n  const heartLike = () => {\r\n    setFullLike(!fullLike);\r\n  };\r\n  console.log(\"state\", likeState);\r\n  const iconLike = fullLike ? \"./images/heart.png\" : \"./images/fullheart.png\";\r\n  return (\r\n    <>\r\n      <div className=\"storeCard\">\r\n        <div className=\"ranking\">\r\n          <img\r\n            alt=\"CrownIcon\"\r\n            className=\"iconCrown\"\r\n            src=\"./images/crown.png\"\r\n          ></img>\r\n          <p>{top}</p>\r\n        </div>\r\n        <div className=\"rankingComponents\">\r\n          <div\r\n            className=\"storeHeader\"\r\n            onClick={() => history.push(`/store-detail/${id}`)}\r\n          >\r\n            <p>Weeeating</p>\r\n            <hr></hr>\r\n            <img alt=\"storeImg\" src={image}></img>\r\n            <hr></hr>\r\n          </div>\r\n          <div className=\"storeFooter\">\r\n            <p className=\"foodName\">{name}</p>\r\n            <span onClick={() => changeLikedState(id)}>\r\n              {likeState ? (\r\n                <img alt=\"Like\" src=\"./images/fullheart.png\"></img>\r\n              ) : (\r\n                <img alt=\"Like\" src=\"./images/heart.png\"></img>\r\n              )}\r\n            </span>\r\n            {/* <img\r\n              alt=\"Like\"\r\n              src={iconLike}\r\n              onClick={() => changeLikedState(id)}\r\n            ></img> */}\r\n            <p className=\"heartTotal\">{likeCount}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard2.tsx",["225","226"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  id: number;\r\n  type: string;\r\n  image: string;\r\n  name: string;\r\n  likeCount: number;\r\n  likeState: boolean;\r\n  changeLikedState: (id: any, type: string) => void;\r\n}\r\n\r\nexport default function StoreCard({\r\n  id,\r\n  image,\r\n  name,\r\n  type,\r\n  likeCount,\r\n  likeState,\r\n  changeLikedState\r\n}: Props) {\r\n  const [fullLike, setFullLike] = useState<boolean>(true);\r\n  const history = useHistory();\r\n\r\n  const heartLike = () => {\r\n    setFullLike(!fullLike);\r\n  };\r\n\r\n  const iconLike = fullLike ? \"./images/heart.png\" : \"./images/fullheart.png\";\r\n  return (\r\n    <>\r\n      <div className=\"storeCard\">\r\n        <div className=\"rankingComponents\">\r\n          <div\r\n            className=\"storeHeader\"\r\n            onClick={() => history.push(`/store-detail/${id}`)}\r\n          >\r\n            <p>Weeeating</p>\r\n            <hr></hr>\r\n            <img alt=\"storeImg\" src={image}></img>\r\n            <hr></hr>\r\n          </div>\r\n          <div className=\"storeFooter\">\r\n            <p className=\"foodName\">{name}</p>\r\n            <span onClick={(id, type) => changeLikedState(id, type)}>\r\n              {likeState ? (\r\n                <img alt=\"Like\" src=\"./images/fullheart.png\"></img>\r\n              ) : (\r\n                <img alt=\"Like\" src=\"./images/heart.png\"></img>\r\n              )}\r\n            </span>\r\n            {/* <img\r\n              alt=\"Like\"\r\n              src={iconLike}\r\n              onClick={() => changeLikedState(id)}\r\n            ></img> */}\r\n            <p className=\"heartTotal\">{likeCount}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\MetorTheme.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\KobbubakTheme.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\PostReply.tsx",["227","228","229","230","231"],"import React, { useState } from \"react\";\r\nimport { COLORS } from \"../../styles/themeColor\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../../config\";\r\n\r\ninterface UserData {\r\n  info: any;\r\n  items: any[];\r\n}\r\n\r\nexport default function PostReply({\r\n  comments,\r\n  match,\r\n  setEditModal,\r\n  clickEdit,\r\n  deleteComment\r\n}: any) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ReplyContainer>\r\n      {comments?.map(\r\n        (comment: {\r\n          board_comments: any;\r\n          comment_writer: {} | null | undefined;\r\n          comment_content: any;\r\n          comment_created_at: any;\r\n          comment_id: any;\r\n        }) => (\r\n          <div>\r\n            <li>{comment.comment_writer}</li>\r\n            <Bar>|</Bar>\r\n            <li>{comment.comment_content}</li>\r\n            <li>({comment.comment_created_at})</li>\r\n            <Button onClick={() => clickEdit(comment)}>수정</Button>\r\n            {console.log(\"댓글삭제\", comment)}\r\n            <Button onClick={() => deleteComment(comment.comment_id)}>\r\n              삭제\r\n            </Button>\r\n          </div>\r\n        )\r\n      )}\r\n    </ReplyContainer>\r\n  );\r\n}\r\n\r\nconst ReplyContainer = styled.div`\r\n  width: 720px;\r\n\r\n  div {\r\n    display: flex;\r\n    border-bottom: 1px solid black;\r\n\r\n    li {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 0 1rem;\r\n      height: 2rem;\r\n      list-style: none;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  margin: 0;\r\n  line-height: 2rem;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  background: ${COLORS.mainYellow};\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\registerModal.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\googleFirstLogin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\DeleteCommentModal.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\EditCommentModal.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Footer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Nav.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\LoginForm.tsx",["232"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GoogleLoginComponent } from \"./index\";\r\n\r\ninterface IProps {\r\n  handleChange: (e: any) => void;\r\n  submitLogin: () => void;\r\n}\r\n\r\ninterface StateForStyle {\r\n  short?: boolean;\r\n  needSpace?: boolean;\r\n  buttons?: boolean;\r\n}\r\n\r\nexport default function LoginForm({ handleChange, submitLogin }: IProps) {\r\n  return (\r\n    <Container>\r\n      <Title>로그인</Title>\r\n      {/* <InfoSection method=\"POST\"> */}\r\n      <BlockWrapper>\r\n        <Subject>이메일</Subject>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          required\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>비밀번호</Subject>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper buttons>\r\n        <GoogleLoginComponent />\r\n        <LoginBtn\r\n          onClick={submitLogin}\r\n          type=\"submit\"\r\n          value=\"로그인\"\r\n          className=\"button\"\r\n        ></LoginBtn>\r\n      </BlockWrapper>\r\n      {/* </InfoSection> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 2em 1.5em;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${({ theme }) => theme.mainYellow};\r\n  height: 1em;\r\n  text-align: center;\r\n  font-size: 6em;\r\n  font-weight: 900;\r\n  margin-top: 0.8em;\r\n  margin-bottom: 0.7em;\r\n  letter-spacing: 0.2em;\r\n`;\r\n\r\nconst InfoSection = styled.form`\r\n  font-family: \"Noto Sans KR\";\r\n  margin: 0 2.5em;\r\n  height: 20em;\r\n`;\r\n\r\nconst BlockWrapper = styled.div<StateForStyle>`\r\n  margin: ${({ buttons }) => (buttons ? \"5.7em 0 0\" : \"3em 0\")};\r\n  height: 2.5em;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  .button {\r\n    background-color: ${({ theme }) => theme.lightYellow};\r\n  }\r\n`;\r\n\r\nconst Subject = styled.div<StateForStyle>`\r\n  text-align: center;\r\n  font-size: 1.15em;\r\n  font-weight: 500;\r\n  width: 4.5em;\r\n  margin-right: 1.5em;\r\n  margin-left: ${({ needSpace }) => (needSpace ? \"1.5em\" : \"0\")};\r\n`;\r\n\r\nconst Input = styled.input<StateForStyle>`\r\n  width: ${({ short }) => (short ? \"10.5em\" : \"30em\")};\r\n  height: 4em;\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n`;\r\n\r\nconst LoginBtn = styled.input`\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n  margin-top: 2em;\r\n  width: 28.6em;\r\n  font-size: 1.15rem;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3.5em;\r\n  text-align: center;\r\n  background-color: white;\r\n  cursor: pointer;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Login.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Signup.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\SignupForm.tsx",["233","234"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { API } from \"../config\";\r\n\r\ninterface IProps {\r\n  handleChange: (e: any) => void;\r\n  submitSingup: () => void;\r\n}\r\n\r\ninterface StateForStyle {\r\n  short?: boolean;\r\n  needSpace?: boolean;\r\n}\r\n\r\nexport default function SignupForm({ handleChange, submitSingup }: IProps) {\r\n  const firstGoogle = useSelector(\r\n    ({ setFirstReducer }) => setFirstReducer.first\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Title>회원가입</Title>\r\n      {/* <InfoSection action={`${API}/user/signup`} method=\"POST\"> */}\r\n      {/* <InfoSection> */}\r\n      <BlockWrapper>\r\n        <Subject short={true}>기수</Subject>\r\n        <Input\r\n          type=\"number\"\r\n          name=\"number\"\r\n          placeholder=\"숫자만!\"\r\n          onChange={handleChange}\r\n          required\r\n          short={true}\r\n        ></Input>\r\n        <Subject short={true} needSpace={true}>\r\n          이름\r\n        </Subject>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          placeholder=\"전체이름!\"\r\n          onChange={handleChange}\r\n          required\r\n          short={true}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>이메일</Subject>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          required\r\n          placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n          disabled={firstGoogle ? true : false}\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>비밀번호</Subject>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n          placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n          disabled={firstGoogle ? true : false}\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>비밀번호 확인</Subject>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"repassword\"\r\n          required\r\n          placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n          disabled={firstGoogle ? true : false}\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <Button\r\n        type=\"submit\"\r\n        value=\"회원가입\"\r\n        className=\"button\"\r\n        onClick={submitSingup}\r\n      ></Button>\r\n      {/* </InfoSection> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 2em 1.5em;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${({ theme }) => theme.mainYellow};\r\n  height: 1em;\r\n  text-align: center;\r\n  font-size: 6em;\r\n  font-weight: 900;\r\n  margin-bottom: 0.5em;\r\n  letter-spacing: 0.2em;\r\n`;\r\n\r\nconst InfoSection = styled.form`\r\n  font-family: \"Noto Sans KR\";\r\n  margin: 0 2.5em;\r\n  height: 20em;\r\n`;\r\n\r\nconst BlockWrapper = styled.div`\r\n  margin: 2em 0;\r\n  height: 2.5em;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  .button {\r\n    background-color: ${({ theme }) => theme.lightYellow};\r\n  }\r\n`;\r\n\r\nconst Subject = styled.div<StateForStyle>`\r\n  text-align: center;\r\n  font-size: 1.15em;\r\n  font-weight: 500;\r\n  width: 4.5em;\r\n  margin-right: 1.5em;\r\n  margin-left: ${({ needSpace }) => (needSpace ? \"1.5em\" : \"0\")};\r\n`;\r\n\r\nconst Input = styled.input<StateForStyle>`\r\n  width: ${({ short }) => (short ? \"8.5em\" : \"30em\")};\r\n  height: 4em;\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n`;\r\n\r\nconst Button = styled.input`\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n  margin-top: 2em;\r\n  width: 25em;\r\n  font-size: 1.15rem;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3.5em;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.lightYellow};\r\n  cursor: pointer;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\PeoplePick.tsx",["235","236"],"import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  IoIosArrowBack,\r\n  IoIosArrowForward,\r\n  IoIosAddCircle\r\n} from \"react-icons/io\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { mixin } from \"../styles\";\r\n\r\ninterface IProps {\r\n  info: never[];\r\n  TITLE: string[];\r\n}\r\n\r\nfunction SampleNextArrow(props: any) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <img\r\n      alt=\"rightArrow\"\r\n      src=\"./images/arrow-right.png\"\r\n      className={className}\r\n      style={{\r\n        ...style,\r\n        display: \"block\",\r\n        width: \"2.5rem\",\r\n        height: \"2.5rem\",\r\n        top: \"-43px\",\r\n        left: \"1001px\"\r\n      }}\r\n      onClick={onClick}\r\n    ></img>\r\n  );\r\n}\r\n\r\nfunction SamplePrevArrow(props: any) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <img\r\n      alt=\"rightArrow\"\r\n      src=\"./images/arrow-left.png\"\r\n      className={className}\r\n      style={{\r\n        ...style,\r\n        display: \"block\",\r\n        width: \"2.5rem\",\r\n        height: \"2.5rem\",\r\n        top: \"-43px\",\r\n        left: \"951px\"\r\n      }}\r\n      onClick={onClick}\r\n    ></img>\r\n  );\r\n}\r\n\r\nexport default function PeoplePick({ info, TITLE }: IProps) {\r\n  const history = useHistory();\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    speed: 1000,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    arrows: true,\r\n    // centerPadding: \"47px\",\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    className: \"slides\"\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Header>\r\n          <Title>\r\n            <p>{TITLE[0]}</p>\r\n            <p>{TITLE[1]}</p>\r\n          </Title>\r\n          <Line></Line>\r\n          <Arrow>\r\n            <div className=\"left arrow\">\r\n              <IoIosArrowBack className=\"arrowIcon\" />\r\n            </div>\r\n            <div className=\"right arrow\">\r\n              <IoIosArrowForward className=\"arrowIcon\" />\r\n            </div>\r\n          </Arrow>\r\n        </Header>\r\n        <CardWrapper>\r\n          <Slider {...settings}>\r\n            {info.length &&\r\n              info.map(\r\n                ({ id, image, name, position, store_id, store, desc }: any) => (\r\n                  <CardEach id={id}>\r\n                    <Profile>\r\n                      <img src={image} />\r\n                      <div className=\"name\">{name}</div>\r\n                      <div className=\"position\">{position}</div>\r\n                    </Profile>\r\n                    <Desc>\r\n                      <div className=\"storeHeader\">\r\n                        <span className=\"decoTitle\">\" </span>\r\n                        <span className=\"storeTitle\">{store}</span>\r\n                        <span className=\"decoTitle\"> \"</span>\r\n                      </div>\r\n                      <div className=\"storeDesc\">{desc}</div>\r\n                    </Desc>\r\n                    <MoreBtn>\r\n                      <span\r\n                        className=\"seeStoreInfo\"\r\n                        onClick={() =>\r\n                          history.push(`/store-detail/${store_id}`)\r\n                        }\r\n                      >\r\n                        맛집 구경하기\r\n                      </span>\r\n                      <IoIosAddCircle className=\"btnIcon\" />\r\n                    </MoreBtn>\r\n                  </CardEach>\r\n                )\r\n              )}\r\n          </Slider>\r\n        </CardWrapper>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 55rem;\r\n  background-color: ${({ theme }) => theme.mentorBack};\r\n  line-height: 1.3;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  margin: 5rem auto;\r\n  padding-top: 3rem;\r\n  width: 65rem;\r\n`;\r\n\r\nconst Header = styled.section`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  width: 55rem;\r\n  font-size: 2.5rem;\r\n  letter-spacing: 0.4rem;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  margin-right: 1rem;\r\n  width: 100%;\r\n  height: 1.25rem;\r\n  border-top: 2px solid ${({ theme }) => theme.borderGray};\r\n`;\r\n\r\nconst Arrow = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n\r\n  .arrow {\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    background-color: #0000000d;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .left {\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  .right {\r\n  }\r\n\r\n  .arrowIcon {\r\n    width: 50%;\r\n    height: 50%;\r\n    color: ${({ theme }) => theme.buttonGray};\r\n  }\r\n`;\r\n\r\nconst CardWrapper = styled.div``;\r\n\r\nconst CardEach = styled.div`\r\n  position: relative;\r\n  float: left;\r\n  width: 33.33%;\r\n  height: 40rem;\r\n  padding-right: 1rem;\r\n  outline: none;\r\n`;\r\n\r\nconst Profile = styled.section`\r\n  padding: 1.25rem;\r\n\r\n  img {\r\n    border-radius: 50%;\r\n    width: 15rem;\r\n    height: 15rem;\r\n  }\r\n\r\n  .name {\r\n    font-size: 1.3rem;\r\n    font-weight: 900;\r\n    line-height: 1.14;\r\n    margin-top: 1.94rem;\r\n  }\r\n\r\n  .position {\r\n    margin-top: 0.6rem;\r\n    font-size: 1rem;\r\n    line-height: 1.07;\r\n  }\r\n`;\r\n\r\nconst Desc = styled.section`\r\n  line-break: anywhere;\r\n  padding: 1.25rem 1.13rem;\r\n  line-height: 1.88;\r\n  margin-bottom: 2.25rem;\r\n\r\n  .storeHeader {\r\n    .decoTitle {\r\n    }\r\n    .storeTitle {\r\n      font-weight: 900;\r\n      font-size: 1.15rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MoreBtn = styled.span`\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  margin: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 7rem;\r\n  height: 1.5rem;\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0rem;\r\n\r\n  .btnIcon {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\GoogleLoginComponent.tsx",["237","238","239","240","241","242","243"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { API } from \"../config\";\r\nimport {\r\n  setSignupActive,\r\n  setLoginActive,\r\n  setFirstLogin\r\n} from \"../store/actions\";\r\n\r\nexport default function GoogleLoginComponent() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  // 구글 로그인 백엔드 통신 확인 후, 필요여부 재확인 예정\r\n  const getGoogleOAuth2 = async () => {\r\n    const oAuth2 = await localStorage.getItem(\r\n      \"oauth2_ss::http://localhost:3000::1::DEFAULT::_ss_\"\r\n    );\r\n\r\n    console.log(\"oAuth2\", oAuth2);\r\n  };\r\n\r\n  const responseGoogle = (response: any) => {\r\n    console.log(\"구글로그인\");\r\n    console.log(\"response\", response);\r\n    const { accessToken } = response;\r\n\r\n    axios\r\n      .post(`${API}/user/login/social`, \"data\", {\r\n        headers: {\r\n          Authorization: accessToken\r\n        }\r\n      })\r\n      .then((res: any) => {\r\n        console.log(\"res\", res);\r\n        localStorage.setItem(\"token\", res.data.Authorization);\r\n        localStorage.setItem(\"user_id\", res.data.user_id);\r\n        localStorage.setItem(\"isAuthenticated\", \"true\");\r\n        alert(\"구글 로그인 되었습니다\");\r\n\r\n        if (res.data.check === \"FIRST VISIT\") {\r\n          dispatch(setFirstLogin(true));\r\n          dispatch(setSignupActive(true));\r\n          dispatch(setLoginActive(false));\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"ERRORS! ===>\", err);\r\n        alert(\"Error가 발생하였습니다\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <GoogleLogin\r\n        // render={(renderProps) => (\r\n        //   <span className=\"googleBtn\">구글로 로그인하기</span>\r\n        // )}\r\n        className=\"googleLogin\"\r\n        clientId=\"675033028389-t4ff8ilfoffg5f3pcrkrcg88tqvqisv7.apps.googleusercontent.com\"\r\n        buttonText=\"구글로 로그인하기\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={(err) => console.log(\"Google Error\", err)}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 2em;\r\n  margin-right: 0.7em;\r\n  width: 28.6em;\r\n  font-size: 1.15em;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3.5em;\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  .googleBtn {\r\n    /* border: 2px solid ${({ theme }) => theme.mainYellow}; */\r\n    /* background-color: ${({ theme }) => theme.lightYellow}; */\r\n    font-size: 1.05rem;\r\n    font-weight: 700;\r\n    color: black;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n",{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":110,"column":13,"nodeType":"254","endLine":110,"endColumn":42},{"ruleId":"252","severity":1,"message":"253","line":135,"column":13,"nodeType":"254","endLine":135,"endColumn":42},{"ruleId":"252","severity":1,"message":"253","line":160,"column":13,"nodeType":"254","endLine":160,"endColumn":42},{"ruleId":"248","severity":1,"message":"255","line":23,"column":10,"nodeType":"250","messageId":"251","endLine":23,"endColumn":21},{"ruleId":"248","severity":1,"message":"256","line":7,"column":10,"nodeType":"250","messageId":"251","endLine":7,"endColumn":15},{"ruleId":"248","severity":1,"message":"257","line":39,"column":10,"nodeType":"250","messageId":"251","endLine":39,"endColumn":17},{"ruleId":"248","severity":1,"message":"258","line":40,"column":10,"nodeType":"250","messageId":"251","endLine":40,"endColumn":15},{"ruleId":"248","severity":1,"message":"259","line":40,"column":17,"nodeType":"250","messageId":"251","endLine":40,"endColumn":25},{"ruleId":"248","severity":1,"message":"260","line":41,"column":10,"nodeType":"250","messageId":"251","endLine":41,"endColumn":14},{"ruleId":"248","severity":1,"message":"261","line":41,"column":16,"nodeType":"250","messageId":"251","endLine":41,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":259,"column":15,"nodeType":"254","endLine":259,"endColumn":81},{"ruleId":"248","severity":1,"message":"262","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":18},{"ruleId":"248","severity":1,"message":"263","line":34,"column":9,"nodeType":"250","messageId":"251","endLine":34,"endColumn":19},{"ruleId":"248","severity":1,"message":"264","line":139,"column":7,"nodeType":"250","messageId":"251","endLine":139,"endColumn":21},{"ruleId":"248","severity":1,"message":"265","line":13,"column":9,"nodeType":"250","messageId":"251","endLine":13,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":73,"column":11,"nodeType":"254","endLine":73,"endColumn":45},{"ruleId":"248","severity":1,"message":"266","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":18},{"ruleId":"248","severity":1,"message":"267","line":13,"column":10,"nodeType":"250","messageId":"251","endLine":13,"endColumn":15},{"ruleId":"252","severity":1,"message":"253","line":44,"column":15,"nodeType":"254","endLine":47,"endColumn":17},{"ruleId":"248","severity":1,"message":"268","line":26,"column":9,"nodeType":"250","messageId":"251","endLine":26,"endColumn":18},{"ruleId":"248","severity":1,"message":"269","line":30,"column":9,"nodeType":"250","messageId":"251","endLine":30,"endColumn":17},{"ruleId":"248","severity":1,"message":"268","line":26,"column":9,"nodeType":"250","messageId":"251","endLine":26,"endColumn":18},{"ruleId":"248","severity":1,"message":"269","line":30,"column":9,"nodeType":"250","messageId":"251","endLine":30,"endColumn":17},{"ruleId":"248","severity":1,"message":"270","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"271","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":13},{"ruleId":"248","severity":1,"message":"272","line":6,"column":10,"nodeType":"250","messageId":"251","endLine":6,"endColumn":13},{"ruleId":"248","severity":1,"message":"273","line":8,"column":11,"nodeType":"250","messageId":"251","endLine":8,"endColumn":19},{"ruleId":"248","severity":1,"message":"274","line":20,"column":9,"nodeType":"250","messageId":"251","endLine":20,"endColumn":16},{"ruleId":"248","severity":1,"message":"275","line":68,"column":7,"nodeType":"250","messageId":"251","endLine":68,"endColumn":18},{"ruleId":"248","severity":1,"message":"272","line":4,"column":10,"nodeType":"250","messageId":"251","endLine":4,"endColumn":13},{"ruleId":"248","severity":1,"message":"275","line":106,"column":7,"nodeType":"250","messageId":"251","endLine":106,"endColumn":18},{"ruleId":"248","severity":1,"message":"256","line":13,"column":10,"nodeType":"250","messageId":"251","endLine":13,"endColumn":15},{"ruleId":"252","severity":1,"message":"253","line":100,"column":23,"nodeType":"254","endLine":100,"endColumn":42},{"ruleId":"248","severity":1,"message":"276","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":23},{"ruleId":"248","severity":1,"message":"270","line":1,"column":25,"nodeType":"250","messageId":"251","endLine":1,"endColumn":33},{"ruleId":"248","severity":1,"message":"277","line":1,"column":35,"nodeType":"250","messageId":"251","endLine":1,"endColumn":44},{"ruleId":"248","severity":1,"message":"278","line":4,"column":17,"nodeType":"250","messageId":"251","endLine":4,"endColumn":27},{"ruleId":"248","severity":1,"message":"279","line":4,"column":29,"nodeType":"250","messageId":"251","endLine":4,"endColumn":47},{"ruleId":"248","severity":1,"message":"280","line":4,"column":49,"nodeType":"250","messageId":"251","endLine":4,"endColumn":62},{"ruleId":"248","severity":1,"message":"281","line":19,"column":9,"nodeType":"250","messageId":"251","endLine":19,"endColumn":24},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'currentPage' is assigned a value but never used.","'mixin' is defined but never used.","'address' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'like' is assigned a value but never used.","'setLike' is assigned a value but never used.","'ReactQuill' is defined but never used.","'createPost' is assigned a value but never used.","'QuillContainer' is assigned a value but never used.","'feather' is assigned a value but never used.","'StoreCard2' is defined but never used.","'store' is assigned a value but never used.","'heartLike' is assigned a value but never used.","'iconLike' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'API' is defined but never used.","'UserData' is defined but never used.","'history' is assigned a value but never used.","'InfoSection' is assigned a value but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'AxiosError' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'AxiosResponse' is defined but never used.","'getGoogleOAuth2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]