[{"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/index.tsx":"1","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/routes.tsx":"2","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/index.ts":"3","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/googleFirstLogin.ts":"4","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/registerModal.ts":"5","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/index.ts":"6","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/index.ts":"7","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/index.ts":"8","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/mixin.ts":"9","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/themeColor.ts":"10","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/globalStyle.ts":"11","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/AboutPage.tsx":"12","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/MainPage.tsx":"13","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/ThemeList.tsx":"14","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/StoreList.tsx":"15","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/NavContainer.tsx":"16","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/MentorDetailContainer.tsx":"17","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/KobbubakDetailContainer.tsx":"18","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/AlcoholDetail.tsx":"19","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/FeatherDetail.tsx":"20","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostDetail.tsx":"21","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostList.tsx":"22","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostWriting.tsx":"23","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/StoreDetail.tsx":"24","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/TodayRandom.tsx":"25","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/index.ts":"26","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/config.ts":"27","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/MetorTheme.tsx":"28","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/KobbubakTheme.tsx":"29","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/StoreCard2.tsx":"30","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/StoreCard.tsx":"31","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/PostReply.tsx":"32","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/Posts.tsx":"33","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/registerModal.ts":"34","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/googleFirstLogin.ts":"35","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/index.ts":"36","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Footer.tsx":"37","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Login.tsx":"38","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/PeoplePick.tsx":"39","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/LoginForm.tsx":"40","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Nav.tsx":"41","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/GoogleLoginComponent.tsx":"42","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/DeleteCommentModal.tsx":"43","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/SignupForm.tsx":"44","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Signup.tsx":"45","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/EditCommentModal.tsx":"46"},{"size":472,"mtime":1613742173464,"results":"47","hashOfConfig":"48"},{"size":1984,"mtime":1612692489942,"results":"49","hashOfConfig":"48"},{"size":209,"mtime":1612692489945,"results":"50","hashOfConfig":"48"},{"size":331,"mtime":1612692489945,"results":"51","hashOfConfig":"48"},{"size":449,"mtime":1612692489946,"results":"52","hashOfConfig":"48"},{"size":86,"mtime":1610956706588,"results":"53","hashOfConfig":"48"},{"size":598,"mtime":1612692489941,"results":"54","hashOfConfig":"48"},{"size":205,"mtime":1612692489932,"results":"55","hashOfConfig":"48"},{"size":637,"mtime":1610956706589,"results":"56","hashOfConfig":"48"},{"size":254,"mtime":1612692489947,"results":"57","hashOfConfig":"48"},{"size":660,"mtime":1613392018417,"results":"58","hashOfConfig":"48"},{"size":109,"mtime":1610956706582,"results":"59","hashOfConfig":"48"},{"size":5836,"mtime":1613392018406,"results":"60","hashOfConfig":"48"},{"size":107,"mtime":1610956706586,"results":"61","hashOfConfig":"48"},{"size":2706,"mtime":1613471300104,"results":"62","hashOfConfig":"48"},{"size":813,"mtime":1612692489932,"results":"63","hashOfConfig":"48"},{"size":642,"mtime":1612692489931,"results":"64","hashOfConfig":"48"},{"size":663,"mtime":1612692489930,"results":"65","hashOfConfig":"48"},{"size":5388,"mtime":1613740540705,"results":"66","hashOfConfig":"48"},{"size":2622,"mtime":1613740540707,"results":"67","hashOfConfig":"48"},{"size":13814,"mtime":1613740540708,"results":"68","hashOfConfig":"48"},{"size":3862,"mtime":1613740540708,"results":"69","hashOfConfig":"48"},{"size":2240,"mtime":1613740540709,"results":"70","hashOfConfig":"48"},{"size":17185,"mtime":1613741929973,"results":"71","hashOfConfig":"48"},{"size":8412,"mtime":1613742636555,"results":"72","hashOfConfig":"48"},{"size":69,"mtime":1612692489943,"results":"73","hashOfConfig":"48"},{"size":95,"mtime":1613479628657,"results":"74","hashOfConfig":"48"},{"size":554,"mtime":1611554380624,"results":"75","hashOfConfig":"48"},{"size":614,"mtime":1611554380624,"results":"76","hashOfConfig":"48"},{"size":1621,"mtime":1613471300106,"results":"77","hashOfConfig":"48"},{"size":1453,"mtime":1613740540711,"results":"78","hashOfConfig":"48"},{"size":1444,"mtime":1613740540710,"results":"79","hashOfConfig":"48"},{"size":794,"mtime":1613740540710,"results":"80","hashOfConfig":"48"},{"size":286,"mtime":1612692489944,"results":"81","hashOfConfig":"48"},{"size":154,"mtime":1612692489943,"results":"82","hashOfConfig":"48"},{"size":546,"mtime":1612692489929,"results":"83","hashOfConfig":"48"},{"size":93,"mtime":1610956706580,"results":"84","hashOfConfig":"48"},{"size":1752,"mtime":1613740301589,"results":"85","hashOfConfig":"48"},{"size":5529,"mtime":1613471300099,"results":"86","hashOfConfig":"48"},{"size":2686,"mtime":1613740301590,"results":"87","hashOfConfig":"48"},{"size":4953,"mtime":1613741929971,"results":"88","hashOfConfig":"48"},{"size":3034,"mtime":1613740540704,"results":"89","hashOfConfig":"48"},{"size":2330,"mtime":1613740540703,"results":"90","hashOfConfig":"48"},{"size":4061,"mtime":1613741422293,"results":"91","hashOfConfig":"48"},{"size":3737,"mtime":1613740540704,"results":"92","hashOfConfig":"48"},{"size":2542,"mtime":1613741929970,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l5fblu",{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"99"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"99"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"99"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"99"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"99"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"99"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"99"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"99"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"99"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"99"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"99"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/index.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/routes.tsx",["202"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle, COLORS } from \"./styles\";\nimport { Footer } from \"./components\";\nimport {\n  Nav,\n  MentorDetailContainer,\n  KobbubakDetailContainer\n} from \"./containers\";\nimport {\n  AboutPage,\n  AlcoholDetail,\n  FeatherDetail,\n  MainPage,\n  PostDetail,\n  PostList,\n  PostWriting,\n  StoreDetail,\n  StoreList,\n  ThemeList,\n  TodayRandom\n} from \"./pages\";\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ThemeProvider theme={COLORS}>\n          <GlobalStyle />\n          <Router>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={MainPage} />\n              <Route exact path=\"/about\" component={AboutPage} />\n              <Route exact path=\"/alcohol-detail\" component={AlcoholDetail} />\n              <Route exact path=\"/feather-detail\" component={FeatherDetail} />\n              <Route\n                exact\n                path=\"/kobbubak-detail\"\n                component={KobbubakDetailContainer}\n              />\n              <Route\n                exact\n                path=\"/metor-detail\"\n                component={MentorDetailContainer}\n              />\n              <Route exact path=\"/store-detail/:id\" component={StoreDetail} />\n              <Route exact path=\"/store-list\" component={StoreList} />\n              <Route exact path=\"/theme-list\" component={ThemeList} />\n              <Route exact path=\"/today-random\" component={TodayRandom} />\n              <Route exact path=\"/post-detail/:id\" component={PostDetail} />\n              <Route exact path=\"/post-list\" component={PostList} />\n              <Route exact path=\"/post-writing\" component={PostWriting} />\n            </Switch>\n            {/* <Footer /> */}\n          </Router>\n        </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n}\nexport default Routes;\n",["203","204"],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/googleFirstLogin.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/registerModal.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/mixin.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/themeColor.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/globalStyle.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/AboutPage.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/MainPage.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/ThemeList.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/StoreList.tsx",["205","206"],"import React, { useEffect, useState } from \"react\";\nimport { API } from \"../config\";\nimport StoreCard2 from \"./childComponents/StoreCard2\";\nimport axios from \"axios\";\nimport \"./StoreList.scss\";\n\ninterface UserData {\n  storeList: any;\n}\n\nexport default function StoreList() {\n  const [storeList, setStoreList] = useState<UserData | any>([]);\n  const feather = \"feather\";\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .get(`${API}/store/list`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          console.log(\"res\", res);\n          setStoreList(res.data.store_list);\n        });\n    } else {\n      axios.get(`${API}/store/list`).then((res) => {\n        setStoreList(res.data.store_list);\n      });\n    }\n  }, []);\n\n  const changeLikedState = (id: any, type: string) => {\n    if (localStorage.getItem(\"token\")) {\n      setStoreList(\n        storeList?.map((data: any) => {\n          if (data.id === id) {\n            if (data.like_state) {\n              return {\n                ...data,\n                like_state: !data.like_state,\n                like_count: data.like_count - 1\n              };\n            } else {\n              return {\n                ...data,\n                like_state: !data.like_state,\n                like_count: data.like_count + 1\n              };\n            }\n          } else {\n            return data;\n          }\n        })\n      );\n      axios\n        .post(`${API}/store/like/${id}`, \"data\", {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => console.log(\"좋아요 통신이 완료되었습니다.\", res))\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n  return (\n    <>\n      <div className=\"storeList\">\n        <div className=\"storeListLogo\">\n          <img src=\"./images/storelist.png\"></img>\n        </div>\n        {/* <div className=\"logoBox\">\n          <div className=\"logoBox1\">\n            <p>위코더 맛집</p>\n          </div>\n        </div> */}\n        <div className=\"storeFood\">\n          {storeList?.map((feather: any) => {\n            return (\n              <StoreCard2\n                id={feather.id}\n                name={feather.name}\n                image={feather.image}\n                type={\"soju\"}\n                likeCount={feather.like_count}\n                likeState={feather.like_state}\n                changeLikedState={changeLikedState}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/NavContainer.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/MentorDetailContainer.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/KobbubakDetailContainer.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/AlcoholDetail.tsx",["207","208","209","210"],"import React, { useEffect, useState } from \"react\";\nimport { API } from \"../config\";\nimport axios from \"axios\";\nimport StoreCard2 from \"./childComponents/StoreCard2\";\nimport Slider from \"react-slick\";\nimport \"./AlcoholDetail.scss\";\nimport \"./MainPage.scss\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\ninterface UserData {\n  alcoholData: any;\n}\nexport default function AlcoholDetail({ match, props }: any) {\n  const [alcoholData, setAlcoholData] = useState<UserData | any>([]);\n  const alcohol = \"alcohol\";\n  const setting = {\n    dots: false,\n    infinite: true,\n    speed: 1000,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    arrows: true,\n    nextArrow: (\n      <div>\n        <img\n          alt=\"rightArrow\"\n          className=\"next-slick-arrow\"\n          src=\"./images/right-arrow.png\"\n        ></img>\n      </div>\n    ),\n    prevArrow: (\n      <div>\n        <img\n          alt=\"leftArrow\"\n          className=\"prev-slick-arrow\"\n          src=\"./images/left-arrow.png\"\n        ></img>\n      </div>\n    ),\n    className: \"slides\"\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .get(`${API}/store/list?tag=${alcohol}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          console.log(\"123\", res.data.store_list);\n          setAlcoholData(res.data.store_list);\n        });\n    } else {\n      axios.get(`${API}/store/list?tag=${alcohol}`).then((res) => {\n        setAlcoholData(res.data.store_list);\n      });\n    }\n  }, []);\n\n  const changeLikedState = (id: any, type: string) => {\n    if (localStorage.getItem(\"token\")) {\n      setAlcoholData({\n        ...alcoholData,\n        [type]: alcoholData[type].map((data: any) => {\n          if (data.id === id) {\n            if (data.like_state) {\n              return {\n                ...data,\n                like_state: !data.like_state,\n                like_count: data.like_count - 1\n              };\n            } else {\n              return {\n                ...data,\n                like_state: !data.like_state,\n                like_count: data.like_count + 1\n              };\n            }\n          } else {\n            return data;\n          }\n        })\n      });\n      axios\n        .post(`${API}/store/like/${id}`, \"data\", {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => console.log(\"좋아요 통신이 완료되었습니다.\", res))\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"alcohol\">\n        <div className=\"logoBox\">\n          <img src=\"./images/alcoholLogo.png\" />\n        </div>\n        <div className=\"sojuDiv\">\n          <div className=\"sojuIcon\">\n            <img src=\"./images/soju.png\"></img>\n            <p>소주와</p>\n          </div>\n        </div>\n        <div className=\"sojuListDiv\">\n          <div className=\"sojuCardDiv\">\n            <Slider {...setting}>\n              {alcoholData.soju?.map((alcohol: any) => {\n                return (\n                  <StoreCard2\n                    id={alcohol.id}\n                    name={alcohol.name}\n                    type={\"soju\"}\n                    image={alcohol.image}\n                    likeCount={alcohol.like_count}\n                    likeState={alcohol.like_state}\n                    changeLikedState={changeLikedState}\n                  />\n                );\n              })}\n            </Slider>\n          </div>\n        </div>\n        <div className=\"beerDiv\">\n          <div className=\"beerIcon\">\n            <img src=\"./images/beer.png\"></img>\n            <p>맥주와</p>\n          </div>\n        </div>\n        <div className=\"beerListDiv\">\n          <div className=\"beerCardDiv\">\n            <Slider {...setting}>\n              {alcoholData.beer?.map((alcohol: any) => {\n                return (\n                  <StoreCard2\n                    id={alcohol.id}\n                    name={alcohol.name}\n                    type={\"beer\"}\n                    image={alcohol.image}\n                    likeCount={alcohol.like_count}\n                    likeState={alcohol.like_state}\n                    changeLikedState={changeLikedState}\n                  />\n                );\n              })}\n            </Slider>\n          </div>\n        </div>\n        <div className=\"riceWineDiv\">\n          <div className=\"riceWineIcon\">\n            <img src=\"./images/sake.png\"></img>\n            <p>막걸리와</p>\n          </div>\n        </div>\n        <div className=\"riceWineDiv\">\n          <div className=\"riceWineCardDiv\">\n            <Slider {...setting}>\n              {alcoholData.makgeolli?.map((alcohol: any) => {\n                return (\n                  <StoreCard2\n                    id={alcohol.id}\n                    type={\"makgeolli\"}\n                    name={alcohol.name}\n                    image={alcohol.image}\n                    likeCount={alcohol.like_count}\n                    likeState={alcohol.like_state}\n                    changeLikedState={changeLikedState}\n                  />\n                );\n              })}\n            </Slider>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/FeatherDetail.tsx",["211"],"import React, { useEffect, useState } from \"react\";\nimport { API } from \"../config\";\nimport StoreCard2 from \"./childComponents/StoreCard2\";\nimport axios from \"axios\";\nimport \"./FeatherDetail.scss\";\n\ninterface UserData {\n  featherFood: any;\n}\n\nexport default function FeatherDetail() {\n  const [featherFood, setFeatherFood] = useState<UserData | any>([]);\n  const feather = \"feather\";\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .get(`${API}/store/list?tag=${feather}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          console.log(\"res\", res);\n          setFeatherFood(res.data.store_list.feather);\n        });\n    } else {\n      axios.get(`${API}/store/list?tag=${feather}`).then((res) => {\n        setFeatherFood(res.data.store_list.feather);\n      });\n    }\n  }, []);\n\n  const changeLikedState = (id: any, type: string) => {\n    if (localStorage.getItem(\"token\")) {\n      setFeatherFood(\n        featherFood?.map((data: any) => {\n          if (data.id === id) {\n            if (data.like_state) {\n              return {\n                ...data,\n                like_state: !data.like_state,\n                like_count: data.like_count - 1\n              };\n            } else {\n              return {\n                ...data,\n                like_state: !data.like_state,\n                like_count: data.like_count + 1\n              };\n            }\n          } else {\n            return data;\n          }\n        })\n      );\n      axios\n        .post(`${API}/store/like/${id}`, \"data\", {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => console.log(\"좋아요 통신이 완료되었습니다.\", res))\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"feather\">\n        <div className=\"logoBox\">\n          <img src=\"./images/gitfoodLogo.png\" />\n        </div>\n        <div className=\"featherFood\">\n          {featherFood?.map((feather: any) => {\n            return (\n              <StoreCard2\n                id={feather.id}\n                name={feather.name}\n                type={\"soju\"}\n                image={feather.image}\n                likeCount={feather.like_count}\n                likeState={feather.like_state}\n                changeLikedState={changeLikedState}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostDetail.tsx",["212","213","214","215","216","217","218"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"../config\";\nimport { EditCommentModal, DeleteCommentModal } from \"../components\";\nimport {\n  setSignupActive,\n  setLoginActive,\n  setFirstLogin\n} from \"../store/actions\";\nimport ReactQuill, { Quill } from \"react-quill\"; // Typescript\nimport axios from \"axios\";\nimport Pagination from \"react-js-pagination\";\nimport wemeok from \"../images/wemeoktalk_2.png\";\nimport PostReply from \"../pages/childComponents/PostReply\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"./PostDetail.scss\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport ReactHtmlParser from \"react-html-parser\";\n// import Essentials from \"@ckeditor/ckeditor5-essentials/src/essentials\";\n// import Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\n// import Italic from \"@ckeditor/ckeditor5-basic-styles/src/italic\";\n// import Paragraph from \"@ckeditor/ckeditor5-paragraph/src/paragraph\";\ninterface UserData {\n  info: any;\n  items: any[];\n}\n// const editorConfiguration = {\n//   plugins: [Essentials, Bold, Italic, Paragraph],\n//   toolbar: [\"bold\", \"italic\"]\n// };\nexport default function PostDetail({ match }: any) {\n  const [posts, setPosts] = useState<any>([]);\n  const [comments, setComments] = useState<any>([]);\n  const [comment, setComment] = useState<string>(\"\");\n  const [title, setTitle] = useState<any>({ newTitle: null });\n  const [postTitle, setPostTitle] = useState<any>(null);\n  const [postContent, setPostContent] = useState<any>(null);\n  const [editModal, setEditModal] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [commentText, setCommentText] = useState<UserData | any>({\n    newComment: null,\n    updatedComment: { id: null, content: \"기존댓글~~~\" }\n  });\n  const [activeInput, setActiveInput] = useState(false);\n  const [countComments, setCountComments] = useState(0);\n  const [activePage, setActivePage] = useState<any>(1);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const modules = {\n    toolbar: [\n      //[{ 'font': [] }],\n      [{ header: [1, 2, 3, 4, false] }],\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n      [\n        { list: \"ordered\" },\n        { list: \"bullet\" },\n        { indent: \"-1\" },\n        { indent: \"+1\" }\n      ],\n      [\"link\", \"image\"],\n      [{ align: [] }, { color: [] }, { background: [] }], // dropdown with defaults from theme\n      [\"clean\"]\n    ]\n  };\n\n  const formats = [\n    //'font',\n    \"header\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"align\",\n    \"color\",\n    \"background\"\n  ];\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      await axios\n        .get(`${API}/board/${match.params.id}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          console.log(\"test\", res.data);\n          setPosts(res.data.board_info);\n          setComments(res.data.board_comments);\n          setCountComments(res.data.count_comments);\n          setTitle(res.data.board_info[0].title);\n          setPostContent(res.data.board_info[0].content);\n        });\n    };\n    fetchPosts();\n  }, [match.params.id]);\n\n  const onChangeComment = (e: any) => {\n    setComment(e.target.value);\n  };\n\n  const submitChangedComment = (crud: string, commentId: number) => {\n    if (localStorage.getItem(\"token\")) {\n      if (crud === \"INSERT\") {\n        axios\n          .post(\n            `${API}/board/${match.params.id}/comment`,\n            JSON.stringify({\n              comment\n            }),\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            if (res.data.MESSAGE === \"NEED_USER_NAME\") {\n              alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\n              dispatch(setFirstLogin(true));\n              dispatch(setSignupActive(true));\n            } else {\n              console.log(res);\n              window.location.reload();\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n\n      if (crud === \"UPDATE\") {\n        setEditModal(false);\n\n        axios\n          .patch(\n            `${API}/board/${match.params.id}/${commentId}`,\n            JSON.stringify({\n              comment: commentText.updatedComment.content\n            }),\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            window.location.reload();\n          })\n          .catch((err) => console.log(err));\n      }\n\n      if (crud === \"DELETE\") {\n        setDeleteModal(false);\n        axios\n          .delete(`${API}/board/${match.params.id}/${commentId}`, {\n            headers: {\n              Authorization: localStorage.getItem(\"token\")\n            }\n          })\n          .then((res) => {\n            window.location.reload();\n          })\n          .catch((err) => console.log(err));\n      }\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  const updateComment = (e: any) => {\n    const { value } = e.target;\n\n    setCommentText({\n      ...commentText,\n      updatedComment: {\n        ...commentText.updatedComment,\n        content: value\n      }\n    });\n  };\n\n  const clickEdit = (comment: any) => {\n    setEditModal(true);\n    setCommentText({\n      ...commentText,\n      updatedComment: {\n        id: comment.comment_id,\n        content: comment.comment_content\n      }\n    });\n  };\n\n  const clickDeleteComment = (commentId: any) => {\n    setDeleteModal(true);\n    setCommentText({\n      ...commentText,\n      updatedComment: {\n        ...commentText.updatedComment,\n        id: commentId\n      }\n    });\n  };\n\n  // const contentResult = postContent.replace(/(<([^>]+)>)/gi, \"\");\n  // const test = postContent.replace(/<br\\s*\\/?>/gm, \"\\n\");\n  // const test1 = postContent.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br/>\");\n\n  const patchPost = (): void => {\n    const data = {\n      title: postTitle,\n      content: postContent\n    };\n\n    axios.patch(`${API}/board/${match.params.id}`, JSON.stringify(data), {\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n    window.location.reload();\n  };\n\n  const deletePost = (): void => {\n    if (window.confirm(\"게시물을 삭제하시겠습까?\")) {\n      axios\n        .delete(`${API}/board/${match.params.id}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          history.push(\"/post-list\");\n        });\n    }\n  };\n\n  const handlePageChange = (pageNumber: any) => {\n    axios\n      .get(`${API}/board/${match.params.id}?offset=${(pageNumber - 1) * 5}`, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      })\n      .then((res) => {\n        setComments(res.data.board_comments);\n      });\n    setActivePage(pageNumber);\n  };\n\n  const changePostTitle = (e: any) => {\n    const { value } = e.target;\n    setPostTitle(value);\n  };\n\n  const changePostContent = (html: any) => {\n    setPostContent(html);\n  };\n  console.log(\"test\", postContent);\n  return (\n    <>\n      <div className=\"postDetail\">\n        <div className=\"weMeokTalkLogo\">\n          <img src={wemeok}></img>\n          <p>개발자 공유 문화 잊지 말자. 그러니까 맛집도 공유하자.</p>\n        </div>\n        <div className=\"weMeokTalkList\">\n          <div className=\"listDiv\">\n            {activeInput ? (\n              <>\n                <div className=\"editListDiv\">\n                  <div className=\"writingTitle\">\n                    <p>제목</p>\n                    <input\n                      type=\"text/html\"\n                      value={postTitle}\n                      onChange={changePostTitle}\n                    ></input>\n                  </div>\n                  <div className=\"solidLine\"></div>\n                  <div className=\"writerCreated\">\n                    <p>{posts[0]?.writer}</p>\n                    <p>|</p>\n                    <p>{posts[0]?.created_at}</p>\n                  </div>\n                  <div className=\"writingCenter\">\n                    <p>내용</p>\n                    {/* <CKEditor\n                      editor={ClassicEditor}\n                      data={postContent}\n                      onReady={(editor: any) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log(\"Editor is ready to use!\", editor);\n                      }}\n                      onChange={(event: any, editor: any) => {\n                        const data = editor.getData();\n                        console.log({ event, editor, data });\n                        setPostContent(data);\n                        console.log(\"제발\", postContent);\n                      }}\n                      onBlur={(event: any, editor: any) => {\n                        console.log(\"Blur.\", editor);\n                      }}\n                      onFocus={(event: any, editor: any) => {\n                        console.log(\"Focus.\", editor);\n                      }}\n                      config={custom_config}\n                    /> */}\n                    <ReactQuill\n                      bounds={\".quill\"}\n                      theme={\"snow\"}\n                      value={postContent}\n                      onChange={(content, delta, source, editor) =>\n                        changePostContent(editor.getHTML())\n                      }\n                      modules={modules}\n                      formats={formats}\n                    />\n                  </div>\n                  <div className=\"writerButton\">\n                    <button\n                      onClick={() => {\n                        patchPost();\n                        setActiveInput(false);\n                      }}\n                    >\n                      수정\n                    </button>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <div className=\"detailTitle\">\n                  <p className=\"titleBold\">제목</p>\n                  <p className=\"title\">{posts[0]?.title}</p>\n                </div>\n                <div className=\"solidLine\"></div>\n                <div className=\"writerCreated\">\n                  <p className=\"wirter\">{posts[0]?.writer}</p>\n                  <p className=\"created\">{posts[0]?.created_at}</p>\n                </div>\n                <div\n                  className=\"contentDiv\"\n                  dangerouslySetInnerHTML={{ __html: posts[0]?.content }}\n                />\n                {/* <div className=\"contentDiv\">\n                  {ReactHtmlParser(posts[0]?.content)}\n                </div> */}\n                {/* <div className=\"contentDiv\">{posts[0]?.content}</div> */}\n                {posts[0]?.writer_id ===\n                  Number(localStorage.getItem(\"user_id_number\")) && (\n                  <>\n                    <div className=\"editDeleteDiv\">\n                      <p\n                        className=\"edit\"\n                        onClick={() => {\n                          setActiveInput(true);\n                          setPostTitle(posts[0]?.title);\n                        }}\n                      >\n                        수정\n                      </p>\n\n                      <p className=\"delete\" onClick={deletePost}>\n                        삭제\n                      </p>\n                    </div>\n                  </>\n                )}\n              </>\n            )}\n            <div className=\"solidLine\"></div>\n            <div className=\"commentsInputDiv\">\n              <p>댓글 ({countComments})</p>\n              <input\n                maxLength={149}\n                value={comment}\n                onChange={onChangeComment}\n              ></input>\n              <span onClick={() => submitChangedComment(\"INSERT\", 0)}>\n                등록\n              </span>\n            </div>\n            {comments?.map((comments: any) => {\n              return (\n                <PostReply\n                  comments={comments}\n                  id={comments.comment_id}\n                  writer={comments.comment_writer}\n                  content={comments.comment_content}\n                  created_at={comments.comment_created_at}\n                  writer_id={comments.comment_writer_id}\n                  clickEdit={clickEdit}\n                  clickDeleteComment={clickDeleteComment}\n                />\n              );\n            })}\n            <Pagination\n              activePage={activePage}\n              itemsCountPerPage={5}\n              totalItemsCount={countComments}\n              pageRangeDisplayed={5}\n              hideFirstLastPages\n              itemClassPrev={\"prevPageText\"}\n              itemClassNext={\"nextPageText\"}\n              prevPageText={\"◀\"}\n              nextPageText={\"▶\"}\n              onChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n\n      {editModal && (\n        <EditCommentModal\n          editModal={editModal}\n          setEditModal={setEditModal}\n          updatedComment={commentText.updatedComment}\n          submitChangedComment={submitChangedComment}\n          updateComment={updateComment}\n        />\n      )}\n\n      {deleteModal && (\n        <DeleteCommentModal\n          deleteModal={deleteModal}\n          setDeleteModal={setDeleteModal}\n          submitChangedComment={submitChangedComment}\n          commentId={commentText.updatedComment.id}\n        />\n      )}\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostList.tsx",["219","220"],"import React, { useState, useEffect } from \"react\";\nimport Posts from \"./childComponents/Posts\";\nimport Pagination from \"react-js-pagination\";\nimport axios from \"axios\";\nimport wemeok from \"../images/wemeoktalk_2.png\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { API } from \"../config\";\nimport \"./PostList.scss\";\n\ninterface PostData {\n  posts: any;\n}\nexport default function App() {\n  const [posts, setPosts] = useState<PostData | any>([]);\n  const [activePage, setActivePage] = useState<any>(1);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      await axios\n        .get(`${API}/board`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          setPosts(res.data);\n        })\n        .catch(function (error) {\n          if (error.response) {\n            // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n          } else if (error.request) {\n            // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n            // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n            // Node.js의 http.ClientRequest 인스턴스입니다.\n            console.log(error.request);\n          } else {\n            // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n            console.log(\"Error\", error.message);\n          }\n          console.log(error.config);\n        });\n    };\n    fetchPosts();\n  }, []);\n\n  const handlePageChange = (pageNumber: any) => {\n    axios\n      .get(`${API}/board?offset=${(pageNumber - 1) * 5}`, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      })\n      .then((res) => {\n        setPosts(res.data);\n      });\n    setActivePage(pageNumber);\n  };\n  console.log(posts);\n  const loginCheck = () => {\n    if (localStorage.getItem(\"token\")) {\n      history.push(\"./post-writing\");\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n  console.log(\"1\", posts);\n  return (\n    <>\n      <div className=\"postList\">\n        <div className=\"weMeokTalkLogo\">\n          <img src={wemeok}></img>\n          <p>개발자 공유 문화 잊지 말자. 그러니까 맛집도 공유하자.</p>\n        </div>\n        <div className=\"weMeokTalkList\">\n          <div className=\"listDiv\">\n            <div className=\"listTitleBold\">\n              <p className=\"titleBold\">제목</p>\n              <p className=\"writerBold\">작성자</p>\n              <p className=\"createdAtBold\">등록일</p>\n              <p className=\"commentsBold\">댓글</p>\n            </div>\n            <div className=\"listSolidBold\"></div>\n            {posts.board_list?.map((post: any) => {\n              return (\n                <Posts\n                  id={post.id}\n                  title={post.title}\n                  writer={post.writer}\n                  created_at={post.created_at}\n                  comments={post.comments}\n                />\n              );\n            })}\n            <div className=\"writerButton\">\n              <button onClick={loginCheck}>글쓰기</button>\n            </div>\n            <Pagination\n              activePage={activePage}\n              itemsCountPerPage={5}\n              totalItemsCount={posts.total_board}\n              pageRangeDisplayed={5}\n              hideFirstLastPages\n              itemClassPrev={\"prevPageText\"}\n              itemClassNext={\"nextPageText\"}\n              prevPageText={\"◀\"}\n              nextPageText={\"▶\"}\n              onChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostWriting.tsx",["221","222","223"],"import React, { useState } from \"react\";\nimport { COLORS } from \"../styles/themeColor\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { API } from \"../config\";\nimport wemeok from \"../images/wemeoktalk_2.png\";\nimport axios from \"axios\";\nimport ReactQuill from \"react-quill\"; // Typescript\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-quill/dist/quill.bubble.css\";\nimport \"./PostWriting.scss\";\n\nexport default function PostWriting() {\n  const [title, setTitle] = useState<any>({ newTitle: null });\n  const [content, setContent] = useState<any>(\"\");\n  const history = useHistory();\n\n  const contentResult = content.replace(/(<([^>]+)>)/gi, \"\");\n\n  let data = {\n    title: title.newTitle,\n    content: contentResult\n  };\n\n  const uploadData = () => {\n    axios\n      .post(`${API}/board`, JSON.stringify(data), {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n          \"Content-Type\": `application/json`\n        }\n      })\n      .then((res) => {\n        history.push(\"/post-list\");\n      });\n  };\n\n  const createPost = (value: string) => {\n    setContent(value);\n  };\n\n  return (\n    <>\n      <div className=\"postWriting\">\n        <div className=\"weMeokTalkLogo\">\n          <img src={wemeok}></img>\n          <p>개발자 공유 문화 잊지 말자. 그러니까 맛집도 공유하자.</p>\n        </div>\n        <div className=\"weMeokTalkList\">\n          <div className=\"listDiv\">\n            <div className=\"writingTitle\">\n              <p>제목</p>\n              <input\n                maxLength={50}\n                type=\"text/html\"\n                onChange={(e) =>\n                  setTitle({ ...title, newTitle: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"solidLine\"></div>\n            <div className=\"writingCenter\">\n              <p>내용</p>\n              <ReactQuill\n                bounds={\".quill\"}\n                theme={\"snow\"}\n                value={content}\n                onChange={createPost}\n              />\n            </div>\n            <div className=\"writerButton\">\n              <button onClick={uploadData}>작성</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/StoreDetail.tsx",["224","225","226","227"],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/TodayRandom.tsx",["228","229","230","231"],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/config.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/MetorTheme.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/KobbubakTheme.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/StoreCard2.tsx",["232","233"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n  id: number;\n  type: string;\n  image: string;\n  name: string;\n  likeCount: number;\n  likeState: boolean;\n  changeLikedState: (id: any, type: string) => void;\n}\n\nexport default function StoreCard({\n  id,\n  image,\n  name,\n  type,\n  likeCount,\n  likeState,\n  changeLikedState\n}: Props) {\n  const [fullLike, setFullLike] = useState<boolean>(true);\n  const history = useHistory();\n\n  const heartLike = () => {\n    setFullLike(!fullLike);\n  };\n\n  const iconLike = fullLike ? \"./images/heart.png\" : \"./images/fullheart.png\";\n  return (\n    <>\n      <div className=\"storeCard\">\n        <div className=\"rankingComponents\">\n          <div\n            className=\"storeHeader\"\n            onClick={() => history.push(`/store-detail/${id}`)}\n          >\n            <p>Weeeating</p>\n            <hr></hr>\n            <img alt=\"storeImg\" src={image}></img>\n            <hr></hr>\n          </div>\n          <div className=\"storeFooter\">\n            <p className=\"foodName\">{name}</p>\n            <span onClick={() => changeLikedState(id, type)}>\n              {likeState ? (\n                <img alt=\"Like\" src=\"./images/fullheart.png\"></img>\n              ) : (\n                <img alt=\"Like\" src=\"./images/heart.png\"></img>\n              )}\n            </span>\n            {/* <img\n              alt=\"Like\"\n              src={iconLike}\n              onClick={() => changeLikedState(id)}\n            ></img> */}\n            <p className=\"heartTotal\">{likeCount}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/StoreCard.tsx",["234"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n  id: number;\n  top: string;\n  image: string;\n  name: string;\n  likeCount: number;\n  likeState: boolean;\n  changeLikedState: (id: any) => void;\n}\n\nexport default function StoreCard({\n  id,\n  top,\n  image,\n  name,\n  likeCount,\n  likeState,\n  changeLikedState\n}: Props) {\n  const history = useHistory();\n\n  return (\n    <>\n      <div className=\"storeCard\">\n        <div className=\"ranking\">\n          <img\n            alt=\"CrownIcon\"\n            className=\"iconCrown\"\n            src=\"./images/crown.png\"\n          ></img>\n          <p>{top}</p>\n        </div>\n        <div className=\"rankingComponents\">\n          <div\n            className=\"storeHeader\"\n            onClick={() => history.push(`/store-detail/${id}`)}\n          >\n            <p>Weeeating</p>\n            <hr></hr>\n            <img alt=\"storeImg\" src={image}></img>\n            <hr></hr>\n          </div>\n          <div className=\"storeFooter\">\n            <p className=\"foodName\">{name}</p>\n            <span onClick={() => changeLikedState(id)}>\n              {likeState ? (\n                <img alt=\"Like\" src=\"./images/fullheart.png\"></img>\n              ) : (\n                <img alt=\"Like\" src=\"./images/heart.png\"></img>\n              )}\n            </span>\n            <p className=\"heartTotal\">{likeCount}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/PostReply.tsx",["235","236","237","238","239"],"import React, { useState } from \"react\";\nimport { COLORS } from \"../../styles/themeColor\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"../../config\";\n\ninterface PostReplyData {\n  id: number;\n  content: string;\n  writer: string;\n  created_at: string;\n  writer_id: number;\n  comments: any;\n  clickEdit: (comment: any) => void;\n  clickDeleteComment: (comment: any) => void;\n  // submitChangedComment: (crud: string, commentId: number) => void\n}\n\nexport default function PostReply({\n  id,\n  content,\n  writer,\n  created_at,\n  writer_id,\n  comments,\n  clickEdit,\n  clickDeleteComment\n}: // submitChangedComment\nPostReplyData) {\n  const history = useHistory();\n\n  return (\n    <div className=\"comments\" key={id}>\n      <span className=\"commentsWriter\">{writer}</span>\n      <div className=\"commentDiv\">\n        <p className=\"commentContent\">{content}</p>\n        <span className=\"commentCreated\">({created_at})</span>\n        {writer_id === Number(localStorage.getItem(\"user_id_number\")) && (\n          <div className=\"modifyDiv\">\n            <p\n              className=\"commentEdit\"\n              onClick={() => {\n                clickEdit(comments);\n              }}\n            >\n              수정\n            </p>\n            <p className=\"commentDelete\" onClick={() => clickDeleteComment(id)}>\n              삭제\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/Posts.tsx",["240","241"],"import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ninterface PostData {\n  id: string | number | null | undefined;\n  title: React.ReactNode;\n  writer: string;\n  created_at: string;\n  comments: number;\n}\nexport default function Posts({\n  id,\n  title,\n  writer,\n  created_at,\n  comments\n}: PostData) {\n  const history = useHistory();\n  return (\n    <>\n      <div\n        className=\"listTitle\"\n        key={id}\n        onClick={() => history.push(`/post-detail/${id}`)}\n      >\n        <p className=\"title\">{title}</p>\n        <p className=\"writer \">{writer}</p>\n        <p className=\"createdAt\">{created_at}</p>\n        <p className=\"comments\">{comments}</p>\n      </div>\n      <div className=\"listSolid\"></div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/registerModal.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/googleFirstLogin.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Footer.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Login.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/PeoplePick.tsx",["242","243"],"import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport {\n  IoIosArrowBack,\n  IoIosArrowForward,\n  IoIosAddCircle\n} from \"react-icons/io\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { mixin } from \"../styles\";\n\ninterface IProps {\n  info: never[];\n  TITLE: string[];\n}\n\nfunction SampleNextArrow(props: any) {\n  const { className, style, onClick } = props;\n  return (\n    <img\n      alt=\"rightArrow\"\n      src=\"./images/arrow-right.png\"\n      className={className}\n      style={{\n        ...style,\n        display: \"block\",\n        width: \"2.5rem\",\n        height: \"2.5rem\",\n        top: \"-43px\",\n        left: \"1001px\"\n      }}\n      onClick={onClick}\n    ></img>\n  );\n}\n\nfunction SamplePrevArrow(props: any) {\n  const { className, style, onClick } = props;\n  return (\n    <img\n      alt=\"rightArrow\"\n      src=\"./images/arrow-left.png\"\n      className={className}\n      style={{\n        ...style,\n        display: \"block\",\n        width: \"2.5rem\",\n        height: \"2.5rem\",\n        top: \"-43px\",\n        left: \"951px\"\n      }}\n      onClick={onClick}\n    ></img>\n  );\n}\n\nexport default function PeoplePick({ info, TITLE }: IProps) {\n  const history = useHistory();\n\n  const settings = {\n    dots: false,\n    infinite: false,\n    speed: 1000,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    arrows: true,\n    // centerPadding: \"47px\",\n    nextArrow: <SampleNextArrow />,\n    prevArrow: <SamplePrevArrow />,\n    className: \"slides\"\n  };\n  return (\n    <Wrapper>\n      <Container>\n        <Header>\n          <Title>\n            <p>{TITLE[0]}</p>\n            <p>{TITLE[1]}</p>\n          </Title>\n          <Line></Line>\n          <Arrow>\n            <div className=\"left arrow\">\n              <IoIosArrowBack className=\"arrowIcon\" />\n            </div>\n            <div className=\"right arrow\">\n              <IoIosArrowForward className=\"arrowIcon\" />\n            </div>\n          </Arrow>\n        </Header>\n        <CardWrapper>\n          <Slider {...settings}>\n            {info.length &&\n              info.map(\n                ({ id, image, name, position, store_id, store, desc }: any) => (\n                  <CardEach id={id}>\n                    <Profile>\n                      <img src={image} />\n                      <div className=\"name\">{name}</div>\n                      <div className=\"position\">{position}</div>\n                    </Profile>\n                    <Desc>\n                      <div className=\"storeHeader\">\n                        <span className=\"decoTitle\">\" </span>\n                        <span className=\"storeTitle\">{store}</span>\n                        <span className=\"decoTitle\"> \"</span>\n                      </div>\n                      <div className=\"storeDesc\">{desc}</div>\n                    </Desc>\n                    <MoreBtn>\n                      <span\n                        className=\"seeStoreInfo\"\n                        onClick={() =>\n                          history.push(`/store-detail/${store_id}`)\n                        }\n                      >\n                        맛집 구경하기\n                      </span>\n                      <IoIosAddCircle className=\"btnIcon\" />\n                    </MoreBtn>\n                  </CardEach>\n                )\n              )}\n          </Slider>\n        </CardWrapper>\n      </Container>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 55rem;\n  background-color: ${({ theme }) => theme.mentorBack};\n  line-height: 1.3;\n`;\n\nconst Container = styled.div`\n  margin: 5rem auto;\n  padding-top: 3rem;\n  width: 65rem;\n`;\n\nconst Header = styled.section`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-bottom: 1.5rem;\n`;\n\nconst Title = styled.h2`\n  width: 55rem;\n  font-size: 2.5rem;\n  letter-spacing: 0.4rem;\n`;\n\nconst Line = styled.div`\n  margin-right: 1rem;\n  width: 100%;\n  height: 1.25rem;\n  border-top: 2px solid ${({ theme }) => theme.borderGray};\n`;\n\nconst Arrow = styled.div`\n  cursor: pointer;\n  display: flex;\n\n  .arrow {\n    width: 2.5rem;\n    height: 2.5rem;\n    background-color: #0000000d;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .left {\n    margin-right: 0.5rem;\n  }\n\n  .right {\n  }\n\n  .arrowIcon {\n    width: 50%;\n    height: 50%;\n    color: ${({ theme }) => theme.buttonGray};\n  }\n`;\n\nconst CardWrapper = styled.div``;\n\nconst CardEach = styled.div`\n  position: relative;\n  float: left;\n  width: 33.33%;\n  height: 40rem;\n  padding-right: 1rem;\n  outline: none;\n`;\n\nconst Profile = styled.section`\n  padding: 1.25rem;\n\n  img {\n    border-radius: 50%;\n    width: 15rem;\n    height: 15rem;\n  }\n\n  .name {\n    font-size: 1.3rem;\n    font-weight: 900;\n    line-height: 1.14;\n    margin-top: 1.94rem;\n  }\n\n  .position {\n    margin-top: 0.6rem;\n    font-size: 1rem;\n    line-height: 1.07;\n  }\n`;\n\nconst Desc = styled.section`\n  line-break: anywhere;\n  padding: 1.25rem 1.13rem;\n  line-height: 1.88;\n  margin-bottom: 2.25rem;\n\n  .storeHeader {\n    .decoTitle {\n    }\n    .storeTitle {\n      font-weight: 900;\n      font-size: 1.15rem;\n    }\n  }\n`;\n\nconst MoreBtn = styled.span`\n  cursor: pointer;\n  font-size: 1.2rem;\n  margin: 2.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 7rem;\n  height: 1.5rem;\n  position: absolute;\n  bottom: 0;\n  right: 0rem;\n\n  .btnIcon {\n    font-size: 1.3rem;\n  }\n`;\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/LoginForm.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Nav.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/GoogleLoginComponent.tsx",["244","245","246","247","248","249","250","251"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { API } from \"../config\";\nimport {\n  setSignupActive,\n  setLoginActive,\n  setFirstLogin\n} from \"../store/actions\";\n\nexport default function GoogleLoginComponent() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // 구글 로그인 백엔드 통신 확인 후, 필요여부 재확인 예정\n  const getGoogleOAuth2 = async () => {\n    const oAuth2 = await localStorage.getItem(\n      \"oauth2_ss::http://localhost:3000::1::DEFAULT::_ss_\"\n    );\n  };\n\n  const responseGoogle = (response: any) => {\n    const { accessToken } = response;\n\n    axios\n      .post(`${API}/user/login/social`, \"data\", {\n        headers: {\n          Authorization: accessToken\n        }\n      })\n      .then((res: any) => {\n        localStorage.setItem(\"token\", res.data.Authorization);\n        localStorage.setItem(\"user_id_number\", res.data.user_id);\n        localStorage.setItem(\"isAuthenticated\", \"true\");\n\n        if (res.data.FRIST_VISIT === true) {\n          alert(\"구글 첫 로그인입니다. 회원가입을 해주세요.\");\n          dispatch(setFirstLogin(true));\n          dispatch(setSignupActive(true));\n          dispatch(setLoginActive(false));\n        } else {\n          dispatch(setLoginActive(false));\n          history.push(\"/\");\n          alert(\"구글 로그인 되었습니다.\");\n        }\n      })\n      .catch((err: any) => {\n        console.log(\"ERRORS! ===>\", err);\n        alert(\"구글 로그인에 Error가 발생하였습니다.\");\n      });\n  };\n\n  return (\n    <Container>\n      <GoogleLogin\n        render={(renderProps) => (\n          <button\n            onClick={renderProps.onClick}\n            className=\"googleLogin\"\n            disabled={renderProps.disabled}\n          >\n            구글로 로그인하기\n          </button>\n        )}\n        clientId=\"675033028389-t4ff8ilfoffg5f3pcrkrcg88tqvqisv7.apps.googleusercontent.com\"\n        buttonText=\"구글로 로그인하기\"\n        onSuccess={responseGoogle}\n        onFailure={(err) => console.log(\"Google Error\", err)}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  font-family: sans-serif;\n  margin-top: 2em;\n  margin-left: 0.7em;\n  width: 28.6em;\n  font-size: 1.15em;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 3.5em;\n  text-align: center;\n  cursor: pointer;\n\n  .googleLogin {\n    outline: none;\n    border: 2px solid ${({ theme }) => theme.mainYellow};\n    background-color: ${({ theme }) => theme.lightYellow};\n    font-size: 1.05rem;\n    font-weight: 700;\n    color: black;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/DeleteCommentModal.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/SignupForm.tsx",["252"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\ninterface IProps {\n  handleChange: (e: any) => void;\n  submitSingup: (event: any, type: string) => Promise<void>;\n}\n\ninterface StateForStyle {\n  short?: boolean;\n  needSpace?: boolean;\n}\n\nexport default function SignupForm({ handleChange, submitSingup }: IProps) {\n  const firstGoogle = useSelector(\n    ({ setFirstReducer }) => setFirstReducer.first\n  );\n\n  return (\n    <Container>\n      <Title>회원가입</Title>\n      <InfoSection\n        onSubmit={(event) =>\n          submitSingup(event, firstGoogle ? \"login/google\" : \"login\")\n        }\n      >\n        <BlockWrapper>\n          <Subject short={true}>기수</Subject>\n          <Input\n            type=\"number\"\n            name=\"number\"\n            placeholder=\"숫자만!\"\n            onChange={handleChange}\n            required\n            short={true}\n          ></Input>\n          <Subject short={true} needSpace={true}>\n            이름\n          </Subject>\n          <Input\n            type=\"text\"\n            name=\"userName\"\n            placeholder=\"전체이름!\"\n            onChange={handleChange}\n            required\n            short={true}\n          ></Input>\n        </BlockWrapper>\n        <BlockWrapper>\n          <Subject>이메일</Subject>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            required\n            placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\n            disabled={firstGoogle ? true : false}\n            onChange={handleChange}\n          ></Input>\n        </BlockWrapper>\n        <BlockWrapper>\n          <Subject>비밀번호</Subject>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            required\n            placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\n            disabled={firstGoogle ? true : false}\n            onChange={handleChange}\n          ></Input>\n        </BlockWrapper>\n        <BlockWrapper>\n          <Subject>비밀번호 확인</Subject>\n          <Input\n            type=\"password\"\n            name=\"repassword\"\n            required\n            placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\n            disabled={firstGoogle ? true : false}\n            onChange={handleChange}\n          ></Input>\n        </BlockWrapper>\n        <Button\n          type=\"submit\"\n          value=\"회원가입\"\n          className=\"button\"\n          onSubmit={(event) =>\n            submitSingup(event, firstGoogle ? \"login/google\" : \"login\")\n          }\n        ></Button>\n      </InfoSection>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 2em 2.5em;\n`;\n\nconst Title = styled.h1`\n  color: ${({ theme }) => theme.mainYellow};\n  height: 1em;\n  margin-left: 1rem;\n  text-align: center;\n  font-size: 6em;\n  font-weight: 900;\n  margin-bottom: 0.5em;\n  letter-spacing: 0.2em;\n`;\n\nconst InfoSection = styled.form`\n  font-family: \"Noto Sans KR\";\n  margin: 0 2.5em;\n  height: 20em;\n`;\n\nconst BlockWrapper = styled.div`\n  margin: 2em 0;\n  height: 2.5em;\n\n  display: flex;\n  align-items: center;\n  .button {\n    background-color: ${({ theme }) => theme.lightYellow};\n  }\n`;\n\nconst Subject = styled.div<StateForStyle>`\n  font-family: sans-serif;\n  text-align: center;\n  font-size: 1.15em;\n  font-weight: 500;\n  width: 4.5em;\n  margin-right: 1.5em;\n  margin-left: ${({ needSpace }) => (needSpace ? \"1.5em\" : \"0\")};\n`;\n\nconst Input = styled.input<StateForStyle>`\n  width: ${({ short }) => (short ? \"8.8em\" : \"28em\")};\n  height: 4em;\n  border: 2px solid ${({ theme }) => theme.mainYellow};\n`;\n\nconst Button = styled.input`\n  outline: none;\n  border: 2px solid ${({ theme }) => theme.mainYellow};\n  margin-top: 3em;\n  margin-left: 10rem;\n  width: 12em;\n  font-size: 1.15rem;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 3em;\n  text-align: center;\n  background-color: ${({ theme }) => theme.lightYellow};\n  cursor: pointer;\n`;\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Signup.tsx",["253","254"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { API } from \"../config\";\nimport { SignupForm } from \"./index\";\n\nexport default function Signup() {\n  const [user, setUser] = useState({\n    number: null,\n    userName: null,\n    email: null,\n    password: null,\n    repassword: null\n  });\n\n  const googleSignup = useSelector(\n    ({ setFirstReducer }) => setFirstReducer.first\n  );\n\n  const handleChange = (e: any) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const isValidateEmail = (value: any) => {\n    let email = value;\n    let regExp = /^[0-9a-zA-Z]{3}([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]{2,3}([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/;\n    if (!regExp.test(email)) {\n      alert(\"이메일형식이 올바르지 않습니다.\");\n      return false;\n    }\n    return true;\n  };\n\n  const isValidatePassword = (value: any) => {\n    let password = value;\n    let regExp = /^.{6}/;\n    if (!regExp.test(password)) {\n      alert(\"비밀번호는 6글자 이상이어야 합니다.\");\n      return false;\n    }\n    return true;\n  };\n\n  const submitSingup = async (event: any, type: string) => {\n    event.preventDefault();\n\n    switch (type) {\n      case \"login\":\n        const checkValidation = await Promise.all([\n          isValidateEmail(user.email),\n          isValidatePassword(user.password)\n        ]).then((res) => res);\n\n        const isValid = !checkValidation.some((bool) => !bool);\n\n        if (isValid) {\n          if (user.password === user.repassword || !user.password) {\n            const body = {\n              number: user.number,\n              name: user.userName,\n              email: user.email,\n              password: user.password\n            };\n            axios\n              .post(`${API}/user/signup`, JSON.stringify({ ...body }))\n              .then((res) => {\n                if (res.data.MESSAGE === \"USER_SIGNUP_SUCCESS\") {\n                  localStorage.setItem(\"token\", res.data.Authorization);\n                  localStorage.setItem(\"user_id_number\", res.data.user_id);\n                  localStorage.isAuthenticated = true;\n                  alert(\"회원가입과 로그인이 완료되었습니다. :-)\");\n                  window.location.reload();\n                } else {\n                  alert(\"회원가입이 완료되지 않았습니다.\");\n                }\n              })\n              .catch((err) =>\n                console.log(\"회원가입 통신이 원활하지 않습니다.\", err)\n              );\n          } else {\n            alert(\n              \"재입력한 비밀번호가 일치하지 않습니다. 비밀번호를 다시 입력해주세요.\"\n            );\n          }\n        }\n        break;\n      case \"login/google\":\n        const body = {\n          number: user.number,\n          name: user.userName\n        };\n        axios\n          .post(`${API}/user/signup/google`, JSON.stringify({ ...body }), {\n            headers: {\n              Authorization: localStorage.getItem(\"token\")\n            }\n          })\n          .then((res) => {\n            if (res.data.MESSAGE === \"UPDATE_SUCCESS\") {\n              alert(\"회원가입이 완료되었습니다. :-)\");\n              localStorage.isAuthenticated = true;\n              window.location.reload();\n            } else {\n              alert(\"구글 회원가입이 완료되지 않았습니다.\");\n            }\n          })\n          .catch((err) =>\n            console.log(\"구글 회원가입 통신이 원활하지 않습니다.\", err)\n          );\n        break;\n      default:\n        break;\n    }\n  };\n\n  const props = { handleChange, submitSingup };\n\n  return <SignupForm {...props} />;\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/EditCommentModal.tsx",[],{"ruleId":"255","severity":1,"message":"256","line":5,"column":10,"nodeType":"257","messageId":"258","endLine":5,"endColumn":16},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"255","severity":1,"message":"263","line":13,"column":9,"nodeType":"257","messageId":"258","endLine":13,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":73,"column":11,"nodeType":"266","endLine":73,"endColumn":45},{"ruleId":"264","severity":1,"message":"265","line":104,"column":11,"nodeType":"266","endLine":104,"endColumn":49},{"ruleId":"264","severity":1,"message":"265","line":108,"column":13,"nodeType":"266","endLine":108,"endColumn":42},{"ruleId":"264","severity":1,"message":"265","line":133,"column":13,"nodeType":"266","endLine":133,"endColumn":42},{"ruleId":"264","severity":1,"message":"265","line":158,"column":13,"nodeType":"266","endLine":158,"endColumn":42},{"ruleId":"264","severity":1,"message":"265","line":74,"column":11,"nodeType":"266","endLine":74,"endColumn":49},{"ruleId":"255","severity":1,"message":"267","line":8,"column":3,"nodeType":"257","messageId":"258","endLine":8,"endColumn":17},{"ruleId":"255","severity":1,"message":"268","line":11,"column":22,"nodeType":"257","messageId":"258","endLine":11,"endColumn":27},{"ruleId":"255","severity":1,"message":"269","line":18,"column":10,"nodeType":"257","messageId":"258","endLine":18,"endColumn":18},{"ruleId":"255","severity":1,"message":"270","line":19,"column":8,"nodeType":"257","messageId":"258","endLine":19,"endColumn":21},{"ruleId":"255","severity":1,"message":"271","line":20,"column":8,"nodeType":"257","messageId":"258","endLine":20,"endColumn":23},{"ruleId":"255","severity":1,"message":"272","line":37,"column":10,"nodeType":"257","messageId":"258","endLine":37,"endColumn":15},{"ruleId":"264","severity":1,"message":"265","line":264,"column":11,"nodeType":"266","endLine":264,"endColumn":29},{"ruleId":"255","severity":1,"message":"273","line":6,"column":10,"nodeType":"257","messageId":"258","endLine":6,"endColumn":14},{"ruleId":"264","severity":1,"message":"265","line":74,"column":11,"nodeType":"266","endLine":74,"endColumn":29},{"ruleId":"255","severity":1,"message":"274","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":16},{"ruleId":"255","severity":1,"message":"273","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"265","line":45,"column":11,"nodeType":"266","endLine":45,"endColumn":29},{"ruleId":"255","severity":1,"message":"275","line":9,"column":10,"nodeType":"257","messageId":"258","endLine":9,"endColumn":15},{"ruleId":"255","severity":1,"message":"267","line":14,"column":3,"nodeType":"257","messageId":"258","endLine":14,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":273,"column":15,"nodeType":"266","endLine":273,"endColumn":81},{"ruleId":"255","severity":1,"message":"276","line":593,"column":7,"nodeType":"257","messageId":"258","endLine":593,"endColumn":16},{"ruleId":"255","severity":1,"message":"277","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":55,"column":7,"nodeType":"280","endLine":55,"endColumn":10},{"ruleId":"255","severity":1,"message":"281","line":57,"column":9,"nodeType":"257","messageId":"258","endLine":57,"endColumn":25},{"ruleId":"264","severity":1,"message":"265","line":148,"column":17,"nodeType":"266","endLine":151,"endColumn":19},{"ruleId":"255","severity":1,"message":"282","line":26,"column":9,"nodeType":"257","messageId":"258","endLine":26,"endColumn":18},{"ruleId":"255","severity":1,"message":"283","line":30,"column":9,"nodeType":"257","messageId":"258","endLine":30,"endColumn":17},{"ruleId":"255","severity":1,"message":"284","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"284","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"274","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":16},{"ruleId":"255","severity":1,"message":"285","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":13},{"ruleId":"255","severity":1,"message":"286","line":5,"column":10,"nodeType":"257","messageId":"258","endLine":5,"endColumn":13},{"ruleId":"255","severity":1,"message":"287","line":30,"column":9,"nodeType":"257","messageId":"258","endLine":30,"endColumn":16},{"ruleId":"255","severity":1,"message":"273","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"288","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":14},{"ruleId":"255","severity":1,"message":"275","line":12,"column":10,"nodeType":"257","messageId":"258","endLine":12,"endColumn":15},{"ruleId":"264","severity":1,"message":"265","line":99,"column":23,"nodeType":"266","endLine":99,"endColumn":42},{"ruleId":"255","severity":1,"message":"289","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":23},{"ruleId":"255","severity":1,"message":"284","line":1,"column":25,"nodeType":"257","messageId":"258","endLine":1,"endColumn":33},{"ruleId":"255","severity":1,"message":"290","line":1,"column":35,"nodeType":"257","messageId":"258","endLine":1,"endColumn":44},{"ruleId":"255","severity":1,"message":"291","line":4,"column":17,"nodeType":"257","messageId":"258","endLine":4,"endColumn":27},{"ruleId":"255","severity":1,"message":"292","line":4,"column":29,"nodeType":"257","messageId":"258","endLine":4,"endColumn":47},{"ruleId":"255","severity":1,"message":"293","line":4,"column":49,"nodeType":"257","messageId":"258","endLine":4,"endColumn":62},{"ruleId":"255","severity":1,"message":"294","line":19,"column":9,"nodeType":"257","messageId":"258","endLine":19,"endColumn":24},{"ruleId":"255","severity":1,"message":"295","line":20,"column":11,"nodeType":"257","messageId":"258","endLine":20,"endColumn":17},{"ruleId":"255","severity":1,"message":"290","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"290","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"296","line":16,"column":9,"nodeType":"257","messageId":"258","endLine":16,"endColumn":21},"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["297"],"no-negated-in-lhs",["298"],"'feather' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setLoginActive' is defined but never used.","'Quill' is defined but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'ReactHtmlParser' is defined but never used.","'title' is assigned a value but never used.","'Link' is defined but never used.","'COLORS' is defined but never used.","'mixin' is defined but never used.","'ModifyBtn' is assigned a value but never used.","'StoreCard2' is defined but never used.","react-hooks/exhaustive-deps","The \"a\" literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'changeLikedState' is assigned a value but never used.","'heartLike' is assigned a value but never used.","'iconLike' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'API' is defined but never used.","'history' is assigned a value but never used.","'styled' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'AxiosError' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'AxiosResponse' is defined but never used.","'getGoogleOAuth2' is assigned a value but never used.","'oAuth2' is assigned a value but never used.","'googleSignup' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]