[{"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/index.tsx":"1","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/routes.tsx":"2","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/index.ts":"3","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/googleFirstLogin.ts":"4","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/registerModal.ts":"5","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/index.ts":"6","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/index.ts":"7","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/index.ts":"8","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/themeColor.ts":"9","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/mixin.ts":"10","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/globalStyle.ts":"11","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/MentorDetailContainer.tsx":"12","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/NavContainer.tsx":"13","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/KobbubakDetailContainer.tsx":"14","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/AboutPage.tsx":"15","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/FeatherDetail.tsx":"16","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/MainPage.tsx":"17","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostDetail.tsx":"18","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostList.tsx":"19","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/AlcoholDetail.tsx":"20","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/StoreList.tsx":"21","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/TodayRandom.tsx":"22","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/StoreDetail.tsx":"23","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostWriting.tsx":"24","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/index.ts":"25","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/config.ts":"26","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/StoreCard.tsx":"27","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/PostReply.tsx":"28","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/Posts.tsx":"29","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/StoreCard2.tsx":"30","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/KobbubakTheme.tsx":"31","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/MetorTheme.tsx":"32","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/registerModal.ts":"33","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/googleFirstLogin.ts":"34","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/index.ts":"35","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Footer.tsx":"36","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/LoginForm.tsx":"37","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/DeleteCommentModal.tsx":"38","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Login.tsx":"39","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/EditCommentModal.tsx":"40","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Signup.tsx":"41","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Nav.tsx":"42","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/PeoplePick.tsx":"43","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/GoogleLoginComponent.tsx":"44","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/SignupForm.tsx":"45"},{"size":472,"mtime":1613742991744,"results":"46","hashOfConfig":"47"},{"size":1830,"mtime":1614483267968,"results":"48","hashOfConfig":"47"},{"size":209,"mtime":1612692489945,"results":"49","hashOfConfig":"47"},{"size":475,"mtime":1614483267969,"results":"50","hashOfConfig":"47"},{"size":449,"mtime":1612692489946,"results":"51","hashOfConfig":"47"},{"size":86,"mtime":1610956706588,"results":"52","hashOfConfig":"47"},{"size":205,"mtime":1612692489932,"results":"53","hashOfConfig":"47"},{"size":546,"mtime":1614483267968,"results":"54","hashOfConfig":"47"},{"size":254,"mtime":1612692489947,"results":"55","hashOfConfig":"47"},{"size":637,"mtime":1610956706589,"results":"56","hashOfConfig":"47"},{"size":1518,"mtime":1614483267969,"results":"57","hashOfConfig":"47"},{"size":632,"mtime":1614568535123,"results":"58","hashOfConfig":"47"},{"size":813,"mtime":1612692489932,"results":"59","hashOfConfig":"47"},{"size":653,"mtime":1614568439318,"results":"60","hashOfConfig":"47"},{"size":109,"mtime":1610956706582,"results":"61","hashOfConfig":"47"},{"size":3197,"mtime":1614483267950,"results":"62","hashOfConfig":"47"},{"size":6476,"mtime":1614483267954,"results":"63","hashOfConfig":"47"},{"size":11676,"mtime":1614484550594,"results":"64","hashOfConfig":"47"},{"size":3883,"mtime":1614483267958,"results":"65","hashOfConfig":"47"},{"size":5974,"mtime":1614483267948,"results":"66","hashOfConfig":"47"},{"size":3136,"mtime":1614483267964,"results":"67","hashOfConfig":"47"},{"size":9020,"mtime":1614483267965,"results":"68","hashOfConfig":"47"},{"size":17677,"mtime":1614484550596,"results":"69","hashOfConfig":"47"},{"size":2437,"mtime":1614483267959,"results":"70","hashOfConfig":"47"},{"size":69,"mtime":1612692489943,"results":"71","hashOfConfig":"47"},{"size":95,"mtime":1614505116218,"results":"72","hashOfConfig":"47"},{"size":1453,"mtime":1613740540711,"results":"73","hashOfConfig":"47"},{"size":1444,"mtime":1613740540710,"results":"74","hashOfConfig":"47"},{"size":794,"mtime":1613740540710,"results":"75","hashOfConfig":"47"},{"size":1637,"mtime":1614483267967,"results":"76","hashOfConfig":"47"},{"size":615,"mtime":1614483267966,"results":"77","hashOfConfig":"47"},{"size":555,"mtime":1614483267967,"results":"78","hashOfConfig":"47"},{"size":286,"mtime":1612692489944,"results":"79","hashOfConfig":"47"},{"size":154,"mtime":1612692489943,"results":"80","hashOfConfig":"47"},{"size":546,"mtime":1612692489929,"results":"81","hashOfConfig":"47"},{"size":93,"mtime":1610956706580,"results":"82","hashOfConfig":"47"},{"size":2686,"mtime":1614484550591,"results":"83","hashOfConfig":"47"},{"size":2330,"mtime":1613740540703,"results":"84","hashOfConfig":"47"},{"size":1752,"mtime":1614484550590,"results":"85","hashOfConfig":"47"},{"size":2542,"mtime":1614484550589,"results":"86","hashOfConfig":"47"},{"size":3737,"mtime":1614484550593,"results":"87","hashOfConfig":"47"},{"size":5107,"mtime":1614483267944,"results":"88","hashOfConfig":"47"},{"size":5599,"mtime":1614483267944,"results":"89","hashOfConfig":"47"},{"size":3055,"mtime":1614483267943,"results":"90","hashOfConfig":"47"},{"size":4088,"mtime":1614484550594,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"l5fblu",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"94"},"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/index.tsx",[],["200","201"],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/routes.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/googleFirstLogin.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/reducers/registerModal.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/themeColor.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/mixin.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/styles/globalStyle.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/MentorDetailContainer.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/NavContainer.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/containers/KobbubakDetailContainer.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/AboutPage.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/FeatherDetail.tsx",["202"],"import React, { useEffect, useState } from \"react\";\nimport { API } from \"../config\";\nimport { useDispatch } from \"react-redux\";\nimport { setSignupActive, setFirstLogin } from \"../store/actions\";\nimport StoreCard2 from \"./childComponents/StoreCard2\";\nimport axios from \"axios\";\nimport \"./FeatherDetail.scss\";\n\ninterface UserData {\n  featherFood: any;\n}\n\nexport default function FeatherDetail() {\n  const [featherFood, setFeatherFood] = useState<UserData | any>([]);\n  const feather = \"feather\";\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .get(`${API}/store/list?tag=${feather}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          console.log(\"res\", res);\n          setFeatherFood(res.data.store_list.feather);\n        });\n    } else {\n      axios.get(`${API}/store/list?tag=${feather}`).then((res) => {\n        setFeatherFood(res.data.store_list.feather);\n      });\n    }\n  }, []);\n\n  const changeLikedState = (id: any, type: string) => {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .post(`${API}/store/like/${id}`, \"data\", {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          if (res.data.MESSAGE === \"NEED_USER_NAME\") {\n            alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\n            dispatch(setFirstLogin(true));\n            dispatch(setSignupActive(true));\n          } else {\n            setFeatherFood(\n              featherFood?.map((data: any) => {\n                if (data.id === id) {\n                  if (data.like_state) {\n                    return {\n                      ...data,\n                      like_state: !data.like_state,\n                      like_count: data.like_count - 1\n                    };\n                  } else {\n                    return {\n                      ...data,\n                      like_state: !data.like_state,\n                      like_count: data.like_count + 1\n                    };\n                  }\n                } else {\n                  return data;\n                }\n              })\n            );\n            console.log(\"좋아요 통신이 완료되었습니다.\", res);\n          }\n        })\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n  return (\n    <>\n      <div className=\"feather\">\n        <div className=\"logoBox\">\n          <img src=\"./images/gitfoodLogo.png\" />\n        </div>\n        <div className=\"featherFood\">\n          {featherFood?.map((feather: any) => {\n            return (\n              <StoreCard2\n                id={feather.id}\n                name={feather.name}\n                type={\"soju\"}\n                image={feather.image}\n                likeCount={feather.like_count}\n                likeState={feather.like_state}\n                changeLikedState={changeLikedState}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/MainPage.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostDetail.tsx",["203","204","205","206"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"../config\";\nimport { EditCommentModal, DeleteCommentModal } from \"../components\";\nimport {\n  setSignupActive,\n  setLoginActive,\n  setFirstLogin\n} from \"../store/actions\";\nimport ReactQuill from \"react-quill\"; // Typescript\nimport axios from \"axios\";\nimport Pagination from \"react-js-pagination\";\nimport wemeok from \"../images/wemeoktalk3.png\";\nimport PostReply from \"../pages/childComponents/PostReply\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-quill/dist/quill.bubble.css\";\nimport \"./PostDetail.scss\";\n\ninterface UserData {\n  info: any;\n  items: any[];\n}\n\nexport default function PostDetail({ match }: any) {\n  const [posts, setPosts] = useState<any>([]);\n  const [comments, setComments] = useState<any>([]);\n  const [comment, setComment] = useState<string>(\"\");\n  const [title, setTitle] = useState<any>({ newTitle: null });\n  const [postTitle, setPostTitle] = useState<any>(null);\n  const [postContent, setPostContent] = useState<any>(null);\n  const [editModal, setEditModal] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [commentText, setCommentText] = useState<UserData | any>({\n    newComment: null,\n    updatedComment: { id: null, content: \"기존댓글~~~\" }\n  });\n  const [activeInput, setActiveInput] = useState(false);\n  const [countComments, setCountComments] = useState(0);\n  const [activePage, setActivePage] = useState<any>(1);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const modules = {\n    toolbar: [\n      [{ header: [1, 2, 3, 4, false] }],\n      [\"bold\", \"italic\", \"underline\", \"strike\"],\n      [\"clean\"]\n    ]\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const fetchPosts = async () => {\n      await axios\n        .get(`${API}/board/${match.params.id}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          console.log(\"test\", res.data);\n          setPosts(res.data.board_info);\n          setComments(res.data.board_comments);\n          setCountComments(res.data.count_comments);\n          setTitle(res.data.board_info[0].title);\n          setPostContent(res.data.board_info[0].content);\n        });\n    };\n    fetchPosts();\n  }, [match.params.id]);\n\n  const onChangeComment = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setComment(e.target.value);\n  };\n\n  const submitChangedComment = (crud: string, commentId: number) => {\n    if (localStorage.getItem(\"token\")) {\n      if (crud === \"INSERT\") {\n        axios\n          .post(\n            `${API}/board/${match.params.id}/comment`,\n            JSON.stringify({\n              comment\n            }),\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            if (res.data.MESSAGE === \"NEED_USER_NAME\") {\n              alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\n              dispatch(setFirstLogin(true));\n              dispatch(setSignupActive(true));\n            } else {\n              console.log(res);\n              window.location.reload();\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n\n      if (crud === \"UPDATE\") {\n        setEditModal(false);\n\n        axios\n          .patch(\n            `${API}/board/${match.params.id}/${commentId}`,\n            JSON.stringify({\n              comment: commentText.updatedComment.content\n            }),\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            window.location.reload();\n          })\n          .catch((err) => console.log(err));\n      }\n\n      if (crud === \"DELETE\") {\n        setDeleteModal(false);\n        axios\n          .delete(`${API}/board/${match.params.id}/${commentId}`, {\n            headers: {\n              Authorization: localStorage.getItem(\"token\")\n            }\n          })\n          .then((res) => {\n            window.location.reload();\n          })\n          .catch((err) => console.log(err));\n      }\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  const updateComment = (e: any) => {\n    const { value } = e.target;\n\n    setCommentText({\n      ...commentText,\n      updatedComment: {\n        ...commentText.updatedComment,\n        content: value\n      }\n    });\n  };\n\n  const clickEdit = (comment: any) => {\n    setEditModal(true);\n    setCommentText({\n      ...commentText,\n      updatedComment: {\n        id: comment.comment_id,\n        content: comment.comment_content\n      }\n    });\n  };\n\n  const clickDeleteComment = (commentId: any) => {\n    setDeleteModal(true);\n    setCommentText({\n      ...commentText,\n      updatedComment: {\n        ...commentText.updatedComment,\n        id: commentId\n      }\n    });\n  };\n\n  const patchPost = (): void => {\n    const data = {\n      title: postTitle,\n      content: postContent\n    };\n\n    axios.patch(`${API}/board/${match.params.id}`, JSON.stringify(data), {\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n    window.location.reload();\n  };\n\n  const deletePost = (): void => {\n    if (window.confirm(\"게시물을 삭제하시겠습까?\")) {\n      axios\n        .delete(`${API}/board/${match.params.id}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          history.push(\"/post-list\");\n        });\n    }\n  };\n\n  const handlePageChange = (pageNumber: any) => {\n    axios\n      .get(`${API}/board/${match.params.id}?offset=${(pageNumber - 1) * 5}`, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      })\n      .then((res) => {\n        setComments(res.data.board_comments);\n      });\n    setActivePage(pageNumber);\n  };\n\n  const changePostTitle = (e: any) => {\n    const { value } = e.target;\n    setPostTitle(value);\n  };\n\n  const changePostContent = (html: any) => {\n    setPostContent(html);\n  };\n  console.log(\"test\", postContent);\n  return (\n    <>\n      <div className=\"postDetail\">\n        <div className=\"weMeokTalkLogo\">\n          <img src={wemeok}></img>\n        </div>\n        <div className=\"weMeokTalkList\">\n          <div className=\"listDiv\">\n            {activeInput ? (\n              <>\n                <div className=\"editListDiv\">\n                  <div className=\"writingTitle\">\n                    <p>제목</p>\n                    <input\n                      type=\"text/html\"\n                      value={postTitle}\n                      onChange={changePostTitle}\n                    ></input>\n                  </div>\n                  <div className=\"solidLine\"></div>\n                  <div className=\"writerCreated\">\n                    <p className=\"wirter\">{posts[0]?.writer}</p>\n                    <p className=\"created\">{posts[0]?.created_at}</p>\n                  </div>\n                  <div className=\"writingCenter\">\n                    <p className=\"textBold\">내용</p>\n                    <ReactQuill\n                      bounds={\".quill\"}\n                      theme={\"snow\"}\n                      value={postContent}\n                      onChange={changePostContent}\n                      modules={modules}\n                    />\n                  </div>\n                  <div className=\"writerButton\">\n                    <button\n                      onClick={() => {\n                        patchPost();\n                        setActiveInput(false);\n                      }}\n                    >\n                      수정\n                    </button>\n                  </div>\n                </div>\n                <div className=\"solidLine\"></div>\n              </>\n            ) : (\n              <>\n                <div className=\"detailTitle\">\n                  <p className=\"titleBold\">제목</p>\n                  <p className=\"title\">{posts[0]?.title}</p>\n                </div>\n                <div className=\"solidLine\"></div>\n                <div className=\"writerCreated\">\n                  <p className=\"wirter\">{posts[0]?.writer}</p>\n                  <p className=\"created\">{posts[0]?.created_at}</p>\n                </div>\n                <div\n                  className=\"contentDiv\"\n                  dangerouslySetInnerHTML={{ __html: posts[0]?.content }}\n                />\n                {posts[0]?.writer_id ===\n                  Number(localStorage.getItem(\"user_id_number\")) && (\n                  <>\n                    <div className=\"editDeleteDiv\">\n                      <p\n                        className=\"edit\"\n                        onClick={() => {\n                          setActiveInput(true);\n                          setPostTitle(posts[0]?.title);\n                        }}\n                      >\n                        수정\n                      </p>\n\n                      <p className=\"delete\" onClick={deletePost}>\n                        삭제\n                      </p>\n                    </div>\n                  </>\n                )}\n                <div className=\"solidLine\"></div>\n                <div className=\"commentsInputDiv\">\n                  <p>댓글 ({countComments})</p>\n                  <input\n                    onKeyDown={(e) => {\n                      if (e.keyCode === 13) {\n                        submitChangedComment(\"INSERT\", 0);\n                        e.preventDefault();\n                      }\n                    }}\n                    maxLength={250}\n                    value={comment}\n                    onChange={onChangeComment}\n                  ></input>\n                  <span onClick={() => submitChangedComment(\"INSERT\", 0)}>\n                    등록\n                  </span>\n                </div>\n                {comments?.map((comments: any) => {\n                  return (\n                    <PostReply\n                      comments={comments}\n                      id={comments.comment_id}\n                      writer={comments.comment_writer}\n                      content={comments.comment_content}\n                      created_at={comments.comment_created_at}\n                      writer_id={comments.comment_writer_id}\n                      clickEdit={clickEdit}\n                      clickDeleteComment={clickDeleteComment}\n                    />\n                  );\n                })}\n                <Pagination\n                  activePage={activePage}\n                  itemsCountPerPage={5}\n                  totalItemsCount={countComments}\n                  pageRangeDisplayed={5}\n                  hideFirstLastPages\n                  itemClassPrev={\"prevPageText\"}\n                  itemClassNext={\"nextPageText\"}\n                  prevPageText={\"◀\"}\n                  nextPageText={\"▶\"}\n                  onChange={handlePageChange}\n                />\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {editModal && (\n        <EditCommentModal\n          editModal={editModal}\n          setEditModal={setEditModal}\n          updatedComment={commentText.updatedComment}\n          submitChangedComment={submitChangedComment}\n          updateComment={updateComment}\n        />\n      )}\n\n      {deleteModal && (\n        <DeleteCommentModal\n          deleteModal={deleteModal}\n          setDeleteModal={setDeleteModal}\n          submitChangedComment={submitChangedComment}\n          commentId={commentText.updatedComment.id}\n        />\n      )}\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostList.tsx",["207"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setSignupActive, setFirstLogin } from \"../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"../config\";\nimport Posts from \"./childComponents/Posts\";\nimport Pagination from \"react-js-pagination\";\nimport axios from \"axios\";\nimport wemeok from \"../images/wemeoktalk3.png\";\nimport \"./PostList.scss\";\n\ninterface PostData {\n  posts: any;\n}\nexport default function App() {\n  const [posts, setPosts] = useState<PostData | any>([]);\n  const [activePage, setActivePage] = useState<any>(1);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const fetchPosts = async () => {\n      await axios\n        .get(`${API}/board`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          setPosts(res.data);\n        })\n        .catch(function (error) {\n          if (error.response) {\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n          } else if (error.request) {\n            console.log(error.request);\n          } else {\n            console.log(\"Error\", error.message);\n          }\n          console.log(error.config);\n        });\n    };\n    fetchPosts();\n  }, []);\n\n  const handlePageChange = (pageNumber: any) => {\n    axios\n      .get(`${API}/board?offset=${(pageNumber - 1) * 5}`, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      })\n      .then((res) => {\n        setPosts(res.data);\n      });\n    setActivePage(pageNumber);\n  };\n\n  const loginCheck = () => {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .get(`${API}/board/write`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          if (res.data.MESSAGE === \"NEED_USER_NAME\") {\n            alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\n            dispatch(setFirstLogin(true));\n            dispatch(setSignupActive(true));\n          } else {\n            history.push(\"./post-writing\");\n          }\n        });\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"postList\">\n        <div className=\"weMeokTalkLogo\">\n          <img src={wemeok}></img>\n        </div>\n        <div className=\"weMeokTalkList\">\n          <div className=\"listDiv\">\n            <div className=\"listTitleBold\">\n              <p className=\"titleBold\">제목</p>\n              <p className=\"writerBold\">작성자</p>\n              <p className=\"createdAtBold\">등록일</p>\n              <p className=\"commentsBold\">댓글</p>\n            </div>\n            <div className=\"listSolidBold\"></div>\n            {posts.board_list?.map((post: any) => {\n              return (\n                <Posts\n                  id={post.id}\n                  title={post.title}\n                  writer={post.writer}\n                  created_at={post.created_at}\n                  comments={post.comments}\n                />\n              );\n            })}\n            <div className=\"writerButton\">\n              <button onClick={loginCheck}>글쓰기</button>\n            </div>\n            <Pagination\n              activePage={activePage}\n              itemsCountPerPage={5}\n              totalItemsCount={posts.total_board}\n              pageRangeDisplayed={5}\n              hideFirstLastPages\n              itemClassPrev={\"prevPageText\"}\n              itemClassNext={\"nextPageText\"}\n              prevPageText={\"◀\"}\n              nextPageText={\"▶\"}\n              onChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/AlcoholDetail.tsx",["208","209","210","211"],"import React, { useEffect, useState } from \"react\";\nimport { API } from \"../config\";\nimport { useDispatch } from \"react-redux\";\nimport { setSignupActive, setFirstLogin } from \"../store/actions\";\nimport axios from \"axios\";\nimport StoreCard2 from \"./childComponents/StoreCard2\";\nimport Slider from \"react-slick\";\nimport \"./AlcoholDetail.scss\";\nimport \"./MainPage.scss\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\ninterface UserData {\n  alcoholData: any;\n}\nexport default function AlcoholDetail({ match, props }: any) {\n  const [alcoholData, setAlcoholData] = useState<UserData | any>([]);\n  const alcohol = \"alcohol\";\n  const dispatch = useDispatch();\n\n  const setting = {\n    dots: false,\n    infinite: true,\n    speed: 1000,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    arrows: true,\n    nextArrow: (\n      <div>\n        <img\n          alt=\"rightArrow\"\n          className=\"next-slick-arrow\"\n          src=\"./images/right-arrow.png\"\n        ></img>\n      </div>\n    ),\n    prevArrow: (\n      <div>\n        <img\n          alt=\"leftArrow\"\n          className=\"prev-slick-arrow\"\n          src=\"./images/left-arrow.png\"\n        ></img>\n      </div>\n    ),\n    className: \"slides\"\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .get(`${API}/store/list?tag=${alcohol}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          console.log(\"123\", res.data.store_list);\n          setAlcoholData(res.data.store_list);\n        });\n    } else {\n      axios.get(`${API}/store/list?tag=${alcohol}`).then((res) => {\n        setAlcoholData(res.data.store_list);\n      });\n    }\n  }, []);\n\n \n\n  const changeLikedState = (id: any, type: string) => {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .post(`${API}/store/like/${id}`, \"data\", {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          if (res.data.MESSAGE === \"NEED_USER_NAME\") {\n            alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\n            dispatch(setFirstLogin(true));\n            dispatch(setSignupActive(true));\n          } else {\n            setAlcoholData({\n              ...alcoholData,\n              [type]: alcoholData[type].map((data: any) => {\n                if (data.id === id) {\n                  if (data.like_state) {\n                    return {\n                      ...data,\n                      like_state: !data.like_state,\n                      like_count: data.like_count - 1\n                    };\n                  } else {\n                    return {\n                      ...data,\n                      like_state: !data.like_state,\n                      like_count: data.like_count + 1\n                    };\n                  }\n                } else {\n                  return data;\n                }\n              })\n            });\n            console.log(\"좋아요 통신이 완료되었습니다.\", res);\n          }\n        })\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"alcohol\">\n        <div className=\"logoBox\">\n          <img src=\"./images/alcoholLogo.png\" />\n        </div>\n        <div className=\"sojuDiv\">\n          <div className=\"sojuIcon\">\n            <img src=\"./images/soju.png\"></img>\n            <p>소주와</p>\n          </div>\n        </div>\n        <div className=\"sojuListDiv\">\n          <div className=\"sojuCardDiv\">\n            <Slider {...setting}>\n              {alcoholData.soju?.map((alcohol: any) => {\n                return (\n                  <StoreCard2\n                    id={alcohol.id}\n                    name={alcohol.name}\n                    type={\"soju\"}\n                    image={alcohol.image}\n                    likeCount={alcohol.like_count}\n                    likeState={alcohol.like_state}\n                    changeLikedState={changeLikedState}\n                  />\n                );\n              })}\n            </Slider>\n          </div>\n        </div>\n        <div className=\"beerDiv\">\n          <div className=\"beerIcon\">\n            <img src=\"./images/beer.png\"></img>\n            <p>맥주와</p>\n          </div>\n        </div>\n        <div className=\"beerListDiv\">\n          <div className=\"beerCardDiv\">\n            <Slider {...setting}>\n              {alcoholData.beer?.map((alcohol: any) => {\n                return (\n                  <StoreCard2\n                    id={alcohol.id}\n                    name={alcohol.name}\n                    type={\"beer\"}\n                    image={alcohol.image}\n                    likeCount={alcohol.like_count}\n                    likeState={alcohol.like_state}\n                    changeLikedState={changeLikedState}\n                  />\n                );\n              })}\n            </Slider>\n          </div>\n        </div>\n        <div className=\"riceWineDiv\">\n          <div className=\"riceWineIcon\">\n            <img src=\"./images/sake.png\"></img>\n            <p>막걸리와</p>\n          </div>\n        </div>\n        <div className=\"riceWineDiv\">\n          <div className=\"riceWineCardDiv\">\n            <Slider {...setting}>\n              {alcoholData.makgeolli?.map((alcohol: any) => {\n                return (\n                  <StoreCard2\n                    id={alcohol.id}\n                    type={\"makgeolli\"}\n                    name={alcohol.name}\n                    image={alcohol.image}\n                    likeCount={alcohol.like_count}\n                    likeState={alcohol.like_state}\n                    changeLikedState={changeLikedState}\n                  />\n                );\n              })}\n            </Slider>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/StoreList.tsx",["212","213"],"import React, { useEffect, useState } from \"react\";\nimport { API } from \"../config\";\nimport { useDispatch } from \"react-redux\";\nimport { setSignupActive, setFirstLogin } from \"../store/actions\";\nimport StoreCard2 from \"./childComponents/StoreCard2\";\nimport axios from \"axios\";\nimport \"./StoreList.scss\";\n\ninterface UserData {\n  storeList: any;\n}\n\nexport default function StoreList() {\n  const [storeList, setStoreList] = useState<UserData | any>([]);\n  const feather = \"feather\";\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .get(`${API}/store/list`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          console.log(\"res\", res);\n          setStoreList(res.data.store_list);\n        });\n    } else {\n      axios.get(`${API}/store/list`).then((res) => {\n        setStoreList(res.data.store_list);\n      });\n    }\n  }, []);\n\n  const changeLikedState = (id: any, type: string) => {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .post(`${API}/store/like/${id}`, \"data\", {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          if (res.data.MESSAGE === \"NEED_USER_NAME\") {\n            alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\n            dispatch(setFirstLogin(true));\n            dispatch(setSignupActive(true));\n          } else {\n            setStoreList(\n              storeList?.map((data: any) => {\n                if (data.id === id) {\n                  if (data.like_state) {\n                    return {\n                      ...data,\n                      like_state: !data.like_state,\n                      like_count: data.like_count - 1\n                    };\n                  } else {\n                    return {\n                      ...data,\n                      like_state: !data.like_state,\n                      like_count: data.like_count + 1\n                    };\n                  }\n                } else {\n                  return data;\n                }\n              })\n            );\n            console.log(\"좋아요 통신이 완료되었습니다.\", res);\n          }\n        })\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"storeList\">\n        <div className=\"storeListLogo\">\n          <img src=\"./images/storelist.png\"></img>\n        </div>\n        <div className=\"storeFood\">\n          {storeList?.map((feather: any) => {\n            return (\n              <StoreCard2\n                id={feather.id}\n                name={feather.name}\n                image={feather.image}\n                type={\"soju\"}\n                likeCount={feather.like_count}\n                likeState={feather.like_state}\n                changeLikedState={changeLikedState}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/TodayRandom.tsx",["214","215"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setSignupActive, setFirstLogin } from \"../store/actions\";\nimport { mixin } from \"../styles\";\nimport { API } from \"../config\";\nimport styled from \"styled-components\";\nimport StoreCard2 from \"./childComponents/StoreCard2\";\nimport axios from \"axios\";\n\ninterface UserData {\n  store: any;\n  clickedState: boolean;\n  againModal: boolean;\n}\n\ninterface StateForStyle {\n  visible?: boolean;\n}\n\nexport default function TodayRandom() {\n  const [store, setStore] = useState<UserData | any>({});\n  const [clickedState, setClickedState] = useState<UserData | boolean>(false);\n  const [againModal, setAgainModal] = useState(false);\n  const [restTime, setRestTime] = useState({ hour: 4, minute: 0 });\n  const dispatch = useDispatch();\n\n  const display = (value: any) => {\n    let now = new Date();\n    let time = now.getTime();\n    let expireTime = time + 14400000;\n    now.setTime(expireTime);\n\n    document.cookie = `randomStore=${value};expires=\"${now.toUTCString()}\";path=/`;\n    document.cookie = `randomStoreExpireTime=${expireTime};expires=“${now.toUTCString()}“;path=/`;\n  };\n\n  const getCookie = (name: string) => {\n    let value = document.cookie.match(\"(^|;) ?\" + name + \"=([^;]*)(;|$)\");\n    return value ? value[2] : null;\n  };\n\n  const getRandomStore = useCallback(() => {\n    const store = getCookie(\"randomStore\");\n\n    if (!store) {\n      axios\n        .get(`${API}/store/list?sort=random`)\n        .then((res: any) => {\n          setStore(res.data.store_list.random[0]);\n          setClickedState(true);\n          display(JSON.stringify(res.data.store_list.random[0]));\n        })\n        .catch((err: any) => console.log(\"Catched errors!\", err));\n    } else {\n      setStore(JSON.parse(store));\n      setClickedState(true);\n    }\n  }, [\"a\"]);\n\n  const changeLikedState = (id: any) => {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .post(`${API}/store/like/${id}`, \"data\", {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          if (res.data.MESSAGE === \"NEED_USER_NAME\") {\n            alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\n            dispatch(setFirstLogin(true));\n            dispatch(setSignupActive(true));\n          } else {\n            setStore(\n              store.like_state\n                ? {\n                    ...store,\n                    like_state: !store.like_state,\n                    like_count: store.like_count - 1\n                  }\n                : {\n                    ...store,\n                    like_state: !store.like_state,\n                    like_count: store.like_count + 1\n                  }\n            );\n            console.log(\"좋아요 통신이 완료되었습니다.\", res);\n          }\n        })\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  const getAgainRandomStore = () => {\n    if (getCookie(\"randomStore\")) {\n      setAgainModal(true);\n    } else {\n      getRandomStore();\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const store = getCookie(\"randomStore\");\n\n    if (store) {\n      setStore(JSON.parse(store));\n      setClickedState(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    let restTimer = () => {\n      let expireTime = Number(getCookie(\"randomStoreExpireTime\"));\n      let nowDate = new Date();\n      let nowNumber = nowDate.getTime();\n      let restTime = expireTime - nowNumber;\n\n      let hour = Math.floor((restTime / (1000 * 60 * 60)) % 24),\n        minute = Math.floor((restTime / (1000 * 60)) % 60);\n\n      setRestTime({ hour, minute });\n    };\n    if (againModal) {\n      restTimer();\n      setInterval(restTimer, 60000);\n    }\n  }, [againModal]);\n\n  useEffect(() => {\n    if (againModal) {\n      document.documentElement.style.overflow = \"hidden\";\n    } else {\n      document.documentElement.style.overflow = \"scroll\";\n    }\n  }, [againModal]);\n\n  return (\n    <Container>\n      <DescSection>\n        <Title>이런 날도 있짜나</Title>\n        <Desc>\n          <p>365일 1년내내 먹고 싶은 음식이 줄줄이 소세지마냥 가득 했던 나,</p>\n          <p>N년동안 살아왔지만 단 하루도 메뉴 고민을 한 적 없었던 나,</p>\n          <p>·</p>\n          <p>·</p>\n          <p>·</p>\n          <p>근데 오늘은 왜 이렇게 고민이 되는거야?</p>\n          <p>내가 뭘 먹고 싶은지조차 모르겠을 때</p>\n        </Desc>\n      </DescSection>\n      <RandomSection>\n        <RandomComponent>\n          {!clickedState ? (\n            <Row>\n              <VerticalText>무얼먹을지</VerticalText>\n              <span onClick={getRandomStore}>\n                <img\n                  width=\"350rem\"\n                  src=\"https://www.clickimagination.com/wp-content/uploads/2018/06/click-logo-01.png\"\n                />\n              </span>\n              <VerticalText>고민이라면</VerticalText>\n            </Row>\n          ) : (\n            <>\n              <Row>\n                <VerticalText>여기로</VerticalText>\n                <StoreCard2\n                  id={store.id}\n                  image={store.image}\n                  name={store.name}\n                  likeCount={store.like_count}\n                  likeState={store.like_state}\n                  changeLikedState={changeLikedState}\n                  type={\"random\"}\n                />\n                <VerticalText>가즈아</VerticalText>\n              </Row>\n              <div className=\"buttonSection\">\n                <ReplayBtn onClick={getAgainRandomStore}>다시하기</ReplayBtn>\n              </div>\n            </>\n          )}\n        </RandomComponent>\n      </RandomSection>\n      {againModal && (\n        <ModalWrapper visible={againModal} tabIndex={-1}>\n          <ModalInner tabIndex={0}>\n            <div className=\"header\">\n              <Header>\n                첫번째 나온 것이 찐!\n                <br />이 집으로 가시죠 😋\n                <div className=\"sub\">\n                  {restTime.hour}시간 {restTime.minute}분 후에 다시하기 가능\n                </div>\n              </Header>\n            </div>\n            <div className=\"buttons\">\n              <Button onClick={() => setAgainModal(false)}>먹으러가기!</Button>\n            </div>\n          </ModalInner>\n        </ModalWrapper>\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  font-family: \"777Balsamtint\";\n  margin: 11rem auto 2rem;\n  width: 65rem;\n`;\n\nconst DescSection = styled.div`\n  line-height: 2rem;\n  letter-spacing: 0.5rem;\n  border-bottom: 1px solid ${({ theme }) => theme.borderGray};\n`;\n\nconst Title = styled.header`\n  text-align: center;\n  font-size: 2rem;\n`;\n\nconst Desc = styled.p`\n  margin: 2rem;\n  font-size: 1.3rem;\n  text-align: center;\n`;\n\nconst RandomSection = styled.div``;\n\nconst RandomComponent = styled.div`\n  margin: 2rem auto;\n  padding: 3rem;\n\n  .buttonSection {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 3rem;\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  ${mixin.flexSet(\"space-evenly\", \"center\", \"row\")}\n\n  img {\n    cursor: pointer;\n  }\n`;\n\nconst VerticalText = styled.p`\n  font-size: 3rem;\n  writing-mode: tb-rl;\n  letter-spacing: 1.2rem;\n`;\n\nconst ReplayBtn = styled.span`\n  border: 1px solid ${({ theme }) => theme.borderGray};\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.mainYellow};\n  font-size: 1.5rem;\n  width: 7rem;\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div<StateForStyle>`\n  position: fixed;\n  z-index: 101;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\n  overflow: auto;\n  outline: 0;\n`;\n\nconst ModalInner = styled.div`\n  display: flex;\n  ${mixin.flexSet(\"center\", \"center\", \"column\")};\n  outline: none;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 25rem;\n  height: 12rem;\n  margin: 0 auto;\n  border: 0.15rem solid ${({ theme }) => theme.black};\n  border-radius: 3rem;\n  background-color: ${({ theme }) => theme.white};\n  box-shadow: 0 0 0.4rem 0 rgba(0, 0, 0, 0.6);\n\n  .buttons {\n    width: 18rem;\n    display: flex;\n    justify-content: center;\n  }\n\n  .header {\n    width: 18rem;\n    height: 6rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst Header = styled.header`\n  display: block;\n  font-size: 1.4em;\n  font-weight: 500;\n  letter-spacing: 0.4rem;\n  line-height: 1.2em;\n\n  .sub {\n    color: ${({ theme }) => theme.buttonGray};\n    font-size: 0.7em;\n    padding-top: 0.5em;\n  }\n`;\n\nconst Button = styled.button`\n  outline: none;\n  font-size: 0.8em;\n  font-weight: 700;\n  margin-top: 0.7rem;\n  cursor: pointer;\n  background-color: white;\n  width: 8.6rem;\n  height: 1.8rem;\n`;\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/StoreDetail.tsx",["216","217","218","219"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Pagination from \"react-js-pagination\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport { API } from \"../config\";\nimport { mixin } from \"../styles\";\nimport { EditCommentModal, DeleteCommentModal } from \"../components\";\nimport { IoIosHeartEmpty, IoIosHeart } from \"react-icons/io\";\nimport {\n  setSignupActive,\n  setLoginActive,\n  setFirstLogin\n} from \"../store/actions\";\n\ndeclare global {\n  interface Window {\n    kakao: any;\n  }\n}\n\ninterface UserData {\n  info: any;\n  items: any[];\n}\n\nexport default function StoreDetail(props: any) {\n  const dispatch = useDispatch();\n\n  const [info, setInfo] = useState<UserData | any>({\n    store_info: [\n      {\n        name: \"매장명\",\n        description: \"로딩중 ~~~ 조금만 기다려주세요 !\",\n        delivery: true,\n        address: \"서울시 강남구 테헤란로 427\"\n      }\n    ],\n    like_count: 0,\n    like: false,\n    store_images: [\n      \"https://images.unsplash.com/photo-1607434472257-d9f8e57a643d?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1952&q=80\"\n    ]\n  });\n  const [currentComment, setCurrentComment] = useState<UserData | any>([]);\n  // const [address, setAddress] = useState(\"\");\n  // const [items, setItems] = useState<UserData | any[]>([]);\n  // const [like, setLike] = useState(false);\n  const [commentText, setCommentText] = useState<UserData | any>({\n    newComment: null,\n    updatedComment: { id: null, content: \"기존댓글~~~\" }\n  });\n  const [editModal, setEditModal] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [activePage, setActivePage] = useState<any>(1);\n  const [countComments, setCountComments] = useState(0);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .all([\n          axios.get(`${API}/store/detail/${props.match.params.id}`, {\n            headers: {\n              Authorization: localStorage.getItem(\"token\")\n            }\n          }),\n          axios.get(`${API}/store/detail/${props.match.params.id}/comment`, {\n            headers: {\n              Authorization: localStorage.getItem(\"token\")\n            }\n          })\n        ])\n        .then(\n          axios.spread((res1, res2) => {\n            setInfo(res1.data);\n            setCurrentComment(res2.data.comment_list);\n            setCountComments(res2.data.count_comments);\n          })\n        );\n    } else {\n      axios\n        .all([\n          axios.get(`${API}/store/detail/${props.match.params.id}`),\n          axios.get(`${API}/store/detail/${props.match.params.id}/comment`)\n        ])\n        .then(\n          axios.spread((res1, res2) => {\n            setInfo(res1.data);\n            setCurrentComment(res2.data.comment_list);\n          })\n        );\n    }\n  }, [props.match.params.id]);\n\n  useEffect(() => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new window.kakao.maps.LatLng(\n        37.506505288645876,\n        127.05406759771054\n      ),\n      level: 3\n    };\n\n    let map = new window.kakao.maps.Map(container, options);\n\n    let callback = (result: any, status: any) => {\n      if (status === window.kakao.maps.services.Status.OK) {\n        let coords = new window.kakao.maps.LatLng(result[0].y, result[0].x);\n        let marker = new window.kakao.maps.Marker({\n          map: map,\n          position: coords\n        });\n        let infowindow = (info: any) =>\n          new window.kakao.maps.InfoWindow({\n            content: `<div style=\"width:10rem;height:2.5rem;display:flex;justify-content:center;align-items:center;padding:6px 0;\"><div style=\"font-weight: bold;\">\"${info.store_info[0].name}\"</div></div>`\n          });\n        infowindow(info).open(map, marker);\n        map.setCenter(coords);\n      }\n      if (status === window.kakao.maps.services.Status.ZERO_RESULT) {\n        console.log(\"카카오맵의 검색 결과가 없습니다.\");\n      }\n      if (status === window.kakao.maps.services.Status.ERROR) {\n        console.log(\"카카오맵 서버 응답에 문제가 있습니다.\");\n      }\n    };\n\n    let geocoder = new window.kakao.maps.services.Geocoder();\n    geocoder.addressSearch(info.store_info[0]?.address, callback);\n  }, [info]);\n\n  const changeLikedState = () => {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .post(`${API}/store/like/${props.match.params.id}`, \"data\", {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        })\n        .then((res) => {\n          if (res.data.MESSAGE === \"NEED_USER_NAME\") {\n            alert(\"회원정보 입력 후 좋아요 등록이 가능합니다.\");\n            dispatch(setFirstLogin(true));\n            dispatch(setSignupActive(true));\n          } else {\n            setInfo({\n              ...info,\n              like_count: Number(\n                info.like === false ? info.like_count + 1 : info.like_count - 1\n              ),\n              like: !info.like\n            });\n          }\n          console.log(\"좋아요 통신이 완료되었습니다.\", res);\n        })\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  const submitChangedComment = (crud: string, commentId: number) => {\n    if (localStorage.getItem(\"token\")) {\n      if (crud === \"INSERT\") {\n        axios\n          .post(\n            `${API}/store/detail/${props.match.params.id}/comment`,\n            JSON.stringify({\n              comment: commentText.newComment\n            }),\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            if (res.data.MESSAGE === \"NEED_USER_NAME\") {\n              alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\n              dispatch(setFirstLogin(true));\n              dispatch(setSignupActive(true));\n            } else {\n              window.location.reload();\n            }\n          })\n          .catch((err) => {\n            console.log(\"Catched errors!!\", err);\n          });\n      }\n      if (crud === \"UPDATE\") {\n        setEditModal(false);\n\n        axios\n          .patch(\n            `${API}/store/detail/${props.match.params.id}/comment/${commentText.updatedComment.id}`,\n            JSON.stringify({\n              comment: commentText.updatedComment.content\n            }),\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            window.location.reload();\n          })\n          .catch((err) => {\n            console.log(\"Catched errors!!\", err);\n          });\n      }\n      if (crud === \"DELETE\") {\n        setDeleteModal(false);\n        axios\n          .delete(\n            `${API}/store/detail/${props.match.params.id}/comment/${commentText.updatedComment.id}`,\n            {\n              headers: {\n                Authorization: localStorage.getItem(\"token\")\n              }\n            }\n          )\n          .then((res) => {\n            window.location.reload();\n          })\n          .catch((err) => {\n            console.log(\"Catched errors!!\", err);\n          });\n      }\n    } else {\n      alert(\"로그인을 해주세요!\");\n    }\n  };\n\n  const updateComment = (e: any) => {\n    const { value } = e.target;\n\n    setCommentText({\n      ...commentText,\n      updatedComment: {\n        ...commentText.updatedComment,\n        content: value\n      }\n    });\n  };\n\n  const handlePageChange = (pageNumber: any) => {\n    axios\n      .get(\n        `${API}/store/detail/${props.match.params.id}/comment?offset=${\n          (pageNumber - 1) * 5\n        }`,\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        }\n      )\n      .then((res) => {\n        setCurrentComment(res.data.comment_list);\n      })\n      .catch((err) => {\n        console.log(\"Catched errors!!\", err);\n      });\n\n    setActivePage(pageNumber);\n  };\n  const handleDragStart = (e: any) => e.preventDefault();\n\n  return (\n    <Container>\n      <DescSection>\n        <Images>\n          <AliceCarousel\n            mouseTracking\n            infinite\n            autoPlay\n            animationDuration={1400}\n            disableButtonsControls={true}\n          >\n            {info.store_images?.map((image: string) => (\n              <img src={image} onDragStart={handleDragStart} className=\"food\" />\n            ))}\n          </AliceCarousel>\n        </Images>\n        <StoreDesc>\n          <StoreTitle>\n            <DecoTitle>“</DecoTitle>\n            <Title>{info.store_info[0]?.name}</Title>\n            <DecoTitle>”</DecoTitle>\n          </StoreTitle>\n          <Desc>\n            <div className=\"deli\">\n              {info.store_info[0]?.delivery\n                ? \"⭕ 배달 가능 맛집 ⭕\"\n                : \"❌ 배달 불가 맛집 ❌\"}\n            </div>\n            <div className=\"desc\">{info.store_info[0]?.description}</div>\n          </Desc>\n          <Liked>\n            <span onClick={changeLikedState}>\n              {info?.like ? (\n                <IoIosHeart className=\"like full\" />\n              ) : (\n                <IoIosHeartEmpty className=\"like\" />\n              )}\n            </span>\n            <span className=\"amount\">{info?.like_count}</span>\n            명의 위코더가 좋아해요 :-)\n          </Liked>\n        </StoreDesc>\n      </DescSection>\n      <MapSection>\n        <Map id=\"map\" style={{ width: \"65rem\", height: \"28rem\" }}></Map>\n      </MapSection>\n      <hr style={{ margin: \"2rem 0\" }}></hr>\n      <CommentSection>\n        <InputWrapper>\n          <CommentDesc>댓글 입력</CommentDesc>\n          <CommentInput>\n            <form>\n              <Input\n                onKeyDown={(e) => {\n                  if (e.keyCode === 13) {\n                    submitChangedComment(\"INSERT\", 0);\n                    e.preventDefault();\n                  }\n                }}\n                maxLength={250}\n                onChange={(e) =>\n                  setCommentText({ ...commentText, newComment: e.target.value })\n                }\n                placeholder=\"여러분의 이야기를 남겨주세요 !\"\n              />\n              <SubmitBtn onClick={() => submitChangedComment(\"INSERT\", 0)}>\n                확인\n              </SubmitBtn>\n            </form>\n          </CommentInput>\n        </InputWrapper>\n        <CommentsWrapper>\n          {currentComment &&\n            currentComment.map((comment: any, idx: any) => (\n              <Comment key={idx}>\n                <User>{comment.writer_name}</User>\n                <div className=\"right\">\n                  <Content>{comment.comment}</Content>\n                  <UploadTime>( {comment.created_at} )</UploadTime>\n                  {comment.writer_id ===\n                    Number(localStorage.getItem(\"user_id_number\")) && (\n                    <>\n                      <ModifyDiv>\n                        <p\n                          className=\"edit\"\n                          onClick={() => {\n                            setEditModal(true);\n                            setCommentText({\n                              ...commentText,\n                              updatedComment: {\n                                id: comment.id,\n                                content: comment.comment\n                              }\n                            });\n                          }}\n                        >\n                          수정\n                        </p>\n                        <p\n                          className=\"delete\"\n                          onClick={() => {\n                            setDeleteModal(true);\n                            setCommentText({\n                              ...commentText,\n                              updatedComment: {\n                                ...commentText.updatedComment,\n                                id: comment.id\n                              }\n                            });\n                          }}\n                        >\n                          삭제\n                        </p>\n                      </ModifyDiv>\n                    </>\n                  )}\n                </div>\n              </Comment>\n            ))}\n        </CommentsWrapper>\n        <PaginationCss>\n          <Pagination\n            activePage={activePage}\n            itemsCountPerPage={5}\n            totalItemsCount={countComments}\n            pageRangeDisplayed={5}\n            hideFirstLastPages\n            itemClassPrev={\"prevPageText\"}\n            itemClassNext={\"nextPageText\"}\n            prevPageText={\"◀\"}\n            nextPageText={\"▶\"}\n            onChange={handlePageChange}\n          />\n        </PaginationCss>\n      </CommentSection>\n      {editModal && (\n        <EditCommentModal\n          editModal={editModal}\n          setEditModal={setEditModal}\n          updatedComment={commentText.updatedComment}\n          submitChangedComment={submitChangedComment}\n          updateComment={updateComment}\n        />\n      )}\n      {deleteModal && (\n        <DeleteCommentModal\n          deleteModal={deleteModal}\n          setDeleteModal={setDeleteModal}\n          submitChangedComment={submitChangedComment}\n          commentId={commentText.updatedComment.id}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 10rem auto 5rem auto;\n  width: 65rem;\n`;\n\nconst DescSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst Images = styled.div`\n  width: 28rem;\n\n  .food {\n    width: 28rem;\n    height: 28rem;\n    border: 2px solid ${({ theme }) => theme.borderGray};\n  }\n`;\n\nconst StoreDesc = styled.div`\n  font-family: \"InkLipquid\";\n  width: 32rem;\n`;\n\nconst StoreTitle = styled.div`\n  font-size: 2.3rem;\n  margin: 1rem 0;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Title = styled.header`\n  display: inline;\n`;\n\nconst DecoTitle = styled.span`\n  margin: 0 1rem;\n`;\n\nconst Desc = styled.article`\n  font-size: 1.1rem;\n  padding: 1.5rem 0.7rem;\n  width: 100%;\n  height: 23.8rem;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  border-top: 1px solid ${({ theme }) => theme.borderGray};\n  border-bottom: 1px solid ${({ theme }) => theme.borderGray};\n  letter-spacing: 0.1rem;\n  word-spacing: 0.1rem;\n  line-height: 1.7rem;\n\n  .deli {\n    font-size: 1.5rem;\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n\n  .desc {\n    font-family: \"KOTRA_GOTHIC\";\n  }\n`;\n\nconst Liked = styled.p`\n  font-size: 20px;\n  margin-top: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .like {\n    font-size: 2.2rem;\n  }\n\n  .full {\n    color: ${({ theme }) => theme.likedRed};\n  }\n\n  .amount {\n    font-size: 2rem;\n    font-weight: 900;\n    margin: 0 0.6rem 0 1rem;\n  }\n`;\n\nconst MapSection = styled.div`\n  margin-top: 4rem;\n`;\n\nconst Map = styled.div`\n  border: 2px solid ${({ theme }) => theme.borderGray};\n`;\n\nconst CommentSection = styled.div`\n  font-family: \"Bazzi\";\n  width: 65rem;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 1.3rem;\n`;\n\nconst CommentDesc = styled.span`\n  width: 5.5rem;\n  margin-right: 1rem;\n  font-size: 1.4rem;\n`;\n\nconst CommentInput = styled.form`\n  position: relative;\n`;\n\nconst Input = styled.input`\n  font-family: \"Bazzi\";\n  padding: 0.5rem 2.5rem 0.5rem 1rem;\n  font-size: 1rem;\n  outline: none;\n  width: 59.5rem;\n`;\n\nconst SubmitBtn = styled.span`\n  position: absolute;\n  right: 0.5rem;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nconst CommentsWrapper = styled.ul``;\n\nconst Comment = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 0.7rem;\n  align-items: center;\n\n  .right {\n    display: flex;\n    align-items: center;\n    width: 59.5rem;\n    line-height: 1.4rem;\n  }\n`;\n\nconst User = styled.span`\n  font-size: 1.0625rem;\n  width: 5.8rem;\n  font-weight: 900;\n  border-right: 0.125rem solid black;\n  margin-right: 1rem;\n`;\n\nconst Content = styled.p`\n  width: 75%;\n  display: inline;\n  word-break: break-all;\n`;\n\nconst UploadTime = styled.span`\n  margin: 0rem 0.1rem 0rem 0.9rem;\n`;\n\nconst ModifyDiv = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n  justify-content: flex-end;\n\n  .edit {\n    width: 2.375rem;\n    margin-right: 0.5625rem;\n    border-right: 0.125rem solid black;\n    cursor: pointer;\n  }\n\n  .delete {\n    width: 1.625rem;\n    cursor: pointer;\n  }\n`;\n\nconst ModifyBtn = styled.p`\n  margin: 0 0.2rem;\n  outline: none;\n  font-size: 0.75em;\n  font-weight: 700;\n  cursor: pointer;\n  background-color: white;\n`;\n\nconst PaginationCss = styled.div`\n  .pagination {\n    display: flex;\n    justify-content: center;\n    margin: 2.5rem 0rem 0rem 0rem;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n\n  ul.pagination li {\n    display: inline-block;\n    width: 22px;\n    display: flex;\n    justify-content: center;\n    font-size: 25px;\n  }\n\n  ul.pagination li a {\n    text-decoration: none;\n    color: black;\n    font-size: 20px;\n  }\n\n  ul.pagination li.active a {\n    color: #ffd966;\n  }\n  ul.pagination li.active {\n    font-weight: 600;\n    color: #ffd966;\n  }\n\n  ul.pagination li a:hover,\n  ul.pagination li a.active {\n    color: #ffd966;\n  }\n\n  .pagination-wrapper {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 10px;\n  }\n  ul.pagination li.prevPageText a,\n  ul.pagination li.nextPageText a {\n    color: #ffd966;\n  }\n`;\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/PostWriting.tsx",["220","221","222"],"import React, { useState } from \"react\";\nimport { COLORS } from \"../styles/themeColor\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { API } from \"../config\";\nimport wemeok from \"../images/wemeoktalk3.png\";\nimport axios from \"axios\";\nimport ReactQuill from \"react-quill\"; // Typescript\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-quill/dist/quill.bubble.css\";\nimport \"./PostWriting.scss\";\n\nexport default function PostWriting() {\n  const [title, setTitle] = useState<any>({ newTitle: null });\n  const [content, setContent] = useState<any>(\"\");\n  const history = useHistory();\n\n  const modules = {\n    toolbar: [\n      [{ header: [1, 2, 3, 4, false] }],\n      [\"bold\", \"italic\", \"underline\", \"strike\"],\n      [\"clean\"]\n    ]\n  };\n\n  let data = {\n    title: title.newTitle,\n    content: content\n  };\n\n  const uploadData = () => {\n    if (title.newTitle === null) {\n      alert(\"제목,내용을 입력해주세요\");\n    } else {\n      axios\n        .post(`${API}/board`, JSON.stringify(data), {\n          headers: {\n            Authorization: localStorage.getItem(\"token\"),\n            \"Content-Type\": `application/json`\n          }\n        })\n        .then((res) => {\n          history.push(\"/post-list\");\n        });\n    }\n  };\n\n  const createPost = (value: string) => {\n    setContent(value);\n  };\n\n  return (\n    <>\n      <div className=\"postWriting\">\n        <div className=\"weMeokTalkLogo\">\n          <img src={wemeok}></img>\n        </div>\n        <div className=\"weMeokTalkList\">\n          <div className=\"listDiv\">\n            <div className=\"writingTitle\">\n              <p>제목</p>\n              <input\n                required\n                maxLength={50}\n                type=\"text/html\"\n                onChange={(e) =>\n                  setTitle({ ...title, newTitle: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"solidLine\"></div>\n            <div className=\"writingCenter\">\n              <p className=\"textBold\"> 내용</p>\n              <ReactQuill\n                bounds={\".quill\"}\n                theme={\"snow\"}\n                value={content}\n                onChange={createPost}\n                modules={modules}\n              />\n            </div>\n            <div className=\"writerButton\">\n              <button onClick={uploadData}>작성</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/config.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/StoreCard.tsx",["223"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n  id: number;\n  top: string;\n  image: string;\n  name: string;\n  likeCount: number;\n  likeState: boolean;\n  changeLikedState: (id: any) => void;\n}\n\nexport default function StoreCard({\n  id,\n  top,\n  image,\n  name,\n  likeCount,\n  likeState,\n  changeLikedState\n}: Props) {\n  const history = useHistory();\n\n  return (\n    <>\n      <div className=\"storeCard\">\n        <div className=\"ranking\">\n          <img\n            alt=\"CrownIcon\"\n            className=\"iconCrown\"\n            src=\"./images/crown.png\"\n          ></img>\n          <p>{top}</p>\n        </div>\n        <div className=\"rankingComponents\">\n          <div\n            className=\"storeHeader\"\n            onClick={() => history.push(`/store-detail/${id}`)}\n          >\n            <p>Weeeating</p>\n            <hr></hr>\n            <img alt=\"storeImg\" src={image}></img>\n            <hr></hr>\n          </div>\n          <div className=\"storeFooter\">\n            <p className=\"foodName\">{name}</p>\n            <span onClick={() => changeLikedState(id)}>\n              {likeState ? (\n                <img alt=\"Like\" src=\"./images/fullheart.png\"></img>\n              ) : (\n                <img alt=\"Like\" src=\"./images/heart.png\"></img>\n              )}\n            </span>\n            <p className=\"heartTotal\">{likeCount}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/PostReply.tsx",["224","225","226","227","228"],"import React, { useState } from \"react\";\nimport { COLORS } from \"../../styles/themeColor\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"../../config\";\n\ninterface PostReplyData {\n  id: number;\n  content: string;\n  writer: string;\n  created_at: string;\n  writer_id: number;\n  comments: any;\n  clickEdit: (comment: any) => void;\n  clickDeleteComment: (comment: any) => void;\n  // submitChangedComment: (crud: string, commentId: number) => void\n}\n\nexport default function PostReply({\n  id,\n  content,\n  writer,\n  created_at,\n  writer_id,\n  comments,\n  clickEdit,\n  clickDeleteComment\n}: // submitChangedComment\nPostReplyData) {\n  const history = useHistory();\n\n  return (\n    <div className=\"comments\" key={id}>\n      <span className=\"commentsWriter\">{writer}</span>\n      <div className=\"commentDiv\">\n        <p className=\"commentContent\">{content}</p>\n        <span className=\"commentCreated\">({created_at})</span>\n        {writer_id === Number(localStorage.getItem(\"user_id_number\")) && (\n          <div className=\"modifyDiv\">\n            <p\n              className=\"commentEdit\"\n              onClick={() => {\n                clickEdit(comments);\n              }}\n            >\n              수정\n            </p>\n            <p className=\"commentDelete\" onClick={() => clickDeleteComment(id)}>\n              삭제\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/Posts.tsx",["229","230"],"import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ninterface PostData {\n  id: string | number | null | undefined;\n  title: React.ReactNode;\n  writer: string;\n  created_at: string;\n  comments: number;\n}\nexport default function Posts({\n  id,\n  title,\n  writer,\n  created_at,\n  comments\n}: PostData) {\n  const history = useHistory();\n  return (\n    <>\n      <div\n        className=\"listTitle\"\n        key={id}\n        onClick={() => history.push(`/post-detail/${id}`)}\n      >\n        <p className=\"title\">{title}</p>\n        <p className=\"writer \">{writer}</p>\n        <p className=\"createdAt\">{created_at}</p>\n        <p className=\"comments\">{comments}</p>\n      </div>\n      <div className=\"listSolid\"></div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/StoreCard2.tsx",["231","232"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n  id: number;\n  type: string;\n  image: string;\n  name: string;\n  likeCount: number;\n  likeState: boolean;\n  changeLikedState: (id: any, type: string) => void;\n}\n\nexport default function StoreCard({\n  id,\n  image,\n  name,\n  type,\n  likeCount,\n  likeState,\n  changeLikedState\n}: Props) {\n  const [fullLike, setFullLike] = useState<boolean>(true);\n  const history = useHistory();\n\n  const heartLike = () => {\n    setFullLike(!fullLike);\n  };\n\n  const iconLike = fullLike ? \"./images/heart.png\" : \"./images/fullheart.png\";\n  return (\n    <>\n      <div className=\"storeCard\">\n        <div className=\"rankingComponents\">\n          <div\n            className=\"storeHeader\"\n            onClick={() => history.push(`/store-detail/${id}`)}\n          >\n            <p>Weeeating</p>\n            {/* <hr></hr> */}\n            <img alt=\"storeImg\" src={image}></img>\n            {/* <hr></hr> */}\n          </div>\n          <div className=\"storeFooter\">\n            <p className=\"foodName\">{name}</p>\n            <span onClick={() => changeLikedState(id, type)}>\n              {likeState ? (\n                <img alt=\"Like\" src=\"./images/fullheart.png\"></img>\n              ) : (\n                <img alt=\"Like\" src=\"./images/heart.png\"></img>\n              )}\n            </span>\n            {/* <img\n              alt=\"Like\"\n              src={iconLike}\n              onClick={() => changeLikedState(id)}\n            ></img> */}\n            <p className=\"heartTotal\">{likeCount}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/KobbubakTheme.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/pages/childComponents/MetorTheme.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/registerModal.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/store/actions/googleFirstLogin.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/index.ts",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Footer.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/LoginForm.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/DeleteCommentModal.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Login.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/EditCommentModal.tsx",[],"/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Signup.tsx",["233","234"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { API } from \"../config\";\nimport { SignupForm } from \"./index\";\n\nexport default function Signup() {\n  const [user, setUser] = useState({\n    number: null,\n    userName: null,\n    email: null,\n    password: null,\n    repassword: null\n  });\n\n  const googleSignup = useSelector(\n    ({ setFirstReducer }) => setFirstReducer.first\n  );\n\n  const handleChange = (e: any) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const isValidateEmail = (value: any) => {\n    let email = value;\n    let regExp = /^[0-9a-zA-Z]{3}([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]{2,3}([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/;\n    if (!regExp.test(email)) {\n      alert(\"이메일형식이 올바르지 않습니다.\");\n      return false;\n    }\n    return true;\n  };\n\n  const isValidatePassword = (value: any) => {\n    let password = value;\n    let regExp = /^.{6}/;\n    if (!regExp.test(password)) {\n      alert(\"비밀번호는 6글자 이상이어야 합니다.\");\n      return false;\n    }\n    return true;\n  };\n\n  const submitSingup = async (event: any, type: string) => {\n    event.preventDefault();\n\n    switch (type) {\n      case \"login\":\n        const checkValidation = await Promise.all([\n          isValidateEmail(user.email),\n          isValidatePassword(user.password)\n        ]).then((res) => res);\n\n        const isValid = !checkValidation.some((bool) => !bool);\n\n        if (isValid) {\n          if (user.password === user.repassword || !user.password) {\n            const body = {\n              number: user.number,\n              name: user.userName,\n              email: user.email,\n              password: user.password\n            };\n            axios\n              .post(`${API}/user/signup`, JSON.stringify({ ...body }))\n              .then((res) => {\n                if (res.data.MESSAGE === \"USER_SIGNUP_SUCCESS\") {\n                  localStorage.setItem(\"token\", res.data.Authorization);\n                  localStorage.setItem(\"user_id_number\", res.data.user_id);\n                  localStorage.isAuthenticated = true;\n                  alert(\"회원가입과 로그인이 완료되었습니다. :-)\");\n                  window.location.reload();\n                } else {\n                  alert(\"회원가입이 완료되지 않았습니다.\");\n                }\n              })\n              .catch((err) =>\n                console.log(\"회원가입 통신이 원활하지 않습니다.\", err)\n              );\n          } else {\n            alert(\n              \"재입력한 비밀번호가 일치하지 않습니다. 비밀번호를 다시 입력해주세요.\"\n            );\n          }\n        }\n        break;\n      case \"login/google\":\n        const body = {\n          number: user.number,\n          name: user.userName\n        };\n        axios\n          .post(`${API}/user/signup/google`, JSON.stringify({ ...body }), {\n            headers: {\n              Authorization: localStorage.getItem(\"token\")\n            }\n          })\n          .then((res) => {\n            if (res.data.MESSAGE === \"UPDATE_SUCCESS\") {\n              alert(\"회원가입이 완료되었습니다. :-)\");\n              localStorage.isAuthenticated = true;\n              window.location.reload();\n            } else {\n              alert(\"구글 회원가입이 완료되지 않았습니다.\");\n            }\n          })\n          .catch((err) =>\n            console.log(\"구글 회원가입 통신이 원활하지 않습니다.\", err)\n          );\n        break;\n      default:\n        break;\n    }\n  };\n\n  const props = { handleChange, submitSingup };\n\n  return <SignupForm {...props} />;\n}\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/Nav.tsx",["235"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FiX } from \"react-icons/fi\";\nimport { setSignupActive, setLoginActive } from \"../store/actions\";\nimport { mixin } from \"../styles\";\nimport { Signup, Login } from \"./index\";\nimport wemeok from \"../images/weeeating_Nav_logo.png\";\n\ninterface IProps {\n  weight: {\n    storeList: boolean;\n    todayRandom: boolean;\n    postList: boolean;\n    aboutPage: boolean;\n  };\n  goToPage: (path: string, page: string) => void;\n}\n\ninterface StateForStyle {\n  theLast?: boolean;\n  present?: boolean;\n  visible?: boolean;\n}\n\nexport default function Nav({ weight, goToPage }: IProps) {\n  const dispatch = useDispatch();\n  const loggedIn =\n    localStorage.getItem(\"isAuthenticated\") === \"true\" ? true : false;\n\n  const signupModal = useSelector(\n    ({ setModalReducer }) => setModalReducer.signupModal\n  );\n  const loginModal = useSelector(\n    ({ setModalReducer }) => setModalReducer.loginModal\n  );\n\n  useEffect(() => {\n    if (signupModal || loginModal) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n  }, [signupModal, loginModal]);\n\n  const toLogout = () => {\n    localStorage.clear();\n    localStorage.isAuthenticated = false;\n    window.location.reload();\n  };\n\n  return (\n    <Container>\n      <Logo onClick={() => goToPage(\"/\", \"main\")}>\n        <img src={wemeok} />\n      </Logo>\n      <Button\n        present={weight.storeList}\n        onClick={() => goToPage(\"/store-list\", \"storeList\")}\n      >\n        맛집\n      </Button>\n      <Button\n        present={weight.todayRandom}\n        onClick={() => goToPage(\"/today-random\", \"todayRandom\")}\n      >\n        오늘 뭐먹지?\n      </Button>\n      <Button\n        present={weight.postList}\n        onClick={() => goToPage(\"/post-list\", \"postList\")}\n      >\n        We Moek Talk\n      </Button>\n      <Button\n        theLast={true}\n        present={weight.aboutPage}\n        onClick={() => goToPage(\"/about\", \"aboutPage\")}\n      >\n        About Weeeating\n      </Button>\n      <ModalBtnWrapper>\n        {loggedIn ? (\n          <Button theLast={true} onClick={toLogout}>\n            로그아웃\n          </Button>\n        ) : (\n          <>\n            <Button\n              present={signupModal}\n              onClick={() => dispatch(setSignupActive(true))}\n            >\n              회원가입\n            </Button>\n            <Button\n              theLast={true}\n              present={loginModal}\n              onClick={() => dispatch(setLoginActive(true))}\n            >\n              로그인\n            </Button>\n          </>\n        )}\n      </ModalBtnWrapper>\n\n      <ModalOverlay visible={signupModal || loginModal} />\n      <ModalWrapper visible={signupModal || loginModal} tabIndex={-1}>\n        <ModalInner tabIndex={0}>\n          <CloseBtn\n            onClick={() => {\n              dispatch(setSignupActive(false));\n              dispatch(setLoginActive(false));\n            }}\n          >\n            <FiX className=\"icon\" />\n          </CloseBtn>\n          {signupModal || !loginModal ? <Signup /> : <Login />}\n        </ModalInner>\n      </ModalWrapper>\n    </Container>\n  );\n}\n\nconst Container = styled.header`\n  font-family: \"Bazzi\";\n  ${mixin.flexSet(\"flex-start\", \"center\", \"row\")}\n  position: fixed;\n  z-index: 100;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  width: 100vw;\n  height: 5rem;\n  padding: 0 1.3em;\n  border-bottom: 0.07rem solid ${({ theme }) => theme.borderGray};\n  background-color: ${({ theme }) => theme.white};\n`;\n\nconst Logo = styled.div`\n  margin-right: 3rem;\n  font-size: 3em;\n  cursor: pointer;\n\n  img {\n    width: 228px;\n    height: 63px;\n  }\n`;\n\nconst Button = styled.span<StateForStyle>`\n  margin: 0.5em 0;\n  padding: 0 1.1em;\n  border-right: 0.07rem solid\n    ${({ theme, theLast }) => (theLast ? theme.white : theme.borderGray)};\n  font-size: 1.2em;\n  font-weight: ${({ present }) => (present ? 900 : 400)};\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst ModalBtnWrapper = styled.span`\n  position: absolute;\n  right: 1.3rem;\n`;\n\nconst ModalOverlay = styled.div<StateForStyle>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\n  background-color: rgba(0, 0, 0, 0.3);\n`;\n\nconst ModalWrapper = styled.div<StateForStyle>`\n  position: fixed;\n  z-index: 101;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\n  overflow: auto;\n  outline: 0;\n`;\n\nconst ModalInner = styled.div`\n  outline: none;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 37rem;\n  height: 37rem;\n  margin: 0 auto;\n  border: 0.15rem solid ${({ theme }) => theme.black};\n  border-radius: 3rem;\n  background-color: ${({ theme }) => theme.white};\n  box-shadow: 0 0 0.4rem 0 rgba(0, 0, 0, 0.6);\n`;\n\nconst CloseBtn = styled.span`\n  position: absolute;\n  top: 0.5rem;\n  right: 0.8rem;\n  padding: 1rem;\n  cursor: pointer;\n\n  .icon {\n    font-size: 1.8rem;\n  }\n`;\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/PeoplePick.tsx",["236","237"],"import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport {\n  IoIosArrowBack,\n  IoIosArrowForward,\n  IoIosAddCircle\n} from \"react-icons/io\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { mixin } from \"../styles\";\n\ninterface IProps {\n  info: never[];\n  TITLE: string[];\n}\n\nfunction SampleNextArrow(props: any) {\n  const { className, style, onClick } = props;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  });\n\n  return (\n    <img\n      alt=\"rightArrow\"\n      src=\"./images/arrow-right.png\"\n      className={className}\n      style={{\n        ...style,\n        display: \"block\",\n        width: \"2.5rem\",\n        height: \"2.5rem\",\n        top: \"-43px\",\n        left: \"1001px\"\n      }}\n      onClick={onClick}\n    ></img>\n  );\n}\n\nfunction SamplePrevArrow(props: any) {\n  const { className, style, onClick } = props;\n  return (\n    <img\n      alt=\"rightArrow\"\n      src=\"./images/arrow-left.png\"\n      className={className}\n      style={{\n        ...style,\n        display: \"block\",\n        width: \"2.5rem\",\n        height: \"2.5rem\",\n        top: \"-43px\",\n        left: \"951px\"\n      }}\n      onClick={onClick}\n    ></img>\n  );\n}\n\nexport default function PeoplePick({ info, TITLE }: IProps) {\n  const history = useHistory();\n\n  const settings = {\n    dots: false,\n    infinite: false,\n    speed: 1000,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    arrows: true,\n    // centerPadding: \"47px\",\n    nextArrow: <SampleNextArrow />,\n    prevArrow: <SamplePrevArrow />,\n    className: \"slides\"\n  };\n  return (\n    <Wrapper>\n      <Container>\n        <Header>\n          <Title>\n            <p>{TITLE[0]}</p>\n            <p>{TITLE[1]}</p>\n          </Title>\n          <Line></Line>\n          <Arrow>\n            <div className=\"left arrow\">\n              <IoIosArrowBack className=\"arrowIcon\" />\n            </div>\n            <div className=\"right arrow\">\n              <IoIosArrowForward className=\"arrowIcon\" />\n            </div>\n          </Arrow>\n        </Header>\n        <CardWrapper>\n          <Slider {...settings}>\n            {info.length &&\n              info.map(\n                ({ id, image, name, position, store_id, store, desc }: any) => (\n                  <CardEach id={id}>\n                    <Profile>\n                      <img src={image} />\n                      <div className=\"name\">{name}</div>\n                      <div className=\"position\">{position}</div>\n                    </Profile>\n                    <Desc>\n                      <div className=\"storeHeader\">\n                        <span className=\"decoTitle\">\" </span>\n                        <span className=\"storeTitle\">{store}</span>\n                        <span className=\"decoTitle\"> \"</span>\n                      </div>\n                      <div className=\"storeDesc\">{desc}</div>\n                    </Desc>\n                    <MoreBtn>\n                      <span\n                        className=\"seeStoreInfo\"\n                        onClick={() =>\n                          history.push(`/store-detail/${store_id}`)\n                        }\n                      >\n                        맛집 구경하기\n                      </span>\n                      <IoIosAddCircle className=\"btnIcon\" />\n                    </MoreBtn>\n                  </CardEach>\n                )\n              )}\n          </Slider>\n        </CardWrapper>\n      </Container>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 55rem;\n  background-color: ${({ theme }) => theme.mentorBack};\n  line-height: 1.3;\n`;\n\nconst Container = styled.div`\n  margin: 5rem auto;\n  padding-top: 3rem;\n  width: 65rem;\n`;\n\nconst Header = styled.section`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-bottom: 1.5rem;\n`;\n\nconst Title = styled.h2`\n  width: 55rem;\n  font-size: 2.5rem;\n  letter-spacing: 0.4rem;\n`;\n\nconst Line = styled.div`\n  margin-right: 1rem;\n  width: 100%;\n  height: 1.25rem;\n  border-top: 2px solid ${({ theme }) => theme.borderGray};\n`;\n\nconst Arrow = styled.div`\n  cursor: pointer;\n  display: flex;\n\n  .arrow {\n    width: 2.5rem;\n    height: 2.5rem;\n    background-color: #0000000d;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .left {\n    margin-right: 0.5rem;\n  }\n\n  .right {\n  }\n\n  .arrowIcon {\n    width: 50%;\n    height: 50%;\n    color: ${({ theme }) => theme.buttonGray};\n  }\n`;\n\nconst CardWrapper = styled.div``;\n\nconst CardEach = styled.div`\n  position: relative;\n  float: left;\n  width: 33.33%;\n  height: 40rem;\n  padding-right: 1rem;\n  outline: none;\n`;\n\nconst Profile = styled.section`\n  padding: 1.25rem;\n\n  img {\n    border-radius: 50%;\n    width: 15rem;\n    height: 15rem;\n  }\n\n  .name {\n    font-size: 1.3rem;\n    font-weight: 900;\n    line-height: 1.14;\n    margin-top: 1.94rem;\n  }\n\n  .position {\n    margin-top: 0.6rem;\n    font-size: 1rem;\n    line-height: 1.07;\n  }\n`;\n\nconst Desc = styled.section`\n  line-break: anywhere;\n  padding: 1.25rem 1.13rem;\n  line-height: 1.88;\n  margin-bottom: 2.25rem;\n\n  .storeHeader {\n    .decoTitle {\n    }\n    .storeTitle {\n      font-weight: 900;\n      font-size: 1.15rem;\n    }\n  }\n`;\n\nconst MoreBtn = styled.span`\n  cursor: pointer;\n  font-size: 1.2rem;\n  margin: 2.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 7rem;\n  height: 1.5rem;\n  position: absolute;\n  bottom: 0;\n  right: 0rem;\n\n  .btnIcon {\n    font-size: 1.3rem;\n  }\n`;\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/GoogleLoginComponent.tsx",["238","239","240","241","242","243","244","245"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { API } from \"../config\";\nimport {\n  setSignupActive,\n  setLoginActive,\n  setFirstLogin\n} from \"../store/actions\";\n\nexport default function GoogleLoginComponent() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // 구글 로그인 백엔드 통신 확인 후, 필요여부 재확인 예정\n  const getGoogleOAuth2 = async () => {\n    const oAuth2 = await localStorage.getItem(\n      \"oauth2_ss::http://localhost:3000::1::DEFAULT::_ss_\"\n    );\n  };\n\n  const responseGoogle = (response: any) => {\n    const { accessToken } = response;\n\n    axios\n      .post(`${API}/user/login/social`, \"data\", {\n        headers: {\n          Authorization: accessToken\n        }\n      })\n      .then((res: any) => {\n        localStorage.setItem(\"token\", res.data.Authorization);\n        localStorage.setItem(\"user_id_number\", res.data.user_id);\n        localStorage.setItem(\"isAuthenticated\", \"true\");\n\n        if (res.data.FRIST_VISIT === true) {\n          alert(\"구글 첫 로그인입니다. 회원가입을 해주세요.\");\n          dispatch(setFirstLogin(true));\n          dispatch(setSignupActive(true));\n          dispatch(setLoginActive(false));\n        } else {\n          dispatch(setLoginActive(false));\n          history.push(\"/\");\n          alert(\"구글 로그인 되었습니다.\");\n        }\n      })\n      .catch((err: any) => {\n        console.log(\"ERRORS! ===>\", err);\n        alert(\"구글 로그인에 Error가 발생하였습니다.\");\n      });\n  };\n\n  return (\n    <Container>\n      <GoogleLogin\n        render={(renderProps) => (\n          <button\n            onClick={renderProps.onClick}\n            className=\"googleLogin\"\n            disabled={renderProps.disabled}\n          >\n            구글로 로그인하기\n          </button>\n        )}\n        clientId=\"675033028389-t4ff8ilfoffg5f3pcrkrcg88tqvqisv7.apps.googleusercontent.com\"\n        buttonText=\"구글로 로그인하기\"\n        onSuccess={responseGoogle}\n        onFailure={(err) => console.log(\"Google Error\", err)}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  font-family: sans-serif;\n  margin-top: 2em;\n  margin-left: 0.7em;\n  width: 28.6em;\n  font-size: 1.15em;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 3.5em;\n  text-align: center;\n  cursor: pointer;\n\n  .googleLogin {\n    outline: none;\n    border: 2px solid ${({ theme }) => theme.mainYellow};\n    background-color: ${({ theme }) => theme.lightYellow};\n    font-size: 1.05rem;\n    font-weight: 700;\n    color: black;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n  }\n`;\n","/Users/eunjinbaek/Desktop/Weeeating_project/Weeeating/src/components/SignupForm.tsx",["246"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\ninterface IProps {\n  handleChange: (e: any) => void;\n  submitSingup: (event: any, type: string) => Promise<void>;\n}\n\ninterface StateForStyle {\n  short?: boolean;\n  needSpace?: boolean;\n}\n\nexport default function SignupForm({ handleChange, submitSingup }: IProps) {\n  const firstGoogle = useSelector(\n    ({ setFirstReducer }) => setFirstReducer.first\n  );\n\n  return (\n    <Container>\n      <Title>회원가입</Title>\n      <InfoSection\n        onSubmit={(event) =>\n          submitSingup(event, firstGoogle ? \"login/google\" : \"login\")\n        }\n      >\n        <BlockWrapper>\n          <Subject short={true}>기수</Subject>\n          <Input\n            type=\"number\"\n            name=\"number\"\n            placeholder=\"숫자만!\"\n            onChange={handleChange}\n            required\n            short={true}\n          ></Input>\n          <Subject short={true} needSpace={true}>\n            이름\n          </Subject>\n          <Input\n            type=\"text\"\n            name=\"userName\"\n            placeholder=\"전체이름!\"\n            onChange={handleChange}\n            required\n            short={true}\n            maxLength={4}\n          ></Input>\n        </BlockWrapper>\n        <BlockWrapper>\n          <Subject>이메일</Subject>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            required\n            placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\n            disabled={firstGoogle ? true : false}\n            onChange={handleChange}\n          ></Input>\n        </BlockWrapper>\n        <BlockWrapper>\n          <Subject>비밀번호</Subject>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            required\n            placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\n            disabled={firstGoogle ? true : false}\n            onChange={handleChange}\n          ></Input>\n        </BlockWrapper>\n        <BlockWrapper>\n          <Subject>비밀번호 확인</Subject>\n          <Input\n            type=\"password\"\n            name=\"repassword\"\n            required\n            placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\n            disabled={firstGoogle ? true : false}\n            onChange={handleChange}\n          ></Input>\n        </BlockWrapper>\n        <Button\n          type=\"submit\"\n          value=\"회원가입\"\n          className=\"button\"\n          onSubmit={(event) =>\n            submitSingup(event, firstGoogle ? \"login/google\" : \"login\")\n          }\n        ></Button>\n      </InfoSection>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 2em 2.5em;\n`;\n\nconst Title = styled.h1`\n  color: ${({ theme }) => theme.mainYellow};\n  height: 1em;\n  margin-left: 1rem;\n  text-align: center;\n  font-size: 6em;\n  font-weight: 900;\n  margin-bottom: 0.5em;\n  letter-spacing: 0.2em;\n`;\n\nconst InfoSection = styled.form`\n  font-family: \"Noto Sans KR\";\n  margin: 0 2.5em;\n  height: 20em;\n`;\n\nconst BlockWrapper = styled.div`\n  margin: 2em 0;\n  height: 2.5em;\n\n  display: flex;\n  align-items: center;\n  .button {\n    background-color: ${({ theme }) => theme.lightYellow};\n  }\n`;\n\nconst Subject = styled.div<StateForStyle>`\n  font-family: sans-serif;\n  text-align: center;\n  font-size: 1.15em;\n  font-weight: 500;\n  width: 4.6em;\n  margin-right: 1.5em;\n  margin-left: ${({ needSpace }) => (needSpace ? \"1.5em\" : \"0\")};\n`;\n\nconst Input = styled.input<StateForStyle>`\n  width: ${({ short }) => (short ? \"7.4em\" : \"28em\")};\n  height: 4em;\n  border: 2px solid ${({ theme }) => theme.mainYellow};\n`;\n\nconst Button = styled.input`\n  outline: none;\n  border: 2px solid ${({ theme }) => theme.mainYellow};\n  margin-top: 3em;\n  margin-left: 6.5rem;\n  width: 13em;\n  font-size: 1.15rem;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 3em;\n  text-align: center;\n  background-color: ${({ theme }) => theme.lightYellow};\n  cursor: pointer;\n`;\n",{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":85,"column":11,"nodeType":"253","endLine":85,"endColumn":49},{"ruleId":"254","severity":1,"message":"255","line":8,"column":3,"nodeType":"256","messageId":"257","endLine":8,"endColumn":17},{"ruleId":"254","severity":1,"message":"258","line":16,"column":8,"nodeType":"256","messageId":"257","endLine":16,"endColumn":23},{"ruleId":"254","severity":1,"message":"259","line":30,"column":10,"nodeType":"256","messageId":"257","endLine":30,"endColumn":15},{"ruleId":"251","severity":1,"message":"252","line":227,"column":11,"nodeType":"253","endLine":227,"endColumn":29},{"ruleId":"251","severity":1,"message":"252","line":88,"column":11,"nodeType":"253","endLine":88,"endColumn":29},{"ruleId":"251","severity":1,"message":"252","line":119,"column":11,"nodeType":"253","endLine":119,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":123,"column":13,"nodeType":"253","endLine":123,"endColumn":42},{"ruleId":"251","severity":1,"message":"252","line":148,"column":13,"nodeType":"253","endLine":148,"endColumn":42},{"ruleId":"251","severity":1,"message":"252","line":173,"column":13,"nodeType":"253","endLine":173,"endColumn":42},{"ruleId":"254","severity":1,"message":"260","line":15,"column":9,"nodeType":"256","messageId":"257","endLine":15,"endColumn":16},{"ruleId":"251","severity":1,"message":"252","line":86,"column":11,"nodeType":"253","endLine":86,"endColumn":45},{"ruleId":"261","severity":1,"message":"262","line":58,"column":7,"nodeType":"263","endLine":58,"endColumn":10},{"ruleId":"251","severity":1,"message":"252","line":160,"column":17,"nodeType":"253","endLine":163,"endColumn":19},{"ruleId":"254","severity":1,"message":"264","line":9,"column":10,"nodeType":"256","messageId":"257","endLine":9,"endColumn":15},{"ruleId":"254","severity":1,"message":"255","line":14,"column":3,"nodeType":"256","messageId":"257","endLine":14,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":278,"column":15,"nodeType":"253","endLine":278,"endColumn":81},{"ruleId":"254","severity":1,"message":"265","line":608,"column":7,"nodeType":"256","messageId":"257","endLine":608,"endColumn":16},{"ruleId":"254","severity":1,"message":"266","line":2,"column":10,"nodeType":"256","messageId":"257","endLine":2,"endColumn":16},{"ruleId":"254","severity":1,"message":"267","line":3,"column":10,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":55,"column":11,"nodeType":"253","endLine":55,"endColumn":29},{"ruleId":"254","severity":1,"message":"268","line":1,"column":17,"nodeType":"256","messageId":"257","endLine":1,"endColumn":25},{"ruleId":"254","severity":1,"message":"268","line":1,"column":17,"nodeType":"256","messageId":"257","endLine":1,"endColumn":25},{"ruleId":"254","severity":1,"message":"266","line":2,"column":10,"nodeType":"256","messageId":"257","endLine":2,"endColumn":16},{"ruleId":"254","severity":1,"message":"269","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":13},{"ruleId":"254","severity":1,"message":"270","line":5,"column":10,"nodeType":"256","messageId":"257","endLine":5,"endColumn":13},{"ruleId":"254","severity":1,"message":"271","line":30,"column":9,"nodeType":"256","messageId":"257","endLine":30,"endColumn":16},{"ruleId":"254","severity":1,"message":"267","line":2,"column":10,"nodeType":"256","messageId":"257","endLine":2,"endColumn":14},{"ruleId":"254","severity":1,"message":"272","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"254","severity":1,"message":"273","line":26,"column":9,"nodeType":"256","messageId":"257","endLine":26,"endColumn":18},{"ruleId":"254","severity":1,"message":"274","line":30,"column":9,"nodeType":"256","messageId":"257","endLine":30,"endColumn":17},{"ruleId":"254","severity":1,"message":"275","line":1,"column":17,"nodeType":"256","messageId":"257","endLine":1,"endColumn":26},{"ruleId":"254","severity":1,"message":"276","line":16,"column":9,"nodeType":"256","messageId":"257","endLine":16,"endColumn":21},{"ruleId":"251","severity":1,"message":"252","line":55,"column":9,"nodeType":"253","endLine":55,"endColumn":29},{"ruleId":"254","severity":1,"message":"264","line":12,"column":10,"nodeType":"256","messageId":"257","endLine":12,"endColumn":15},{"ruleId":"251","severity":1,"message":"252","line":104,"column":23,"nodeType":"253","endLine":104,"endColumn":42},{"ruleId":"254","severity":1,"message":"277","line":1,"column":17,"nodeType":"256","messageId":"257","endLine":1,"endColumn":23},{"ruleId":"254","severity":1,"message":"268","line":1,"column":25,"nodeType":"256","messageId":"257","endLine":1,"endColumn":33},{"ruleId":"254","severity":1,"message":"275","line":1,"column":35,"nodeType":"256","messageId":"257","endLine":1,"endColumn":44},{"ruleId":"254","severity":1,"message":"278","line":4,"column":17,"nodeType":"256","messageId":"257","endLine":4,"endColumn":27},{"ruleId":"254","severity":1,"message":"279","line":4,"column":29,"nodeType":"256","messageId":"257","endLine":4,"endColumn":47},{"ruleId":"254","severity":1,"message":"280","line":4,"column":49,"nodeType":"256","messageId":"257","endLine":4,"endColumn":62},{"ruleId":"254","severity":1,"message":"281","line":19,"column":9,"nodeType":"256","messageId":"257","endLine":19,"endColumn":24},{"ruleId":"254","severity":1,"message":"282","line":20,"column":11,"nodeType":"256","messageId":"257","endLine":20,"endColumn":17},{"ruleId":"254","severity":1,"message":"275","line":1,"column":17,"nodeType":"256","messageId":"257","endLine":1,"endColumn":26},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'setLoginActive' is defined but never used.","Identifier","unusedVar","'ReactHtmlParser' is defined but never used.","'title' is assigned a value but never used.","'feather' is assigned a value but never used.","react-hooks/exhaustive-deps","The \"a\" literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'mixin' is defined but never used.","'ModifyBtn' is assigned a value but never used.","'COLORS' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'API' is defined but never used.","'history' is assigned a value but never used.","'styled' is defined but never used.","'heartLike' is assigned a value but never used.","'iconLike' is assigned a value but never used.","'useEffect' is defined but never used.","'googleSignup' is assigned a value but never used.","'useRef' is defined but never used.","'AxiosError' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'AxiosResponse' is defined but never used.","'getGoogleOAuth2' is assigned a value but never used.","'oAuth2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]