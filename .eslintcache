[{"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\index.tsx":"1","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\routes.tsx":"2","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\index.ts":"3","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\registerModal.ts":"4","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\googleFirstLogin.ts":"5","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\index.ts":"6","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\index.ts":"7","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\index.ts":"8","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\mixin.ts":"9","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\themeColor.ts":"10","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\globalStyle.ts":"11","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\MentorDetailContainer.tsx":"12","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\NavContainer.tsx":"13","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\KobbubakDetailContainer.tsx":"14","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AboutPage.tsx":"15","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\FeatherDetail.tsx":"16","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\MainPage.tsx":"17","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AlcoholDetail.tsx":"18","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\ThemeList.tsx":"19","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreList.tsx":"20","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostWriting.tsx":"21","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostDetail.tsx":"22","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostList.tsx":"23","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\TodayRandom.tsx":"24","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreDetail.tsx":"25","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\index.ts":"26","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\config.ts":"27","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard2.tsx":"28","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard.tsx":"29","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\MetorTheme.tsx":"30","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\KobbubakTheme.tsx":"31","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\PostReply.tsx":"32","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\Posts.tsx":"33","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\googleFirstLogin.ts":"34","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\registerModal.ts":"35","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\index.ts":"36","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Footer.tsx":"37","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\PeoplePick.tsx":"38","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\EditCommentModal.tsx":"39","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\DeleteCommentModal.tsx":"40","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Nav.tsx":"41","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\LoginForm.tsx":"42","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\GoogleLoginComponent.tsx":"43","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Login.tsx":"44","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Signup.tsx":"45","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\SignupForm.tsx":"46"},{"size":482,"mtime":1613395572190,"results":"47","hashOfConfig":"48"},{"size":2047,"mtime":1613395572228,"results":"49","hashOfConfig":"48"},{"size":214,"mtime":1613395572235,"results":"50","hashOfConfig":"48"},{"size":468,"mtime":1613395572235,"results":"51","hashOfConfig":"48"},{"size":347,"mtime":1613395572234,"results":"52","hashOfConfig":"48"},{"size":208,"mtime":1612352299974,"results":"53","hashOfConfig":"48"},{"size":89,"mtime":1610800928136,"results":"54","hashOfConfig":"48"},{"size":609,"mtime":1612352299995,"results":"55","hashOfConfig":"48"},{"size":667,"mtime":1610800928138,"results":"56","hashOfConfig":"48"},{"size":265,"mtime":1613395572238,"results":"57","hashOfConfig":"48"},{"size":686,"mtime":1613483015324,"results":"58","hashOfConfig":"48"},{"size":666,"mtime":1612352299969,"results":"59","hashOfConfig":"48"},{"size":855,"mtime":1613395572186,"results":"60","hashOfConfig":"48"},{"size":687,"mtime":1612352299968,"results":"61","hashOfConfig":"48"},{"size":114,"mtime":1613395572192,"results":"62","hashOfConfig":"48"},{"size":2716,"mtime":1613548064458,"results":"63","hashOfConfig":"48"},{"size":6054,"mtime":1613395572203,"results":"64","hashOfConfig":"48"},{"size":5572,"mtime":1613548064455,"results":"65","hashOfConfig":"48"},{"size":112,"mtime":1610801722201,"results":"66","hashOfConfig":"48"},{"size":2804,"mtime":1613395572219,"results":"67","hashOfConfig":"48"},{"size":2318,"mtime":1613548064468,"results":"68","hashOfConfig":"48"},{"size":14249,"mtime":1613548064461,"results":"69","hashOfConfig":"48"},{"size":3979,"mtime":1613548064464,"results":"70","hashOfConfig":"48"},{"size":8517,"mtime":1613548674136,"results":"71","hashOfConfig":"48"},{"size":18755,"mtime":1613548615949,"results":"72","hashOfConfig":"48"},{"size":71,"mtime":1613395572232,"results":"73","hashOfConfig":"48"},{"size":97,"mtime":1613548148125,"results":"74","hashOfConfig":"48"},{"size":1685,"mtime":1613395572227,"results":"75","hashOfConfig":"48"},{"size":1514,"mtime":1613548064477,"results":"76","hashOfConfig":"48"},{"size":577,"mtime":1611559283150,"results":"77","hashOfConfig":"48"},{"size":639,"mtime":1611559283148,"results":"78","hashOfConfig":"48"},{"size":1500,"mtime":1613548064473,"results":"79","hashOfConfig":"48"},{"size":829,"mtime":1613548064475,"results":"80","hashOfConfig":"48"},{"size":162,"mtime":1613395572231,"results":"81","hashOfConfig":"48"},{"size":300,"mtime":1613395572232,"results":"82","hashOfConfig":"48"},{"size":556,"mtime":1613395572182,"results":"83","hashOfConfig":"48"},{"size":98,"mtime":1610800928069,"results":"84","hashOfConfig":"48"},{"size":5788,"mtime":1613395572177,"results":"85","hashOfConfig":"48"},{"size":2518,"mtime":1613548064441,"results":"86","hashOfConfig":"48"},{"size":2436,"mtime":1613548064439,"results":"87","hashOfConfig":"48"},{"size":4931,"mtime":1613548116964,"results":"88","hashOfConfig":"48"},{"size":2802,"mtime":1613548116962,"results":"89","hashOfConfig":"48"},{"size":3139,"mtime":1613548117034,"results":"90","hashOfConfig":"48"},{"size":1816,"mtime":1613548116960,"results":"91","hashOfConfig":"48"},{"size":3857,"mtime":1613548117026,"results":"92","hashOfConfig":"48"},{"size":4220,"mtime":1613548117016,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1pfk716",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"96"},"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\index.tsx",[],["202","203"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\routes.tsx",["204"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle, COLORS } from \"./styles\";\r\nimport { Footer } from \"./components\";\r\nimport {\r\n  Nav,\r\n  MentorDetailContainer,\r\n  KobbubakDetailContainer\r\n} from \"./containers\";\r\nimport {\r\n  AboutPage,\r\n  AlcoholDetail,\r\n  FeatherDetail,\r\n  MainPage,\r\n  PostDetail,\r\n  PostList,\r\n  PostWriting,\r\n  StoreDetail,\r\n  StoreList,\r\n  ThemeList,\r\n  TodayRandom\r\n} from \"./pages\";\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={COLORS}>\r\n          <GlobalStyle />\r\n          <Router>\r\n            <Nav />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={MainPage} />\r\n              <Route exact path=\"/about\" component={AboutPage} />\r\n              <Route exact path=\"/alcohol-detail\" component={AlcoholDetail} />\r\n              <Route exact path=\"/feather-detail\" component={FeatherDetail} />\r\n              <Route\r\n                exact\r\n                path=\"/kobbubak-detail\"\r\n                component={KobbubakDetailContainer}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/metor-detail\"\r\n                component={MentorDetailContainer}\r\n              />\r\n              <Route exact path=\"/store-detail/:id\" component={StoreDetail} />\r\n              <Route exact path=\"/store-list\" component={StoreList} />\r\n              <Route exact path=\"/theme-list\" component={ThemeList} />\r\n              <Route exact path=\"/today-random\" component={TodayRandom} />\r\n              <Route exact path=\"/post-detail/:id\" component={PostDetail} />\r\n              <Route exact path=\"/post-list\" component={PostList} />\r\n              <Route exact path=\"/post-writing\" component={PostWriting} />\r\n            </Switch>\r\n            {/* <Footer /> */}\r\n          </Router>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Routes;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\registerModal.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\reducers\\googleFirstLogin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\mixin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\themeColor.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\styles\\globalStyle.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\MentorDetailContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\NavContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\containers\\KobbubakDetailContainer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AboutPage.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\FeatherDetail.tsx",["205"],"import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../config\";\r\nimport StoreCard2 from \"./childComponents/StoreCard2\";\r\nimport axios from \"axios\";\r\nimport \"./FeatherDetail.scss\";\r\n\r\ninterface UserData {\r\n  featherFood: any;\r\n}\r\n\r\nexport default function FeatherDetail() {\r\n  const [featherFood, setFeatherFood] = useState<UserData | any>([]);\r\n  const feather = \"feather\";\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      axios\r\n        .get(`${API}/store/list?tag=${feather}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res\", res);\r\n          setFeatherFood(res.data.store_list.feather);\r\n        });\r\n    } else {\r\n      axios.get(`${API}/store/list?tag=${feather}`).then((res) => {\r\n        setFeatherFood(res.data.store_list.feather);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const changeLikedState = (id: any, type: string) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setFeatherFood(\r\n        featherFood?.map((data: any) => {\r\n          if (data.id === id) {\r\n            if (data.like_state) {\r\n              return {\r\n                ...data,\r\n                like_state: !data.like_state,\r\n                like_count: data.like_count - 1\r\n              };\r\n            } else {\r\n              return {\r\n                ...data,\r\n                like_state: !data.like_state,\r\n                like_count: data.like_count + 1\r\n              };\r\n            }\r\n          } else {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n      axios\r\n        .post(`${API}/store/like/${id}`, \"data\", {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => console.log(\"좋아요 통신이 완료되었습니다.\", res))\r\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"feather\">\r\n        <div className=\"logoBox\">\r\n          <div className=\"logoBox1\">\r\n            <p>GIT털 푸드</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"featherFood\">\r\n          {featherFood?.map((feather: any) => {\r\n            return (\r\n              <StoreCard2\r\n                id={feather.id}\r\n                name={feather.name}\r\n                type={\"soju\"}\r\n                image={feather.image}\r\n                likeCount={feather.like_count}\r\n                likeState={feather.like_state}\r\n                changeLikedState={changeLikedState}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\MainPage.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\AlcoholDetail.tsx",["206","207","208","209"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\ThemeList.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreList.tsx",["210","211"],"import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../config\";\r\nimport StoreCard2 from \"./childComponents/StoreCard2\";\r\nimport axios from \"axios\";\r\nimport \"./StoreList.scss\";\r\n\r\ninterface UserData {\r\n  storeList: any;\r\n}\r\n\r\nexport default function StoreList() {\r\n  const [storeList, setStoreList] = useState<UserData | any>([]);\r\n  const feather = \"feather\";\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      axios\r\n        .get(`${API}/store/list`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res\", res);\r\n          setStoreList(res.data.store_list);\r\n        });\r\n    } else {\r\n      axios.get(`${API}/store/list`).then((res) => {\r\n        setStoreList(res.data.store_list);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const changeLikedState = (id: any, type: string) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setStoreList(\r\n        storeList?.map((data: any) => {\r\n          if (data.id === id) {\r\n            if (data.like_state) {\r\n              return {\r\n                ...data,\r\n                like_state: !data.like_state,\r\n                like_count: data.like_count - 1\r\n              };\r\n            } else {\r\n              return {\r\n                ...data,\r\n                like_state: !data.like_state,\r\n                like_count: data.like_count + 1\r\n              };\r\n            }\r\n          } else {\r\n            return data;\r\n          }\r\n        })\r\n      );\r\n      axios\r\n        .post(`${API}/store/like/${id}`, \"data\", {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => console.log(\"좋아요 통신이 완료되었습니다.\", res))\r\n        .catch((err) => console.log(\"좋아요 통신이 완료되지 않았습니다.\", err));\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"storeList\">\r\n        <div className=\"storeListLogo\">\r\n          <img src=\"./images/storelist.png\"></img>\r\n        </div>\r\n        {/* <div className=\"logoBox\">\r\n          <div className=\"logoBox1\">\r\n            <p>위코더 맛집</p>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"storeFood\">\r\n          {storeList?.map((feather: any) => {\r\n            return (\r\n              <StoreCard2\r\n                id={feather.id}\r\n                name={feather.name}\r\n                image={feather.image}\r\n                type={\"soju\"}\r\n                likeCount={feather.like_count}\r\n                likeState={feather.like_state}\r\n                changeLikedState={changeLikedState}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostWriting.tsx",["212","213","214"],"import React, { useState } from \"react\";\r\nimport { COLORS } from \"../styles/themeColor\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { API } from \"../config\";\r\nimport wemeok from \"../images/wemeoktalk_2.png\";\r\nimport axios from \"axios\";\r\nimport ReactQuill from \"react-quill\"; // Typescript\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"./PostWriting.scss\";\r\n\r\nexport default function PostWriting() {\r\n  const [title, setTitle] = useState<any>({ newTitle: null });\r\n  const [content, setContent] = useState<any>(\"\");\r\n  const history = useHistory();\r\n\r\n  const contentResult = content.replace(/(<([^>]+)>)/gi, \"\");\r\n\r\n  let data = {\r\n    title: title.newTitle,\r\n    content: contentResult\r\n  };\r\n\r\n  const uploadData = () => {\r\n    axios\r\n      .post(`${API}/board`, JSON.stringify(data), {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\"),\r\n          \"Content-Type\": `application/json`\r\n        }\r\n      })\r\n      .then((res) => {\r\n        history.push(\"/post-list\");\r\n      });\r\n  };\r\n\r\n  const createPost = (value: string) => {\r\n    setContent(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postWriting\">\r\n        <div className=\"weMeokTalkLogo\">\r\n          <img src={wemeok}></img>\r\n          <p>개발자 공유 문화 잊지 말자. 그러니까 맛집도 공유하자.</p>\r\n        </div>\r\n        <div className=\"weMeokTalkList\">\r\n          <div className=\"listDiv\">\r\n            <div className=\"writingTitle\">\r\n              <p>제목</p>\r\n              <input\r\n                maxLength={50}\r\n                type=\"text/html\"\r\n                onChange={(e) =>\r\n                  setTitle({ ...title, newTitle: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"solidLine\"></div>\r\n            <div className=\"writingCenter\">\r\n              <p>내용</p>\r\n              <ReactQuill\r\n                bounds={\".quill\"}\r\n                theme={\"snow\"}\r\n                value={content}\r\n                onChange={createPost}\r\n              />\r\n            </div>\r\n            <div className=\"writerButton\">\r\n              <button onClick={uploadData}>작성</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostDetail.tsx",["215","216","217","218","219","220","221"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../config\";\r\nimport { EditCommentModal, DeleteCommentModal } from \"../components\";\r\nimport {\r\n  setSignupActive,\r\n  setLoginActive,\r\n  setFirstLogin\r\n} from \"../store/actions\";\r\nimport ReactQuill, { Quill } from \"react-quill\"; // Typescript\r\nimport axios from \"axios\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport wemeok from \"../images/wemeoktalk_2.png\";\r\nimport PostReply from \"../pages/childComponents/PostReply\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./PostDetail.scss\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n// import Essentials from \"@ckeditor/ckeditor5-essentials/src/essentials\";\r\n// import Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\r\n// import Italic from \"@ckeditor/ckeditor5-basic-styles/src/italic\";\r\n// import Paragraph from \"@ckeditor/ckeditor5-paragraph/src/paragraph\";\r\ninterface UserData {\r\n  info: any;\r\n  items: any[];\r\n}\r\n// const editorConfiguration = {\r\n//   plugins: [Essentials, Bold, Italic, Paragraph],\r\n//   toolbar: [\"bold\", \"italic\"]\r\n// };\r\nexport default function PostDetail({ match }: any) {\r\n  const [posts, setPosts] = useState<any>([]);\r\n  const [comments, setComments] = useState<any>([]);\r\n  const [comment, setComment] = useState<string>(\"\");\r\n  const [title, setTitle] = useState<any>({ newTitle: null });\r\n  const [postTitle, setPostTitle] = useState<any>(null);\r\n  const [postContent, setPostContent] = useState<any>(null);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [commentText, setCommentText] = useState<UserData | any>({\r\n    newComment: null,\r\n    updatedComment: { id: null, content: \"기존댓글~~~\" }\r\n  });\r\n  const [activeInput, setActiveInput] = useState(false);\r\n  const [countComments, setCountComments] = useState(0);\r\n  const [activePage, setActivePage] = useState<any>(1);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      //[{ 'font': [] }],\r\n      [{ header: [1, 2, 3, 4, false] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n      [\r\n        { list: \"ordered\" },\r\n        { list: \"bullet\" },\r\n        { indent: \"-1\" },\r\n        { indent: \"+1\" }\r\n      ],\r\n      [\"link\", \"image\"],\r\n      [{ align: [] }, { color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [\"clean\"]\r\n    ]\r\n  };\r\n\r\n  const formats = [\r\n    //'font',\r\n    \"header\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    \"blockquote\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"image\",\r\n    \"align\",\r\n    \"color\",\r\n    \"background\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      await axios\r\n        .get(`${API}/board/${match.params.id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          console.log(\"test\", res.data);\r\n          setPosts(res.data.board_info);\r\n          setComments(res.data.board_comments);\r\n          setCountComments(res.data.count_comments);\r\n          setTitle(res.data.board_info[0].title);\r\n          setPostContent(res.data.board_info[0].content);\r\n        });\r\n    };\r\n    fetchPosts();\r\n  }, [match.params.id]);\r\n\r\n  const onChangeComment = (e: any) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const submitChangedComment = (crud: string, commentId: number) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      if (crud === \"INSERT\") {\r\n        axios\r\n          .post(\r\n            `${API}/board/${match.params.id}/comment`,\r\n            JSON.stringify({\r\n              comment\r\n            }),\r\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\r\n          )\r\n          .then((res) => {\r\n            if (res.data.MESSAGE === \"NEED_USER_NAME\") {\r\n              alert(\"회원정보 입력 후 댓글 작성이 가능합니다.\");\r\n              dispatch(setFirstLogin(true));\r\n              dispatch(setSignupActive(true));\r\n            } else {\r\n              console.log(res);\r\n              window.location.reload();\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n\r\n      if (crud === \"UPDATE\") {\r\n        setEditModal(false);\r\n\r\n        axios\r\n          .patch(\r\n            `${API}/board/${match.params.id}/${commentId}`,\r\n            JSON.stringify({\r\n              comment: commentText.updatedComment.content\r\n            }),\r\n            { headers: { Authorization: localStorage.getItem(\"token\") } }\r\n          )\r\n          .then((res) => {\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n\r\n      if (crud === \"DELETE\") {\r\n        setDeleteModal(false);\r\n        axios\r\n          .delete(`${API}/board/${match.params.id}/${commentId}`, {\r\n            headers: {\r\n              Authorization: localStorage.getItem(\"token\")\r\n            }\r\n          })\r\n          .then((res) => {\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n\r\n  const updateComment = (e: any) => {\r\n    const { value } = e.target;\r\n\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        ...commentText.updatedComment,\r\n        content: value\r\n      }\r\n    });\r\n  };\r\n\r\n  const clickEdit = (comment: any) => {\r\n    setEditModal(true);\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        id: comment.comment_id,\r\n        content: comment.comment_content\r\n      }\r\n    });\r\n  };\r\n\r\n  const clickDeleteComment = (commentId: any) => {\r\n    setDeleteModal(true);\r\n    setCommentText({\r\n      ...commentText,\r\n      updatedComment: {\r\n        ...commentText.updatedComment,\r\n        id: commentId\r\n      }\r\n    });\r\n  };\r\n\r\n  // const contentResult = postContent.replace(/(<([^>]+)>)/gi, \"\");\r\n  // const test = postContent.replace(/<br\\s*\\/?>/gm, \"\\n\");\r\n  // const test1 = postContent.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br/>\");\r\n\r\n  const patchPost = (): void => {\r\n    const data = {\r\n      title: postTitle,\r\n      content: postContent\r\n    };\r\n\r\n    axios.patch(`${API}/board/${match.params.id}`, JSON.stringify(data), {\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"token\")\r\n      }\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  const deletePost = (): void => {\r\n    if (window.confirm(\"게시물을 삭제하시겠습까?\")) {\r\n      axios\r\n        .delete(`${API}/board/${match.params.id}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          history.push(\"/post-list\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (pageNumber: any) => {\r\n    axios\r\n      .get(`${API}/board/${match.params.id}?offset=${(pageNumber - 1) * 5}`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then((res) => {\r\n        setComments(res.data.board_comments);\r\n      });\r\n    setActivePage(pageNumber);\r\n  };\r\n\r\n  const changePostTitle = (e: any) => {\r\n    const { value } = e.target;\r\n    setPostTitle(value);\r\n  };\r\n\r\n  const changePostContent = (html: any) => {\r\n    setPostContent(html);\r\n  };\r\n  console.log(\"test\", postContent);\r\n  return (\r\n    <>\r\n      <div className=\"postDetail\">\r\n        <div className=\"weMeokTalkLogo\">\r\n          <img src={wemeok}></img>\r\n          <p>개발자 공유 문화 잊지 말자. 그러니까 맛집도 공유하자.</p>\r\n        </div>\r\n        <div className=\"weMeokTalkList\">\r\n          <div className=\"listDiv\">\r\n            {activeInput ? (\r\n              <>\r\n                <div className=\"editListDiv\">\r\n                  <div className=\"writingTitle\">\r\n                    <p>제목</p>\r\n                    <input\r\n                      type=\"text/html\"\r\n                      value={postTitle}\r\n                      onChange={changePostTitle}\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"solidLine\"></div>\r\n                  <div className=\"writerCreated\">\r\n                    <p>{posts[0]?.writer}</p>\r\n                    <p>|</p>\r\n                    <p>{posts[0]?.created_at}</p>\r\n                  </div>\r\n                  <div className=\"writingCenter\">\r\n                    <p>내용</p>\r\n                    {/* <CKEditor\r\n                      editor={ClassicEditor}\r\n                      data={postContent}\r\n                      onReady={(editor: any) => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log(\"Editor is ready to use!\", editor);\r\n                      }}\r\n                      onChange={(event: any, editor: any) => {\r\n                        const data = editor.getData();\r\n                        console.log({ event, editor, data });\r\n                        setPostContent(data);\r\n                        console.log(\"제발\", postContent);\r\n                      }}\r\n                      onBlur={(event: any, editor: any) => {\r\n                        console.log(\"Blur.\", editor);\r\n                      }}\r\n                      onFocus={(event: any, editor: any) => {\r\n                        console.log(\"Focus.\", editor);\r\n                      }}\r\n                      config={custom_config}\r\n                    /> */}\r\n                    <ReactQuill\r\n                      bounds={\".quill\"}\r\n                      theme={\"snow\"}\r\n                      value={postContent}\r\n                      onChange={(content, delta, source, editor) =>\r\n                        changePostContent(editor.getHTML())\r\n                      }\r\n                      modules={modules}\r\n                      formats={formats}\r\n                    />\r\n                  </div>\r\n                  <div className=\"writerButton\">\r\n                    <button\r\n                      onClick={() => {\r\n                        patchPost();\r\n                        setActiveInput(false);\r\n                      }}\r\n                    >\r\n                      수정\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"detailTitle\">\r\n                  <p className=\"titleBold\">제목</p>\r\n                  <p className=\"title\">{posts[0]?.title}</p>\r\n                </div>\r\n                <div className=\"solidLine\"></div>\r\n                <div className=\"writerCreated\">\r\n                  <p className=\"wirter\">{posts[0]?.writer}</p>\r\n                  <p className=\"created\">{posts[0]?.created_at}</p>\r\n                </div>\r\n                <div\r\n                  className=\"contentDiv\"\r\n                  dangerouslySetInnerHTML={{ __html: posts[0]?.content }}\r\n                />\r\n                {/* <div className=\"contentDiv\">\r\n                  {ReactHtmlParser(posts[0]?.content)}\r\n                </div> */}\r\n                {/* <div className=\"contentDiv\">{posts[0]?.content}</div> */}\r\n                {posts[0]?.writer_id ===\r\n                  Number(localStorage.getItem(\"user_id_number\")) && (\r\n                  <>\r\n                    <div className=\"editDeleteDiv\">\r\n                      <p\r\n                        className=\"edit\"\r\n                        onClick={() => {\r\n                          setActiveInput(true);\r\n                          setPostTitle(posts[0]?.title);\r\n                        }}\r\n                      >\r\n                        수정\r\n                      </p>\r\n\r\n                      <p className=\"delete\" onClick={deletePost}>\r\n                        삭제\r\n                      </p>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <div className=\"solidLine\"></div>\r\n            <div className=\"commentsInputDiv\">\r\n              <p>댓글 ({countComments})</p>\r\n              <input\r\n                maxLength={149}\r\n                value={comment}\r\n                onChange={onChangeComment}\r\n              ></input>\r\n              <span onClick={() => submitChangedComment(\"INSERT\", 0)}>\r\n                등록\r\n              </span>\r\n            </div>\r\n            {comments?.map((comments: any) => {\r\n              return (\r\n                <PostReply\r\n                  comments={comments}\r\n                  id={comments.comment_id}\r\n                  writer={comments.comment_writer}\r\n                  content={comments.comment_content}\r\n                  created_at={comments.comment_created_at}\r\n                  writer_id={comments.comment_writer_id}\r\n                  clickEdit={clickEdit}\r\n                  clickDeleteComment={clickDeleteComment}\r\n                />\r\n              );\r\n            })}\r\n            <Pagination\r\n              activePage={activePage}\r\n              itemsCountPerPage={5}\r\n              totalItemsCount={countComments}\r\n              pageRangeDisplayed={5}\r\n              hideFirstLastPages\r\n              itemClassPrev={\"prevPageText\"}\r\n              itemClassNext={\"nextPageText\"}\r\n              prevPageText={\"◀\"}\r\n              nextPageText={\"▶\"}\r\n              onChange={handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {editModal && (\r\n        <EditCommentModal\r\n          editModal={editModal}\r\n          setEditModal={setEditModal}\r\n          updatedComment={commentText.updatedComment}\r\n          submitChangedComment={submitChangedComment}\r\n          updateComment={updateComment}\r\n        />\r\n      )}\r\n\r\n      {deleteModal && (\r\n        <DeleteCommentModal\r\n          deleteModal={deleteModal}\r\n          setDeleteModal={setDeleteModal}\r\n          submitChangedComment={submitChangedComment}\r\n          commentId={commentText.updatedComment.id}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\PostList.tsx",["222","223"],"import React, { useState, useEffect } from \"react\";\r\nimport Posts from \"./childComponents/Posts\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport axios from \"axios\";\r\nimport wemeok from \"../images/wemeoktalk_2.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { API } from \"../config\";\r\nimport \"./PostList.scss\";\r\n\r\ninterface PostData {\r\n  posts: any;\r\n}\r\nexport default function App() {\r\n  const [posts, setPosts] = useState<PostData | any>([]);\r\n  const [activePage, setActivePage] = useState<any>(1);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      await axios\r\n        .get(`${API}/board`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then((res) => {\r\n          setPosts(res.data);\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n          } else if (error.request) {\r\n            // 요청이 이루어 졌으나 응답을 받지 못했습니다.\r\n            // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\r\n            // Node.js의 http.ClientRequest 인스턴스입니다.\r\n            console.log(error.request);\r\n          } else {\r\n            // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\r\n            console.log(\"Error\", error.message);\r\n          }\r\n          console.log(error.config);\r\n        });\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handlePageChange = (pageNumber: any) => {\r\n    axios\r\n      .get(`${API}/board?offset=${(pageNumber - 1) * 5}`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then((res) => {\r\n        setPosts(res.data);\r\n      });\r\n    setActivePage(pageNumber);\r\n  };\r\n  console.log(posts);\r\n  const loginCheck = () => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      history.push(\"./post-writing\");\r\n    } else {\r\n      alert(\"로그인을 해주세요!\");\r\n    }\r\n  };\r\n  console.log(\"1\", posts);\r\n  return (\r\n    <>\r\n      <div className=\"postList\">\r\n        <div className=\"weMeokTalkLogo\">\r\n          <img src={wemeok}></img>\r\n          <p>개발자 공유 문화 잊지 말자. 그러니까 맛집도 공유하자.</p>\r\n        </div>\r\n        <div className=\"weMeokTalkList\">\r\n          <div className=\"listDiv\">\r\n            <div className=\"listTitleBold\">\r\n              <p className=\"titleBold\">제목</p>\r\n              <p className=\"writerBold\">작성자</p>\r\n              <p className=\"createdAtBold\">등록일</p>\r\n              <p className=\"commentsBold\">댓글</p>\r\n            </div>\r\n            <div className=\"listSolidBold\"></div>\r\n            {posts.board_list?.map((post: any) => {\r\n              return (\r\n                <Posts\r\n                  id={post.id}\r\n                  title={post.title}\r\n                  writer={post.writer}\r\n                  created_at={post.created_at}\r\n                  comments={post.comments}\r\n                />\r\n              );\r\n            })}\r\n            <div className=\"writerButton\">\r\n              <button onClick={loginCheck}>글쓰기</button>\r\n            </div>\r\n            <Pagination\r\n              activePage={activePage}\r\n              itemsCountPerPage={5}\r\n              totalItemsCount={posts.total_board}\r\n              pageRangeDisplayed={5}\r\n              hideFirstLastPages\r\n              itemClassPrev={\"prevPageText\"}\r\n              itemClassNext={\"nextPageText\"}\r\n              prevPageText={\"◀\"}\r\n              nextPageText={\"▶\"}\r\n              onChange={handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\TodayRandom.tsx",["224","225","226","227"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\StoreDetail.tsx",["228","229","230","231"],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\config.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard2.tsx",["232","233"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  id: number;\r\n  type: string;\r\n  image: string;\r\n  name: string;\r\n  likeCount: number;\r\n  likeState: boolean;\r\n  changeLikedState: (id: any, type: string) => void;\r\n}\r\n\r\nexport default function StoreCard({\r\n  id,\r\n  image,\r\n  name,\r\n  type,\r\n  likeCount,\r\n  likeState,\r\n  changeLikedState\r\n}: Props) {\r\n  const [fullLike, setFullLike] = useState<boolean>(true);\r\n  const history = useHistory();\r\n\r\n  const heartLike = () => {\r\n    setFullLike(!fullLike);\r\n  };\r\n\r\n  const iconLike = fullLike ? \"./images/heart.png\" : \"./images/fullheart.png\";\r\n  return (\r\n    <>\r\n      <div className=\"storeCard\">\r\n        <div className=\"rankingComponents\">\r\n          <div\r\n            className=\"storeHeader\"\r\n            onClick={() => history.push(`/store-detail/${id}`)}\r\n          >\r\n            <p>Weeeating</p>\r\n            <hr></hr>\r\n            <img alt=\"storeImg\" src={image}></img>\r\n            <hr></hr>\r\n          </div>\r\n          <div className=\"storeFooter\">\r\n            <p className=\"foodName\">{name}</p>\r\n            <span onClick={() => changeLikedState(id, type)}>\r\n              {likeState ? (\r\n                <img alt=\"Like\" src=\"./images/fullheart.png\"></img>\r\n              ) : (\r\n                <img alt=\"Like\" src=\"./images/heart.png\"></img>\r\n              )}\r\n            </span>\r\n            {/* <img\r\n              alt=\"Like\"\r\n              src={iconLike}\r\n              onClick={() => changeLikedState(id)}\r\n            ></img> */}\r\n            <p className=\"heartTotal\">{likeCount}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\StoreCard.tsx",["234"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  id: number;\r\n  top: string;\r\n  image: string;\r\n  name: string;\r\n  likeCount: number;\r\n  likeState: boolean;\r\n  changeLikedState: (id: any) => void;\r\n}\r\n\r\nexport default function StoreCard({\r\n  id,\r\n  top,\r\n  image,\r\n  name,\r\n  likeCount,\r\n  likeState,\r\n  changeLikedState\r\n}: Props) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"storeCard\">\r\n        <div className=\"ranking\">\r\n          <img\r\n            alt=\"CrownIcon\"\r\n            className=\"iconCrown\"\r\n            src=\"./images/crown.png\"\r\n          ></img>\r\n          <p>{top}</p>\r\n        </div>\r\n        <div className=\"rankingComponents\">\r\n          <div\r\n            className=\"storeHeader\"\r\n            onClick={() => history.push(`/store-detail/${id}`)}\r\n          >\r\n            <p>Weeeating</p>\r\n            <hr></hr>\r\n            <img alt=\"storeImg\" src={image}></img>\r\n            <hr></hr>\r\n          </div>\r\n          <div className=\"storeFooter\">\r\n            <p className=\"foodName\">{name}</p>\r\n            <span onClick={() => changeLikedState(id)}>\r\n              {likeState ? (\r\n                <img alt=\"Like\" src=\"./images/fullheart.png\"></img>\r\n              ) : (\r\n                <img alt=\"Like\" src=\"./images/heart.png\"></img>\r\n              )}\r\n            </span>\r\n            <p className=\"heartTotal\">{likeCount}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\MetorTheme.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\KobbubakTheme.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\PostReply.tsx",["235","236","237","238","239"],"import React, { useState } from \"react\";\r\nimport { COLORS } from \"../../styles/themeColor\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../../config\";\r\n\r\ninterface PostReplyData {\r\n  id: number;\r\n  content: string;\r\n  writer: string;\r\n  created_at: string;\r\n  writer_id: number;\r\n  comments: any;\r\n  clickEdit: (comment: any) => void;\r\n  clickDeleteComment: (comment: any) => void;\r\n  // submitChangedComment: (crud: string, commentId: number) => void\r\n}\r\n\r\nexport default function PostReply({\r\n  id,\r\n  content,\r\n  writer,\r\n  created_at,\r\n  writer_id,\r\n  comments,\r\n  clickEdit,\r\n  clickDeleteComment\r\n}: // submitChangedComment\r\nPostReplyData) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"comments\" key={id}>\r\n      <span className=\"commentsWriter\">{writer}</span>\r\n      <div className=\"commentDiv\">\r\n        <p className=\"commentContent\">{content}</p>\r\n        <span className=\"commentCreated\">({created_at})</span>\r\n        {writer_id === Number(localStorage.getItem(\"user_id_number\")) && (\r\n          <div className=\"modifyDiv\">\r\n            <p\r\n              className=\"commentEdit\"\r\n              onClick={() => {\r\n                clickEdit(comments);\r\n              }}\r\n            >\r\n              수정\r\n            </p>\r\n            <p className=\"commentDelete\" onClick={() => clickDeleteComment(id)}>\r\n              삭제\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\pages\\childComponents\\Posts.tsx",["240","241"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface PostData {\r\n  id: string | number | null | undefined;\r\n  title: React.ReactNode;\r\n  writer: string;\r\n  created_at: string;\r\n  comments: number;\r\n}\r\nexport default function Posts({\r\n  id,\r\n  title,\r\n  writer,\r\n  created_at,\r\n  comments\r\n}: PostData) {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"listTitle\"\r\n        key={id}\r\n        onClick={() => history.push(`/post-detail/${id}`)}\r\n      >\r\n        <p className=\"title\">{title}</p>\r\n        <p className=\"writer \">{writer}</p>\r\n        <p className=\"createdAt\">{created_at}</p>\r\n        <p className=\"comments\">{comments}</p>\r\n      </div>\r\n      <div className=\"listSolid\"></div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\googleFirstLogin.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\store\\actions\\registerModal.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\index.ts",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Footer.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\PeoplePick.tsx",["242","243"],"import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  IoIosArrowBack,\r\n  IoIosArrowForward,\r\n  IoIosAddCircle\r\n} from \"react-icons/io\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { mixin } from \"../styles\";\r\n\r\ninterface IProps {\r\n  info: never[];\r\n  TITLE: string[];\r\n}\r\n\r\nfunction SampleNextArrow(props: any) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <img\r\n      alt=\"rightArrow\"\r\n      src=\"./images/arrow-right.png\"\r\n      className={className}\r\n      style={{\r\n        ...style,\r\n        display: \"block\",\r\n        width: \"2.5rem\",\r\n        height: \"2.5rem\",\r\n        top: \"-43px\",\r\n        left: \"1001px\"\r\n      }}\r\n      onClick={onClick}\r\n    ></img>\r\n  );\r\n}\r\n\r\nfunction SamplePrevArrow(props: any) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <img\r\n      alt=\"rightArrow\"\r\n      src=\"./images/arrow-left.png\"\r\n      className={className}\r\n      style={{\r\n        ...style,\r\n        display: \"block\",\r\n        width: \"2.5rem\",\r\n        height: \"2.5rem\",\r\n        top: \"-43px\",\r\n        left: \"951px\"\r\n      }}\r\n      onClick={onClick}\r\n    ></img>\r\n  );\r\n}\r\n\r\nexport default function PeoplePick({ info, TITLE }: IProps) {\r\n  const history = useHistory();\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    speed: 1000,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    arrows: true,\r\n    // centerPadding: \"47px\",\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    className: \"slides\"\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Header>\r\n          <Title>\r\n            <p>{TITLE[0]}</p>\r\n            <p>{TITLE[1]}</p>\r\n          </Title>\r\n          <Line></Line>\r\n          <Arrow>\r\n            <div className=\"left arrow\">\r\n              <IoIosArrowBack className=\"arrowIcon\" />\r\n            </div>\r\n            <div className=\"right arrow\">\r\n              <IoIosArrowForward className=\"arrowIcon\" />\r\n            </div>\r\n          </Arrow>\r\n        </Header>\r\n        <CardWrapper>\r\n          <Slider {...settings}>\r\n            {info.length &&\r\n              info.map(\r\n                ({ id, image, name, position, store_id, store, desc }: any) => (\r\n                  <CardEach id={id}>\r\n                    <Profile>\r\n                      <img src={image} />\r\n                      <div className=\"name\">{name}</div>\r\n                      <div className=\"position\">{position}</div>\r\n                    </Profile>\r\n                    <Desc>\r\n                      <div className=\"storeHeader\">\r\n                        <span className=\"decoTitle\">\" </span>\r\n                        <span className=\"storeTitle\">{store}</span>\r\n                        <span className=\"decoTitle\"> \"</span>\r\n                      </div>\r\n                      <div className=\"storeDesc\">{desc}</div>\r\n                    </Desc>\r\n                    <MoreBtn>\r\n                      <span\r\n                        className=\"seeStoreInfo\"\r\n                        onClick={() =>\r\n                          history.push(`/store-detail/${store_id}`)\r\n                        }\r\n                      >\r\n                        맛집 구경하기\r\n                      </span>\r\n                      <IoIosAddCircle className=\"btnIcon\" />\r\n                    </MoreBtn>\r\n                  </CardEach>\r\n                )\r\n              )}\r\n          </Slider>\r\n        </CardWrapper>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 55rem;\r\n  background-color: ${({ theme }) => theme.mentorBack};\r\n  line-height: 1.3;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  margin: 5rem auto;\r\n  padding-top: 3rem;\r\n  width: 65rem;\r\n`;\r\n\r\nconst Header = styled.section`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  width: 55rem;\r\n  font-size: 2.5rem;\r\n  letter-spacing: 0.4rem;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  margin-right: 1rem;\r\n  width: 100%;\r\n  height: 1.25rem;\r\n  border-top: 2px solid ${({ theme }) => theme.borderGray};\r\n`;\r\n\r\nconst Arrow = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n\r\n  .arrow {\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    background-color: #0000000d;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .left {\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  .right {\r\n  }\r\n\r\n  .arrowIcon {\r\n    width: 50%;\r\n    height: 50%;\r\n    color: ${({ theme }) => theme.buttonGray};\r\n  }\r\n`;\r\n\r\nconst CardWrapper = styled.div``;\r\n\r\nconst CardEach = styled.div`\r\n  position: relative;\r\n  float: left;\r\n  width: 33.33%;\r\n  height: 40rem;\r\n  padding-right: 1rem;\r\n  outline: none;\r\n`;\r\n\r\nconst Profile = styled.section`\r\n  padding: 1.25rem;\r\n\r\n  img {\r\n    border-radius: 50%;\r\n    width: 15rem;\r\n    height: 15rem;\r\n  }\r\n\r\n  .name {\r\n    font-size: 1.3rem;\r\n    font-weight: 900;\r\n    line-height: 1.14;\r\n    margin-top: 1.94rem;\r\n  }\r\n\r\n  .position {\r\n    margin-top: 0.6rem;\r\n    font-size: 1rem;\r\n    line-height: 1.07;\r\n  }\r\n`;\r\n\r\nconst Desc = styled.section`\r\n  line-break: anywhere;\r\n  padding: 1.25rem 1.13rem;\r\n  line-height: 1.88;\r\n  margin-bottom: 2.25rem;\r\n\r\n  .storeHeader {\r\n    .decoTitle {\r\n    }\r\n    .storeTitle {\r\n      font-weight: 900;\r\n      font-size: 1.15rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MoreBtn = styled.span`\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  margin: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 7rem;\r\n  height: 1.5rem;\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0rem;\r\n\r\n  .btnIcon {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\EditCommentModal.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\DeleteCommentModal.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Nav.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\LoginForm.tsx",["244"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GoogleLoginComponent } from \"./index\";\r\n\r\ninterface IProps {\r\n  handleChange: (e: any) => void;\r\n  submitLogin: () => void;\r\n}\r\n\r\ninterface StateForStyle {\r\n  short?: boolean;\r\n  needSpace?: boolean;\r\n  buttons?: boolean;\r\n}\r\n\r\nexport default function LoginForm({ handleChange, submitLogin }: IProps) {\r\n  return (\r\n    <Container>\r\n      <Title>로그인</Title>\r\n      {/* <InfoSection method=\"POST\"> */}\r\n      <BlockWrapper>\r\n        <Subject>이메일</Subject>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          required\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>비밀번호</Subject>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper buttons>\r\n        <GoogleLoginComponent />\r\n        <LoginBtn\r\n          onClick={submitLogin}\r\n          type=\"submit\"\r\n          value=\"로그인\"\r\n          className=\"button\"\r\n        ></LoginBtn>\r\n      </BlockWrapper>\r\n      {/* </InfoSection> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 2em 1.5em;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${({ theme }) => theme.mainYellow};\r\n  height: 1em;\r\n  text-align: center;\r\n  font-size: 6em;\r\n  font-weight: 900;\r\n  margin-top: 0.8em;\r\n  margin-bottom: 0.7em;\r\n  letter-spacing: 0.2em;\r\n`;\r\n\r\nconst InfoSection = styled.form`\r\n  font-family: \"Noto Sans KR\";\r\n  margin: 0 2.5em;\r\n  height: 20em;\r\n`;\r\n\r\nconst BlockWrapper = styled.div<StateForStyle>`\r\n  margin: ${({ buttons }) => (buttons ? \"5.7em 0 0\" : \"3em 0\")};\r\n  height: 2.5em;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  .button {\r\n    background-color: ${({ theme }) => theme.lightYellow};\r\n  }\r\n`;\r\n\r\nconst Subject = styled.div<StateForStyle>`\r\n  text-align: center;\r\n  font-size: 1.15em;\r\n  font-weight: 500;\r\n  width: 4.5em;\r\n  margin-right: 1.5em;\r\n  margin-left: ${({ needSpace }) => (needSpace ? \"1.5em\" : \"0\")};\r\n`;\r\n\r\nconst Input = styled.input<StateForStyle>`\r\n  width: ${({ short }) => (short ? \"10.5em\" : \"30em\")};\r\n  height: 4em;\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n`;\r\n\r\nconst LoginBtn = styled.input`\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n  margin-top: 2em;\r\n  width: 28.6em;\r\n  font-size: 1.15rem;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3.5em;\r\n  text-align: center;\r\n  background-color: white;\r\n  cursor: pointer;\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\GoogleLoginComponent.tsx",["245","246","247","248","249","250","251"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { API } from \"../config\";\r\nimport {\r\n  setSignupActive,\r\n  setLoginActive,\r\n  setFirstLogin\r\n} from \"../store/actions\";\r\n\r\nexport default function GoogleLoginComponent() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  // 구글 로그인 백엔드 통신 확인 후, 필요여부 재확인 예정\r\n  const getGoogleOAuth2 = async () => {\r\n    const oAuth2 = await localStorage.getItem(\r\n      \"oauth2_ss::http://localhost:3000::1::DEFAULT::_ss_\"\r\n    );\r\n\r\n    console.log(\"oAuth2\", oAuth2);\r\n  };\r\n\r\n  const responseGoogle = (response: any) => {\r\n    console.log(\"구글로그인\");\r\n    console.log(\"response\", response);\r\n    const { accessToken } = response;\r\n    console.log(\"accessToken\", accessToken);\r\n\r\n    axios\r\n      .post(`${API}/user/login/social`, \"data\", {\r\n        headers: {\r\n          Authorization: accessToken\r\n        }\r\n      })\r\n      .then((res: any) => {\r\n        console.log(\"res\", res);\r\n        localStorage.setItem(\"token\", res.data.Authorization);\r\n        localStorage.setItem(\"user_id_number\", res.data.user_id);\r\n        localStorage.setItem(\"isAuthenticated\", \"true\");\r\n\r\n        if (res.data.FRIST_VISIT === true) {\r\n          alert(\"구글 첫 로그인입니다. 회원가입을 해주세요.\");\r\n          dispatch(setFirstLogin(true));\r\n          dispatch(setSignupActive(true));\r\n          dispatch(setLoginActive(false));\r\n        } else {\r\n          dispatch(setLoginActive(false));\r\n          history.push(\"/\");\r\n          alert(\"구글 로그인 되었습니다.\");\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"ERRORS! ===>\", err);\r\n        alert(\"구글 로그인에 Error가 발생하였습니다.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <GoogleLogin\r\n        // render={(renderProps) => (\r\n        //   <span className=\"googleBtn\">구글로 로그인하기</span>\r\n        // )}\r\n        className=\"googleLogin\"\r\n        clientId=\"675033028389-t4ff8ilfoffg5f3pcrkrcg88tqvqisv7.apps.googleusercontent.com\"\r\n        buttonText=\"구글로 로그인하기\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={(err) => console.log(\"Google Error\", err)}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 2em;\r\n  margin-right: 0.7em;\r\n  width: 28.6em;\r\n  font-size: 1.15em;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3.5em;\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  .googleBtn {\r\n    /* border: 2px solid ${({ theme }) => theme.mainYellow}; */\r\n    /* background-color: ${({ theme }) => theme.lightYellow}; */\r\n    font-size: 1.05rem;\r\n    font-weight: 700;\r\n    color: black;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Login.tsx",[],"C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\Signup.tsx",["252","253"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { API } from \"../config\";\r\nimport { SignupForm } from \"./index\";\r\n\r\nexport default function Signup() {\r\n  const [user, setUser] = useState({\r\n    number: null,\r\n    userName: null,\r\n    email: null,\r\n    password: null,\r\n    repassword: null\r\n  });\r\n\r\n  const googleSignup = useSelector(\r\n    ({ setFirstReducer }) => setFirstReducer.first\r\n  );\r\n\r\n  const handleChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const isValidateEmail = (value: any) => {\r\n    let email = value;\r\n    let regExp = /^[0-9a-zA-Z]{3}([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]{2,3}([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/;\r\n    if (!regExp.test(email)) {\r\n      alert(\"이메일형식이 올바르지 않습니다.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const isValidatePassword = (value: any) => {\r\n    let password = value;\r\n    console.log(\"password\", password);\r\n    let regExp = /^.{6}/;\r\n    if (!regExp.test(password)) {\r\n      alert(\"비밀번호는 6글자 이상이어야 합니다.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const submitSingup = async (type: string) => {\r\n    switch (type) {\r\n      case \"login\":\r\n        const checkValidation = await Promise.all([\r\n          isValidateEmail(user.email),\r\n          isValidatePassword(user.password)\r\n        ]).then((res) => res);\r\n\r\n        const isValid = !checkValidation.some((bool) => !bool);\r\n\r\n        if (isValid) {\r\n          if (user.password === user.repassword || !user.password) {\r\n            const body = {\r\n              number: user.number,\r\n              name: user.userName,\r\n              email: user.email,\r\n              password: user.password\r\n            };\r\n            axios\r\n              .post(`${API}/user/signup`, JSON.stringify({ ...body }))\r\n              .then((res) => {\r\n                if (res.data.MESSAGE === \"USER_SIGNUP_SUCCESS\") {\r\n                  localStorage.setItem(\"token\", res.data.Authorization);\r\n                  localStorage.setItem(\"user_id_number\", res.data.user_id);\r\n                  localStorage.isAuthenticated = true;\r\n                  alert(\"회원가입과 로그인이 완료되었습니다. :-)\");\r\n                  window.location.reload();\r\n                } else {\r\n                  alert(\"회원가입이 완료되지 않았습니다.\");\r\n                }\r\n              })\r\n              .catch((err) =>\r\n                console.log(\"회원가입 통신이 원활하지 않습니다.\", err)\r\n              );\r\n          } else {\r\n            alert(\r\n              \"재입력한 비밀번호가 일치하지 않습니다. 비밀번호를 다시 입력해주세요.\"\r\n            );\r\n          }\r\n        }\r\n        break;\r\n      case \"login/google\":\r\n        const body = {\r\n          number: user.number,\r\n          name: user.userName\r\n        };\r\n        axios\r\n          .post(`${API}/user/signup/google`, JSON.stringify({ ...body }), {\r\n            headers: {\r\n              Authorization: localStorage.getItem(\"token\")\r\n            }\r\n          })\r\n          .then((res) => {\r\n            console.log(\"res\", res);\r\n            if (res.data.MESSAGE === \"UPDATE_SUCCESS\") {\r\n              alert(\"회원가입이 완료되었습니다. :-)\");\r\n              localStorage.setItem(\"token\", res.data.Authorization);\r\n              localStorage.isAuthenticated = true;\r\n              window.location.reload();\r\n            } else {\r\n              alert(\"구글 회원가입이 완료되지 않았습니다.\");\r\n            }\r\n          })\r\n          .catch((err) =>\r\n            console.log(\"구글 회원가입 통신이 원활하지 않습니다.\", err)\r\n          );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const props = { handleChange, submitSingup };\r\n\r\n  return <SignupForm {...props} />;\r\n}\r\n","C:\\Users\\fanth\\desktop\\wecode\\weeeating\\src\\components\\SignupForm.tsx",["254","255","256"],"import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { API } from \"../config\";\r\n\r\ninterface IProps {\r\n  handleChange: (e: any) => void;\r\n  submitSingup: (type: string) => Promise<void>;\r\n}\r\n\r\ninterface StateForStyle {\r\n  short?: boolean;\r\n  needSpace?: boolean;\r\n}\r\n\r\nexport default function SignupForm({ handleChange, submitSingup }: IProps) {\r\n  const firstGoogle = useSelector(\r\n    ({ setFirstReducer }) => setFirstReducer.first\r\n  );\r\n\r\n  console.log(\"firstGoogle\", firstGoogle);\r\n\r\n  return (\r\n    <Container>\r\n      <Title>회원가입</Title>\r\n      {/* <InfoSection action={`${API}/user/signup`} method=\"POST\"> */}\r\n      {/* <InfoSection> */}\r\n      <BlockWrapper>\r\n        <Subject short={true}>기수</Subject>\r\n        <Input\r\n          type=\"number\"\r\n          name=\"number\"\r\n          placeholder=\"숫자만!\"\r\n          onChange={handleChange}\r\n          required\r\n          short={true}\r\n        ></Input>\r\n        <Subject short={true} needSpace={true}>\r\n          이름\r\n        </Subject>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          placeholder=\"전체이름!\"\r\n          onChange={handleChange}\r\n          required\r\n          short={true}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>이메일</Subject>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          required\r\n          placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n          disabled={firstGoogle ? true : false}\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>비밀번호</Subject>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n          placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n          disabled={firstGoogle ? true : false}\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <BlockWrapper>\r\n        <Subject>비밀번호 확인</Subject>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"repassword\"\r\n          required\r\n          placeholder={firstGoogle && \"구글 정보가 이미 입력되었습니다\"}\r\n          disabled={firstGoogle ? true : false}\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </BlockWrapper>\r\n      <Button\r\n        type=\"submit\"\r\n        value=\"회원가입\"\r\n        className=\"button\"\r\n        onClick={() => submitSingup(firstGoogle ? \"login/google\" : \"login\")}\r\n      ></Button>\r\n      {/* </InfoSection> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: 2em 2.5em;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${({ theme }) => theme.mainYellow};\r\n  height: 1em;\r\n  margin-left: 1rem;\r\n  text-align: center;\r\n  font-size: 6em;\r\n  font-weight: 900;\r\n  margin-bottom: 0.5em;\r\n  letter-spacing: 0.2em;\r\n`;\r\n\r\nconst InfoSection = styled.form`\r\n  font-family: \"Noto Sans KR\";\r\n  margin: 0 2.5em;\r\n  height: 20em;\r\n`;\r\n\r\nconst BlockWrapper = styled.div`\r\n  margin: 2em 0;\r\n  height: 2.5em;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  .button {\r\n    background-color: ${({ theme }) => theme.lightYellow};\r\n  }\r\n`;\r\n\r\nconst Subject = styled.div<StateForStyle>`\r\n  text-align: center;\r\n  font-size: 1.15em;\r\n  font-weight: 500;\r\n  width: 4.5em;\r\n  margin-right: 1.5em;\r\n  margin-left: ${({ needSpace }) => (needSpace ? \"1.5em\" : \"0\")};\r\n`;\r\n\r\nconst Input = styled.input<StateForStyle>`\r\n  width: ${({ short }) => (short ? \"8.8em\" : \"28em\")};\r\n  height: 4em;\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n`;\r\n\r\nconst Button = styled.input`\r\n  border: 2px solid ${({ theme }) => theme.mainYellow};\r\n  margin-top: 3em;\r\n  margin-left: 10rem;\r\n  width: 12em;\r\n  font-size: 1.15rem;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3em;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.lightYellow};\r\n  cursor: pointer;\r\n`;\r\n",{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":5,"column":10,"nodeType":"263","messageId":"264","endLine":5,"endColumn":16},{"ruleId":"265","severity":1,"message":"266","line":74,"column":11,"nodeType":"267","endLine":74,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":104,"column":11,"nodeType":"267","endLine":104,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":108,"column":13,"nodeType":"267","endLine":108,"endColumn":42},{"ruleId":"265","severity":1,"message":"266","line":133,"column":13,"nodeType":"267","endLine":133,"endColumn":42},{"ruleId":"265","severity":1,"message":"266","line":158,"column":13,"nodeType":"267","endLine":158,"endColumn":42},{"ruleId":"261","severity":1,"message":"268","line":13,"column":9,"nodeType":"263","messageId":"264","endLine":13,"endColumn":16},{"ruleId":"265","severity":1,"message":"266","line":73,"column":11,"nodeType":"267","endLine":73,"endColumn":45},{"ruleId":"261","severity":1,"message":"269","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":16},{"ruleId":"261","severity":1,"message":"270","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":14},{"ruleId":"265","severity":1,"message":"266","line":45,"column":11,"nodeType":"267","endLine":45,"endColumn":29},{"ruleId":"261","severity":1,"message":"271","line":8,"column":3,"nodeType":"263","messageId":"264","endLine":8,"endColumn":17},{"ruleId":"261","severity":1,"message":"272","line":11,"column":22,"nodeType":"263","messageId":"264","endLine":11,"endColumn":27},{"ruleId":"261","severity":1,"message":"273","line":18,"column":10,"nodeType":"263","messageId":"264","endLine":18,"endColumn":18},{"ruleId":"261","severity":1,"message":"274","line":19,"column":8,"nodeType":"263","messageId":"264","endLine":19,"endColumn":21},{"ruleId":"261","severity":1,"message":"275","line":20,"column":8,"nodeType":"263","messageId":"264","endLine":20,"endColumn":23},{"ruleId":"261","severity":1,"message":"276","line":37,"column":10,"nodeType":"263","messageId":"264","endLine":37,"endColumn":15},{"ruleId":"265","severity":1,"message":"266","line":264,"column":11,"nodeType":"267","endLine":264,"endColumn":29},{"ruleId":"261","severity":1,"message":"270","line":6,"column":10,"nodeType":"263","messageId":"264","endLine":6,"endColumn":14},{"ruleId":"265","severity":1,"message":"266","line":74,"column":11,"nodeType":"267","endLine":74,"endColumn":29},{"ruleId":"261","severity":1,"message":"277","line":4,"column":8,"nodeType":"263","messageId":"264","endLine":4,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":55,"column":7,"nodeType":"280","endLine":55,"endColumn":10},{"ruleId":"261","severity":1,"message":"281","line":57,"column":9,"nodeType":"263","messageId":"264","endLine":57,"endColumn":25},{"ruleId":"265","severity":1,"message":"266","line":140,"column":17,"nodeType":"267","endLine":143,"endColumn":19},{"ruleId":"261","severity":1,"message":"282","line":9,"column":10,"nodeType":"263","messageId":"264","endLine":9,"endColumn":15},{"ruleId":"261","severity":1,"message":"271","line":14,"column":3,"nodeType":"263","messageId":"264","endLine":14,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":293,"column":15,"nodeType":"267","endLine":293,"endColumn":81},{"ruleId":"261","severity":1,"message":"283","line":610,"column":7,"nodeType":"263","messageId":"264","endLine":610,"endColumn":16},{"ruleId":"261","severity":1,"message":"284","line":26,"column":9,"nodeType":"263","messageId":"264","endLine":26,"endColumn":18},{"ruleId":"261","severity":1,"message":"285","line":30,"column":9,"nodeType":"263","messageId":"264","endLine":30,"endColumn":17},{"ruleId":"261","severity":1,"message":"286","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"286","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"269","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":16},{"ruleId":"261","severity":1,"message":"287","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":13},{"ruleId":"261","severity":1,"message":"288","line":5,"column":10,"nodeType":"263","messageId":"264","endLine":5,"endColumn":13},{"ruleId":"261","severity":1,"message":"289","line":30,"column":9,"nodeType":"263","messageId":"264","endLine":30,"endColumn":16},{"ruleId":"261","severity":1,"message":"270","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":14},{"ruleId":"261","severity":1,"message":"290","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":14},{"ruleId":"261","severity":1,"message":"282","line":12,"column":10,"nodeType":"263","messageId":"264","endLine":12,"endColumn":15},{"ruleId":"265","severity":1,"message":"266","line":99,"column":23,"nodeType":"267","endLine":99,"endColumn":42},{"ruleId":"261","severity":1,"message":"291","line":68,"column":7,"nodeType":"263","messageId":"264","endLine":68,"endColumn":18},{"ruleId":"261","severity":1,"message":"292","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":23},{"ruleId":"261","severity":1,"message":"286","line":1,"column":25,"nodeType":"263","messageId":"264","endLine":1,"endColumn":33},{"ruleId":"261","severity":1,"message":"293","line":1,"column":35,"nodeType":"263","messageId":"264","endLine":1,"endColumn":44},{"ruleId":"261","severity":1,"message":"294","line":4,"column":17,"nodeType":"263","messageId":"264","endLine":4,"endColumn":27},{"ruleId":"261","severity":1,"message":"295","line":4,"column":29,"nodeType":"263","messageId":"264","endLine":4,"endColumn":47},{"ruleId":"261","severity":1,"message":"296","line":4,"column":49,"nodeType":"263","messageId":"264","endLine":4,"endColumn":62},{"ruleId":"261","severity":1,"message":"297","line":19,"column":9,"nodeType":"263","messageId":"264","endLine":19,"endColumn":24},{"ruleId":"261","severity":1,"message":"293","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":26},{"ruleId":"261","severity":1,"message":"298","line":16,"column":9,"nodeType":"263","messageId":"264","endLine":16,"endColumn":21},{"ruleId":"261","severity":1,"message":"293","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":26},{"ruleId":"261","severity":1,"message":"288","line":4,"column":10,"nodeType":"263","messageId":"264","endLine":4,"endColumn":13},{"ruleId":"261","severity":1,"message":"291","line":109,"column":7,"nodeType":"263","messageId":"264","endLine":109,"endColumn":18},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'feather' is assigned a value but never used.","'COLORS' is defined but never used.","'Link' is defined but never used.","'setLoginActive' is defined but never used.","'Quill' is defined but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'ReactHtmlParser' is defined but never used.","'title' is assigned a value but never used.","'StoreCard2' is defined but never used.","react-hooks/exhaustive-deps","The \"a\" literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'changeLikedState' is assigned a value but never used.","'mixin' is defined but never used.","'ModifyBtn' is assigned a value but never used.","'heartLike' is assigned a value but never used.","'iconLike' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'API' is defined but never used.","'history' is assigned a value but never used.","'styled' is defined but never used.","'InfoSection' is assigned a value but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'AxiosError' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'AxiosResponse' is defined but never used.","'getGoogleOAuth2' is assigned a value but never used.","'googleSignup' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]